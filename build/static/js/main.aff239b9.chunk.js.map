{"version":3,"sources":["store/types.js","store/index.js","store/action.js","component/SiderNavbar/index.jsx","api/axios.js","api/index.js","component/Header.jsx","pages/Login/index.jsx","component/SelectArea.jsx","assets/js/constant.js","pages/Card/DateAndTime.jsx","pages/Home/index.jsx","pages/Project/Detail.jsx","pages/Project/index.jsx","pages/ProjectUser/Detail.jsx","pages/ProjectUser/index.jsx","pages/Point/Detail.jsx","pages/Point/index.jsx","pages/Device/Detail.jsx","pages/Device/index.jsx","pages/Card/Detail.jsx","pages/Card/index.jsx","pages/Admin/Detail.jsx","pages/Admin/index.jsx","pages/User/Detail.jsx","pages/User/index.jsx","pages/Detect/Detail.jsx","pages/Detect/index.jsx","pages/Inspect/Detail.jsx","pages/Inspect/index.jsx","pages/Warning/Detail.jsx","component/WarnInspect/index.jsx","pages/Warning/index.jsx","App.jsx","index.js"],"names":["types","initialState","tokenInvalid","storeInstance","createStore","state","action","type","payload","setTokenInvalid","val","navbarArr","path","name","icon","SiderNavbar","props","className","map","item","to","width","visible","this","closable","footer","onClick","onSubmit","history","push","sessionStorage","clear","style","color","marginRight","fontSize","React","Component","connect","dispath","bindActionCreators","actions","withRouter","baseURL","window","globalData","host","axios","interceptors","request","use","config","headers","Object","getOwnPropertyNames","data","forEach","key","qs","stringify","formData","FormData","append","error","Promise","reject","response","defaults","withCredentials","axisoInstance","a","url","method","contentType","res","dispatch","ignoreResCode","message","msg","overviewStatistic","adminDelete","id","adminChange","userList","userChange","areaList","cardList","cardChange","detectChange","inspectAdd","inspectList","inspectChange","deviceChange","pointList","pointChange","pointListSimple","projectList","projectDelete","projectChange","projectListSimple","projectUserList","projectUserChange","projectId","userId","warningList","warningChange","Header","useState","showChangePwd","setShowChangePwd","oldPwd","setOldPwd","newPwd","setNewPwd","confirmPwd","setConfirmPwd","useHistory","overlay","Item","Modal","confirm","title","ExclamationCircleOutlined","okText","cancelText","onOk","success","onCancel","console","log","cursor","getItem","throttle","onFinish","values","old_password","MD5","toString","new_password","label","rules","required","Password","value","onChange","e","target","dependencies","getFieldValue","validator","rule","resolve","htmlType","LoginPage","getCode","mobile","setState","code","verify_code","password","setItem","record","area_code","area_lng","JSON","lng","lat","area_lat","admin_name","test","placeholder","allowClear","height","prefix","onBlur","display","alignItems","disabled","Option","Select","SelectArea","initCode","setInitCode","provinceArr","setProvinceArr","privinceCode","setProvinceCode","cityArr","setCityArr","cityCode","setCityCode","countyArr","setCountyArr","countyCode","setCountyCode","useEffect","priCode","Math","floor","level","get_count","records","parent_code","level2Code","level3Code","res2","res3","fetchData","justifyContent","province","find","p","point","selectAll","city","county","adminRoleData","0","1","2","3","9","userRoleData","projectUserRole","4","projectState","8","pointState","deviceType","deviceState","cardType","cardState","warnType","5","inspectResult","6","7","measureType","warningType","confirmRes","detectType","termiteType","termiteAmount","dateFormat","timeFormat","DateAndTime","getDateTime","date","time","locale","moment","format","timestamp","getTimestamp","formatData","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minutes","getMinutes","seconds","getSeconds","getTime","echarts","ToolboxComponent","LegendComponent","PieChart","CanvasRenderer","HomePage","getData","keys","warns_count","chartDom","document","getElementById","warnChart","option","legend","top","series","radius","center","roseType","itemStyle","borderRadius","setOption","getProjectsInMap","projects","getWarning","start_index","tableData","getMarker","project","termite_wait_count","termite_count","getMapCenterAndZoom","preState","centerPoint","area_point","zoom","parse","activeProject","dataArr","count","project_count","point_count","detect_count","inspect_count","shape","margin","dataSource","rowKey","r","warn_id","pagination","size","Column","dataIndex","render","_","join","enableScrollWheelZoom","position","BMapGL","Point","longitude","latitude","textAlign","lineHeight","project_id","fontWeight","imgType","defaultDetail","comment","image_file","image_path","manu_detect_period","inspect_period","ProjectDetail","detail","setDetail","imgUrl","setImgUrl","Form","useForm","form","initialValues","setFieldsValue","fileInput","useRef","maxLength","min","alt","src","current","click","TextArea","ref","accept","file","files","includes","fr","FileReader","readAsDataURL","onload","result","warning","ProjectPage","getAll","pageSize","currentPage","proj_keyword","user_keyword","total","total_count","onDelete","showDetail","exportData","blob","Blob","URL","createObjectURL","createElement","href","download","revokeObjectURL","onPressEnter","min-width","defaultCurrent","showTotal","items_per_page","showSizeChanger","onShowSizeChange","pageNumber","input_file","complete_count","err_msgs","user_id","role","users","setUsers","setCurrentPage","setTotal","dropdownRender","menu","page","ProjectUserPage","getProject","match","params","proId","projectName","param","point_id","tag","PointDetail","setProjects","PointPage","point_keyword","device_code","device_type","selectedKeys","length","borderTop","v","bordered","scroll","x","rowSelection","ColumnGroup","device_id","card_id","DeviceDetail","cards","setCards","card_code","DevicePage","keyword","operationType","service_deadline","last_pay_timestamp","last_pay_expense","last_pay_period","CardDetail","CardPage","card_type","admin_id","confirmPassword","area_name","AdminDetail","AdminPage","others","project_owner_type","UserDetail","UserPage","detect_id","warn_type","done_timestamp","DetectDetail","projectCurrentPage","setProjectCurrentPage","projectTotal","setProjectTotal","projectKeywords","setProjectKeywords","points","setPoints","pointCurrentPage","setPointCurrentPage","pointTotal","setPointTotal","pointKeyword","setPointKeyword","userCurrentPage","setUserCurrentPage","userTotal","setUserTotal","getProjects","projectRes","getPoints","pointRes","userRes","showSearch","filterOption","onSearch","debounce","onFocus","DetectPage","detect_type","begin_timestamp","end_timestamp","inspect_id","measure_type","InspectDetail","warnings","setWarnings","warningCurrentPage","setWarningCurrentPage","warningTotal","setWarningTotal","getWarns","warningRes","InspectPage","detect_timestamp","confirm_timestamp","confirm_user_id","confirm_res","WarningDetail","getTitle","WarnInspect","setTableData","setType","inspect","setInspect","warn","y","marginTop","listRes","project_name","point_name","confirm_user_name","WarningPage","showInspect","selectWarn","App","isLogin","store","component","exact","ReactDOM"],"mappings":"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","file":"static/js/main.aff239b9.chunk.js","sourcesContent":["export const types = {\n  SET_TOKEN_STATUS: 'SET_TOKEN_STATUS'\n};","import { createStore } from 'redux';\nimport { types } from './types';\n\nconst initialState = {\n  tokenInvalid: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_TOKEN_STATUS:\n      return {\n        ...state,\n        tokenInvalid: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport const storeInstance = createStore(reducer);\n","import { types } from './types';\n\nexport const setTokenInvalid = (val) => {\n  return {\n    type: types.SET_TOKEN_STATUS,\n    tokenInvalid: val,\n  };\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Modal, Button } from 'antd';\nimport { withRouter } from 'react-router';\n\n// redux\nimport * as actions from '../../store/action';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport './index.less';\n\nconst navbarArr = [{\n  path: '/home',\n  name: '首页',\n  icon: 'icon-yemian-copy-copy'\n}, {\n  path: '/project',\n  name: '工程',\n  icon: 'icon-gongcheng'\n}, {\n  path: '/point',\n  name: '布点',\n  icon: 'icon-f-location'\n}, {\n  path: '/device',\n  name: '设备',\n  icon: 'icon-shebei'\n}, {\n    path: '/card',\n    name: '通讯卡',\n    icon: 'icon-tongxunka-32'\n}, {\n  path: '/detect',\n  name: '探测',\n  icon: 'icon-tance'\n}, {\n  path: '/inspect',\n  name: '检查',\n  icon: 'icon-jianchajieguo'\n}, {\n  path: '/warning',\n  name: '报警',\n  icon: 'icon-jinggao'\n}, {\n  path: '/admin',\n  name: '管理员',\n  icon: 'icon-guanliyuan1'\n}, {\n  path: '/user',\n  name: '用户',\n  icon: 'icon-yonghu'\n}]\n\nclass SiderNavbar extends React.Component{\n  constructor (props) {\n    super(props);\n  }\n\n  render () {\n    return (\n      <section className=\"navbar-box\">\n        <header className=\"navbar-header\">蚁情监控</header>\n        <section className=\"navbar-body\">\n          {\n            navbarArr.map((item) =>\n              <NavLink key={item.path} to={item.path} className=\"navlink\">\n                <i className={`iconfont ${item.icon}`} />\n                {item.name}\n              </NavLink>)\n          }\n        </section>\n\n        <Modal width={400} visible={this.props.tokenInvalid}\n          closable={false}\n          footer={[\n            <Button type=\"primary\" key=\"ok\" onClick={() => {\n              this.props.onSubmit(false);\n              this.props.setTokenInvalid(false)\n              this.props.history.push('/login')\n              sessionStorage.clear()\n            }}\n            >确定</Button>\n          ]}\n        >\n            <p>\n              <i className={\"iconfont icon-jinggao\"} style={{\n                color: '#faad14',\n                marginRight: 8\n              }}\n              />\n              <span style={{fontSize: 16}}>授权Token检验失败，请重新登录</span>\n            </p>\n          </Modal>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tokenInvalid: state.tokenInvalid,\n  };\n};\n\nconst mapDispathToProps = (dispath) => {\n  return {\n    ...bindActionCreators(actions, dispath),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispathToProps)(withRouter(SiderNavbar));\n\n// export const SiderNavbar = () => {\n//   // const history = useHistory();\n//   return (\n//     <section className=\"navbar-box\">\n//       <header className=\"navbar-header\">蚁情监控</header>\n//       <section className=\"navbar-body\">\n//         {\n//           navbarArr.map((item) =>\n//             <NavLink key={item.path} to={item.path} className=\"navlink\">\n//               <i className={`iconfont ${item.icon}`} />\n//               {item.name}\n//             </NavLink>)\n//         }\n//       </section>\n//     </section>\n//   );\n// };\n","import axios from 'axios';\nimport qs from 'qs';\nimport { message } from 'antd';\nimport { storeInstance } from '../store/index';\nimport { types } from '../store/types';\n\nconst baseURL = window.globalData.host + '/backend/';\naxios.interceptors.request.use(config => {\n  // axios发出的请求的头部Content-type默认为application/x-www-form-urlencoded, 传文件指明则使用multipart/form-data\n  // 上传文件时不要stringify, 并且请自行在相应接口参数里添加admin_id和access_token\n  if (config.headers['Content-Type'] !== 'multipart/form-data') {\n    // const accessToken = sessionStorage.getItem('access_token') || ''\n    // 把参数中的数字转字符串\n    Object.getOwnPropertyNames(config.data).forEach((key) => {\n      if (config.data[key] === null) {\n        config.data[key] = ''\n      }\n    })\n    // finalParams = {\n    //   access_token: accessToken,\n    //   ...config.data\n    // }\n    config.data = qs.stringify(config.data)\n  }\n  if (config.headers['Content-Type'] === 'multipart/form-data') {\n    // 把参数转为formData\n    const formData = new FormData();\n    Object.getOwnPropertyNames(config.data).forEach((key) => {\n      if (config.data[key]) {\n        formData.append(key, config.data[key])\n      }\n    })\n    config.data = formData\n  }\n  return config\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error)\n})\n\naxios.interceptors.response.use((response) => {\n  // Do something with response data\n  return response.data\n}, (error) => {\n  // Do something with response error\n  return Promise.reject(error)\n})\n\n// 设置携带cookie\naxios.defaults.withCredentials = true;\n\n// export default axisoInstance\nconst axisoInstance = async (url = '', data = {}, method = 'POST', contentType = 'application/x-www-form-urlencoded') => {\n  let res;\n\n  try {\n    res = await axios({\n      baseURL,\n      url,\n      data,\n      method,\n      headers: {'Content-Type': contentType}\n    })\n    if (res) {\n      if (res.res === 1004) {\n        storeInstance.dispatch({\n          type: types.SET_TOKEN_STATUS,\n          payload: true,\n        })\n        return false\n      }\n      if (res.res !== 0 && !data.ignoreResCode) {\n        message.error(res.msg)\n        return false\n      }\n      return res\n    }\n  } catch (error) {\n    message.error('链接服务器错误')\n    // throw new Error(error)\n  }\n}\n\nexport default axisoInstance;\n","import axios from './axios';\n\n/**\n * 登录信息\n */\nexport const verifyLocal = (type, mobile, data) => axios(`sessions/verify/${type}/${mobile}`, data, 'GET')\nexport const login = data => axios('sessions/login', data)\nexport const logout = () => axios('sessions/logout', {}, 'DELETE')\nexport const changePassword = data => axios('sessions/changepw', data)\nexport const getCurrentAdmin = () => axios('sessions/admin', {}, 'GET')\n\n/**\n * overview(首页统计信息)\n */\nexport const overviewStatistic = data => axios('overview/statistic', data)\n\n/**\n * admin(管理员)\n */\nexport const adminAdd = data => axios('admin', data)\nexport const adminList = data => axios('admin/list', data)\nexport const adminGet = (id, data) => axios(`admin/${id}`, data, 'GET')\nexport const adminDelete = (id, data) => axios(`admin/${id}`, data, 'DELETE')\nexport const adminChange = (id, data) => axios(`admin/${id}`, data, 'PUT')\n\n/**\n * user(用户)\n */\nexport const userAdd = data => axios('user', data)\nexport const userBatchDelete = (ids, data) => axios(`user/batch/[${ids}]`, data, 'DELETE')\nexport const userList = data => axios('user/list', data)\nexport const userGet = (id, data) => axios(`user/${id}`, data, 'GET')\nexport const userChange = (id, data) => axios(`user/${id}`, data, 'PUT')\n\n/**\n * area(区域)\n */\nexport const areaAdd = data => axios('area', data);\nexport const areaList = data => axios('area/list', data);\nexport const areaChange = (code, data) => axios(`area/${code}`, data, 'PUT');\nexport const areaDelete = (code, data) => axios(`area/${code}`, data, 'DELETE');\n\n/**\n * card(通讯卡)\n */\nexport const cardAdd = data => axios('card', data)\nexport const cardList = data => axios('card/list', data)\nexport const cardBatchDelete = (ids, data) => axios(`card/batch/[${ids}]`, data, 'DELETE')\nexport const cardGet = (id, data) => axios(`card/${id}`, data, 'GET')\nexport const cardChange = (id, data) => axios(`card/${id}`, data, 'PUT')\nexport const cardExport = (data) => axios('card/export', data)\nexport const cardImport = (data) => axios('card/import', data)\n\n/**\n * detect(探测记录)\n */\nexport const detectAdd = data => axios('detect', data)\nexport const detectList = data => axios('detect/list', data)\nexport const detectBatchDelete = (ids, data) => axios(`detect/batch/[${ids}]`, data, 'DELETE')\nexport const detectGet = (id, data) => axios(`detect/${id}`, data, 'GET')\nexport const detectChange = (id, data) => axios(`detect/${id}`, data, 'PUT')\nexport const detectExport = (data) => axios('detect/export', data)\nexport const detectImport = (data) => axios('detect/import', data)\n\n/**\n * inspect(检查)\n */\nexport const inspectAdd = data => axios('inspect', data)\nexport const inspectList = data => axios('inspect/list', data)\nexport const inspectBatchDelete = (ids, data) => axios(`inspect/batch/[${ids}]`, data, 'DELETE')\nexport const inspectGet = (id, data) => axios(`inspect/${id}`, data, 'GET')\nexport const inspectChange = (id, data) => axios(`inspect/${id}`, data, 'PUT')\nexport const inspectExport = (data) => axios('inspect/export', data)\nexport const inspectImport = (data) => axios('inspect/import', data)\n\n\n/**\n * device(设备)\n */\nexport const deviceAdd = data => axios('device', data)\nexport const deviceList = data => axios('device/list', data)\nexport const deviceBatchDelete = (ids, data) => axios(`device/batch/[${ids}]`, data, 'DELETE')\nexport const deviceGet = (id, data) => axios(`device/${id}`, data, 'GET')\nexport const deviceChange = (id, data) => axios(`device/${id}`, data, 'PUT')\nexport const deviceExport = (data) => axios('device/export', data)\nexport const deviceImport = (data) => axios('device/import', data)\n\n/**\n * point(布点)\n */\nexport const pointAdd = data => axios('point', data)\nexport const pointList = data => axios('point/list', data)\nexport const pointBatchDelete = (ids, data) => axios(`point/batch/[${ids}]`, data, 'DELETE')\nexport const pointGet = (id, data) => axios(`point/${id}`, data, 'GET')\nexport const pointChange = (id, data) => axios(`point/${id}`, data, 'PUT')\nexport const pointExport = (data) => axios('point/export', data)\nexport const pointImport = (data) => axios('point/import', data, 'POST', 'multipart/form-data')\nexport const pointListSimple = (data) => axios('point/list_simp', data)\n\n/**\n * project(工程)\n */\nexport const projectAdd = data => axios('project', data, 'POST', 'multipart/form-data')\nexport const projectList = data => axios('project/list', data)\nexport const projectGet = (id, data) => axios(`project/${id}`, data, 'GET')\nexport const projectDelete = (id, data) => axios(`project/${id}`, data, 'DELETE')\nexport const projectChange = (id, data) => axios(`project/${id}`, data, 'PUT', 'multipart/form-data')\nexport const projectExport = (data) => axios('project/export', data)\nexport const projectImport = (data) => axios('project/import', data, 'POST', 'multipart/form-data')\nexport const projectMap = (data) => axios('project/list_in_map', data)\nexport const projectListSimple = (data) => axios('project/list_simp', data)\n\n/**\n * project_user（工程绑定用户）\n */\nexport const projectUserBind = data => axios('project_user', data)\nexport const projectUserUnbind = (projectId, userId, data) => axios(`project_user/${projectId}/${userId}`, data, 'DELETE')\nexport const projectUserList = data => axios('project_user/list', data)\nexport const projectUserExport = (data) => axios('project_user/export', data)\nexport const projectUserImport = (data) => axios('project_user/import', data)\nexport const projectUserChange = (projectId, userId, data) => axios(`project_user/${projectId}/${userId}`, data, 'PUT')\n\n/**\n * warn(警告)\n */\nexport const warningAdd = data => axios('warn', data)\nexport const warningList = data => axios('warn/list', data)\nexport const warningBatchDelete = (ids, data) => axios(`warn/batch/[${ids}]`, data, 'DELETE')\nexport const warningGet = (id, data) => axios(`warn/${id}`, data, 'GET')\nexport const warningChange = (id, data) => axios(`warn/${id}`, data, 'PUT')\nexport const warningExport = (data) => axios('warn/export', data)\nexport const warningImport = (data) => axios('warn/import', data)\nexport const warningListByPoint = (data) => axios('warn/list_by_point', data);\n","import React, { useState } from 'react';\r\nimport { Dropdown, Menu, message, Modal, Form, Input, Button } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport MD5 from 'crypto-js/md5';\r\nimport { logout, changePassword } from '../api/index';\r\nimport { useHistory } from 'react-router';\r\nimport { throttle } from 'throttle-debounce';\r\n// import { withRouter } from 'react-router-dom'\r\n\r\nexport const Header = (props) => {\r\n  const [showChangePwd, setShowChangePwd] = useState(false)\r\n  const [oldPwd, setOldPwd] = useState('')\r\n  const [newPwd, setNewPwd] = useState('')\r\n  const [confirmPwd, setConfirmPwd] = useState('')\r\n\r\n  const history = useHistory();\r\n\r\n  return <>\r\n    <Dropdown overlay={(\r\n      <Menu>\r\n        <Menu.Item key=\"change\" onClick={() => {\r\n          setShowChangePwd(true);\r\n          setOldPwd('');\r\n          setNewPwd('');\r\n          setConfirmPwd('');\r\n        }}\r\n        >修改密码</Menu.Item>\r\n        <Menu.Item key=\"logout\" onClick={() => {\r\n          Modal.confirm({\r\n            title: '确认退出当前登录?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: \"确认\",\r\n            cancelText: \"取消\",\r\n            onOk: async () => {\r\n              const res = await logout({});\r\n              if (res) {\r\n                message.success('已成功退出登录');\r\n                props.onSubmit(false);\r\n                history.push('/login');\r\n                sessionStorage.clear();\r\n              }\r\n            },\r\n            onCancel() {\r\n              console.log('Cancel');\r\n            },\r\n          })\r\n        }}\r\n        >退出</Menu.Item>\r\n      </Menu>\r\n    )}\r\n    >\r\n      <span style={{cursor: 'pointer'}}>\r\n        <i className=\"iconfont icon-guanliyuan\" style={{marginRight: 6}} />\r\n        {sessionStorage.getItem('adminName') || ''}\r\n      </span>\r\n    </Dropdown>\r\n\r\n    {/* 修改密码 */}\r\n    <Modal\r\n      title=\"修改密码\"\r\n      visible={showChangePwd}\r\n      onCancel={throttle(1000, () => {\r\n        setShowChangePwd(false);\r\n      })}\r\n      footer={null}\r\n    >\r\n      <Form\r\n        className=\"change-pwd-form\"\r\n        onFinish={async (values) => {\r\n          const { oldPwd, newPwd } = values\r\n          const res = await changePassword({\r\n            old_password: MD5(oldPwd).toString(),\r\n            new_password: MD5(newPwd).toString()\r\n          });\r\n          if (res) {\r\n            message.success('密码修改成功，请重新登录');\r\n            props.onSubmit(false);\r\n            history.push('/login');\r\n            sessionStorage.clear();\r\n          }\r\n      }}\r\n      >\r\n        <Form.Item label=\"旧密码\" name=\"oldPwd\"\r\n          rules={[{ required: true, message: '请输入旧密码' }]}\r\n        >\r\n          <Input.Password value={oldPwd} onChange={(e) => {\r\n            setOldPwd(e.target.value)\r\n          }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"新密码\" name=\"newPwd\"\r\n          rules={[{ required: true, message: '请输入新密码' }]}\r\n        >\r\n          <Input.Password value={newPwd} onChange={(e) => {\r\n            setNewPwd(e.target.value)\r\n          }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"确认密码\" name=\"confirmPwd\" dependencies={['newPwd']}\r\n          rules={[\r\n            { required: true, message: '请再次输入密码' },\r\n            ({getFieldValue}) => ({\r\n              validator(rule, value) {\r\n                if (value && getFieldValue('newPwd') !== value) {\r\n                  return Promise.reject('两次输入的密码不一致');\r\n                } else {\r\n                  return Promise.resolve();\r\n                }\r\n              }\r\n            })\r\n          ]}\r\n        >\r\n          <Input.Password value={confirmPwd} onChange={(e) => {\r\n            setConfirmPwd(e.target.value)\r\n          }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <section className=\"form-btn\">\r\n            <Button htmlType=\"button\" style={{marginRight: 20}}\r\n              onClick={throttle(1000, () => {\r\n                setShowChangePwd(false)\r\n              })}\r\n            >\r\n              取消\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              确认\r\n            </Button>\r\n          </section>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  </>\r\n}\r\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { login, verifyLocal } from '../../api';\nimport { throttle } from 'throttle-debounce';\nimport MD5 from 'crypto-js/md5';\nimport './index.less';\n\n// redux\nimport * as actions from '../../store/action';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nclass LoginPage extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      mobile: '',\n      password: '',\n      verify_code: '',\n      code: ''\n    }\n  }\n\n  render () {\n    return (\n      <section className=\"login-page\">\n        <section className=\"login-box\">\n          <header className=\"title\">蚁情监控系统</header>\n          <Form onFinish={async (values) => {\n            const res = await login({\n              mobile: this.state.mobile,\n              password: MD5(this.state.password).toString(),\n              verify_code: this.state.verify_code\n            });\n            if (res) {\n              sessionStorage.setItem('isLogin', true);\n              sessionStorage.setItem('areaCode', res.record?.area_code);\n              if (res.record?.area_lng) {\n                sessionStorage.setItem('areaPoint', JSON.stringify({\n                  lng: +res.record?.area_lng, lat: +res.record?.area_lat\n                }));\n              }\n              sessionStorage.setItem('adminName', res.record?.admin_name);\n              this.props.setTokenInvalid(false)\n              this.props.history.push('/home')\n              this.props.onSubmit(true);\n            }\n          }}\n          >\n            <Form.Item name=\"mobile\"\n              rules={[\n                { required: true, message: '请输入手机号' },\n                {\n                  validator(rule, value) {\n                    const reg = /^[1][3,4,5,7,8][0-9]{9}$/;\n                    if (value && !reg.test(value)) {\n                      return Promise.reject('请输入正确的手机号');\n                    }\n                    return Promise.resolve();\n                  },\n                },\n              ]}\n            >\n              <Input placeholder=\"请输入手机号\"\n                allowClear\n                style={{height: 40}}\n                prefix={<i className=\"iconfont icon-shouji\" />}\n                value={this.state.mobile}\n                onChange={(e) => {\n                  this.setState({\n                    mobile: e.target.value,\n                    code: '',\n                    verify_code: ''\n                  })\n                }}\n                onBlur={() => {\n                  const reg = /^[1][3,4,5,7,8][0-9]{9}$/;\n                  if (reg.test(this.state.mobile)) {\n                    this.getCode()\n                  }\n                }}\n              />\n            </Form.Item>\n            <Form.Item name=\"password\"\n              rules={[{ required: true, message: '请输入密码' }]}\n            >\n              <Input.Password placeholder=\"请输入密码\"\n                style={{height: 40}}\n                prefix={<i className=\"iconfont icon-mima1\" />}\n                value={this.state.password}\n                onChange={(e) => {\n                  this.setState({\n                    password: e.target.value\n                  })\n                }}\n              />\n            </Form.Item>\n            <Form.Item name=\"verify_code\"\n              rules={[{ required: true, message: '请输入验证码' }]}\n            >\n              <section style={{display: 'flex', alignItems: 'center'}}>\n                <Input placeholder=\"请输入验证码\"\n                  style={{width: 200}}\n                  prefix={<i className=\"iconfont icon-yanzhengma\" />}\n                  value={this.state.verify_code}\n                  onChange={(e) => {\n                    this.setState({\n                      verify_code: e.target.value\n                    })\n                  }}\n                />\n                <span className=\"code-box\">{this.state.code}</span>\n                <Button type=\"link\" disabled={!this.state.code}>\n                  <i\n                    className=\"iconfont icon-zhongzhi\"\n                    onClick={throttle(1000, () => {\n                      this.setState({\n                        verify_code: '',\n                        code: ''\n                      });\n                      this.getCode()\n                    })}\n                  />\n                </Button>\n              </section>\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\"\n                style={{width: 328, height: 40, fontSize: 16}}\n              >登 录</Button>\n            </Form.Item>\n          </Form>\n        </section>\n      </section>\n    )\n  }\n\n  getCode = async () => {\n    if (!this.state.mobile) return;\n    const res = await verifyLocal(1, this.state.mobile, {});\n    if (res) {\n      this.setState({\n        code: res.verify_code\n      })\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tokenInvalid: state.tokenInvalid,\n  };\n};\n\nconst mapDispathToProps = (dispath) => {\n  return {\n    ...bindActionCreators(actions, dispath),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispathToProps)(LoginPage);","import React, { useEffect, useState } from 'react';\r\nimport { areaList } from '../api/index';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nexport const SelectArea = (props) => {\r\n  const [initCode, setInitCode] = useState('');\r\n\r\n  const [provinceArr, setProvinceArr] = useState([]);\r\n  const [privinceCode, setProvinceCode] = useState('');\r\n  // const [privinceName, setProvinceName] = useState('');\r\n\r\n  const [cityArr, setCityArr] = useState([]);\r\n  const [cityCode, setCityCode] = useState('');\r\n  // const [cityName, setCityName] = useState('');\r\n\r\n  const [countyArr, setCountyArr] = useState([]);\r\n  const [countyCode, setCountyCode] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchData () {\r\n      // 初始化数据\r\n      setInitCode('');\r\n      let priCode = '';\r\n      if (props.area_code || props.area_code === 0) {\r\n        priCode = Math.floor(props.area_code / 10000) * 10000;\r\n        setProvinceCode(priCode);\r\n      } else {\r\n        setProvinceCode('');\r\n        setCityCode('');\r\n        setCountyCode('');\r\n      }\r\n\r\n      const res = await areaList({level: 1, get_count: 100});\r\n      if (res) {\r\n        setProvinceArr(res.records);\r\n      }\r\n      \r\n      // 编辑时\r\n      if (props.area_code && props.area_code !== initCode) {\r\n        if (!(props.area_code % 10000)) {\r\n          setProvinceCode(props.area_code)\r\n          setCityCode('')\r\n          setCountyCode('')\r\n\r\n          // 获取市\r\n          const res = await areaList({level: 2, parent_code: priCode, get_count: 100});\r\n          if (res) {\r\n            setCityArr(res.records)\r\n            setCityCode('')\r\n            setCountyCode('')\r\n          }\r\n        } else {\r\n          const level2Code = Math.floor(props.area_code / 100) * 100;\r\n          const level3Code = !(props.area_code % 100) ? '' : props.area_code;\r\n          // 获取市\r\n          const res2 = await areaList({level: 2, parent_code: priCode, get_count: 100});\r\n          if (res2) {\r\n            setCityArr(res2.records)\r\n            setCityCode(level2Code)\r\n          }\r\n\r\n          // 获取区\r\n          const res3 = await areaList({level: 3, parent_code: level2Code, get_count: 100});\r\n          if (res3) {\r\n            setCountyArr(res3.records)\r\n            setCountyCode(level3Code);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [props.area_code])\r\n\r\n  return (\r\n    <section style={{\r\n      width: props.width || 392,\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n    }}\r\n    >\r\n      {/* 省 */}\r\n      <Select value={privinceCode + ''} placeholder=\"省\" style={{marginRight: 10, width: 'calc((100% - 20px) / 3)'}}\r\n        onChange={async (val) => {\r\n          setInitCode(+val);\r\n          setProvinceCode(+val);\r\n          setCityArr([]);\r\n          setCountyArr([]);\r\n          setCityCode('');\r\n          setCountyCode('');\r\n\r\n          // areaName\r\n          const province = provinceArr.find(p => +p.code === +val);\r\n          const point = province ? {lng: +province.lng, lat: +province.lat} : '';\r\n          props.onChange({code: +val, point});\r\n\r\n          if (!+val) return\r\n          const res = await areaList({level: 2, parent_code: +val, get_count: 100});\r\n          if (res) {\r\n            setCityArr(res.records)\r\n          }\r\n        }}\r\n      >\r\n        {\r\n          props.selectAll && <Option value={'0'} key={0}>全国</Option>\r\n        }\r\n        {\r\n          provinceArr?.map((item) => {\r\n            return <Option value={item.code + ''} key={item.code}>{item.name}</Option>\r\n          })\r\n        }\r\n      </Select>\r\n\r\n      {/* 市 */}\r\n      <Select value={cityCode + ''} placeholder=\"市\" style={{marginRight: 10, width: 'calc((100% - 20px) / 3)'}}\r\n        onChange={async (val) => {\r\n          setInitCode(+val);\r\n          setCityCode(+val);\r\n          setCountyArr([]);\r\n          setCountyCode('');\r\n\r\n          // areaName\r\n          const city = cityArr.find(p => +p.code === +val);\r\n          const point = city ? {lng: +city.lng, lat: +city.lat} : '';\r\n          props.onChange({code: +val, point});\r\n\r\n          const res = await areaList({level: 3, parent_code: +val, get_count: 100});\r\n          if (res) {\r\n            setCountyArr(res.records)\r\n          }\r\n\r\n        }}\r\n      >\r\n        {\r\n          cityArr?.map((item) => {\r\n            return <Option value={item.code + ''} key={item.code}>{item.name}</Option>\r\n          })\r\n        }\r\n      </Select>\r\n\r\n      {/* 区 */}\r\n      <Select value={countyCode + ''} placeholder=\"区\" style={{marginRight: 10, width: 'calc((100% - 20px) / 3)'}}\r\n        onChange={async (val) => {\r\n          setInitCode(+val);\r\n          setCountyCode(+val);\r\n\r\n          // areaName\r\n          const county = countyArr.find(p => +p.code === +val);\r\n          const point = county ? {lng: +county.lng, lat: +county.lat} : '';\r\n          props.onChange({code: +val, point});\r\n        }}\r\n      >\r\n        {\r\n          countyArr?.map((item) => {\r\n            return <Option value={item.code + ''} key={item.code}>{item.name}</Option>\r\n          })\r\n        }\r\n      </Select>\r\n    </section>\r\n  )\r\n}\r\n","// 性别\nexport const genderData = {\n  0: '未知',\n  1: '男',\n  2: '女'\n}\n\n// 管理员角色\nexport const adminRoleData = {\n  0: '未知',\n  1: '督察员',\n  2: '操作员',\n  3: '配置员',\n  9: '管理员'\n}\n\n// 用户角色\nexport const userRoleData = {\n  0: '未知',\n  1: '非负责人',\n  2: '项目负责人',\n  3: '区域负责人'\n}\n\n// 工程人员角色\nexport const projectUserRole = {\n  0: '未知',\n  1: '操作工',\n  2: '配置员',\n  3: '管理员',\n  4: '负责人'\n}\n\n// 工程状态\nexport const projectState = {\n  0: '未知',\n  1: '未启用',\n  2: '启用',\n  8: '结束',\n  9: '废弃'\n}\n\n// 布点状态\nexport const pointState = {\n  0: '未知',\n  1: '未启用',\n  2: '启用'\n}\n\n// 设备类型\nexport const deviceType = {\n  0: '未知',\n  1: '半自动',\n  2: '全自动',\n  3: '机械式'\n}\n\n// 设备状态\nexport const deviceState = {\n  0: '未知',\n  1: '正常',\n  2: '故障',\n  9: '废弃'\n}\n\n// 通信卡类型\nexport const cardType = {\n  0: '未知',\n  1: '中移NB',\n  2: '联通NB',\n  3: '电信NB'\n}\n\n// 通信卡状态\nexport const cardState = {\n  0: '未知',\n  1: '未激活',\n  2: '正常',\n  9: '废弃'\n}\n\n// 报警类型\nexport const warnType = {\n  1: '未知',\n  2: '正常',\n  3: '蚁情',\n  4: '入侵',\n  5: '低电量',\n  9: '其他'\n}\n\n// 检查结果\nexport const inspectResult = {\n  0: '未知',\n  1: '正常',\n  2: '发现蚁情',\n  3: '发现蚁情但量不多，需再观察',\n  4: '发现蚁情但已撤离，无需灭杀',\n  5: '装置异常',\n  6: '装置被入侵破坏',\n  7: '装置丢失',\n  8: '装置被移位',\n  9: '其他'\n}\n\n// 措施类型\nexport const measureType = {\n  0: '未知',\n  1: '无操作',\n  2: '简单恢复',\n  3: '替换电池',\n  4: '替换装置',\n  5: '灭蚁',\n  6: '推迟灭蚁(再观察)',\n  9: '其他'\n}\n\n// 产生报警的类型\nexport const warningType = {\n  3: '蚁情',\n  4: '入侵',\n  5: '低电量',\n  9: '其他'\n}\n\n// 报警确认结果\nexport const confirmRes = {\n  0: '未知',\n  1: '未确认',\n  2: '报警正确',\n  3: '误报'\n}\n\n// 手自动类型\nexport const detectType = {\n  0: '未知',\n  1: '手动',\n  2: '自动',\n}\n\n// 白蚁类型\nexport const termiteType = {\n  0: '未知',\n  1: '散白蚁',\n  2: '土木白蚁',\n  3: '家白蚁',\n  9: '其他'\n}\n\n// 蚁量\nexport const termiteAmount = {\n  0: '未知',\n  1: '少量',\n  2: '中量',\n  3: '大量'\n}\n","import React from 'react';\nimport { DatePicker, TimePicker } from 'antd';\nimport locale from 'antd/es/date-picker/locale/zh_CN';\nimport moment from 'moment';\n\nconst dateFormat = 'YYYY-MM-DD';\nconst timeFormat = 'HH:mm:ss';\n\nexport const DateAndTime = (props) => {\n  const [date, time] = getDateTime(props.value)\n\n  return (\n    <section className=\"date-and-time-box\">\n      <DatePicker locale={locale} style={{marginRight: 10}}\n        value={props.value ? moment(date, dateFormat) : ''}\n        format={dateFormat}\n        onChange={(moment, val) => {\n          const timestamp = getTimestamp(val, time);\n          props.onChange(timestamp);\n        }}\n      />\n      <TimePicker locale={locale}\n        value={props.value ? moment(time, timeFormat) : ''}\n        format={timeFormat}\n        onChange={(moment, val) => {\n          const timestamp = getTimestamp(date, val);\n          props.onChange(timestamp);\n        }}\n      />\n    </section>\n  );\n};\n\n// 格式化\nconst formatData = (val) => {\n  return val > 9 ? val : `0${val}`;\n}\n\n// 获取日期时间\nexport const getDateTime = (val) => {\n  if (!val) {\n    return ['', '']\n  }\n  const date = new Date(val * 1000);\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const hour = date.getHours(); \n  const minutes = date.getMinutes(); \n  const seconds = date.getSeconds();\n  return [\n    `${year}-${formatData(month)}-${formatData(day)}`,\n    `${formatData(hour)}:${formatData(minutes)}:${formatData(seconds)}`\n  ]\n}\n\n// 获取时间戳\nconst getTimestamp = (date, time) => {\n  return new Date(date + ' ' + time).getTime() / 1000;\n}\n","import React from 'react';\nimport { Tooltip, Button, Table } from 'antd';\nimport { SelectArea } from '../../component/SelectArea';\nimport { overviewStatistic, projectMap, warningList } from '../../api';\nimport { warningType, confirmRes } from '../../assets/js/constant';\nimport { getDateTime } from '../Card/DateAndTime';\nimport './index.less';\n\nimport * as echarts from 'echarts/core';\nimport { ToolboxComponent, LegendComponent } from 'echarts/components';\nimport { PieChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\n\n// 地图\nimport { Map, NavigationControl, ZoomControl, InfoWindow, CustomOverlay } from 'react-bmapgl';\n\necharts.use(\n  [ToolboxComponent, LegendComponent, PieChart, CanvasRenderer]\n);\n\nexport default class HomePage extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      area_code: +sessionStorage.getItem('areaCode') || 0,\n      area_point: JSON.parse(sessionStorage.getItem('areaPoint') || '{\"lng\":108.55,\"lat\":34.32}'),\n      centerPoint: JSON.parse(sessionStorage.getItem('areaPoint') || '{\"lng\":108.55,\"lat\":34.32}'),\n      zoom: 6,\n      data: {},\n      projects: [],\n      tableData: [],\n      activeProject: null\n    }\n  }\n\n  componentDidMount() {\n    this.getData()\n    this.getProjectsInMap()\n    this.getWarning()\n    this.getMapCenterAndZoom()\n  }\n\n  render() {\n    const dataArr = [{\n      icon: 'icon-gongcheng',\n      count: this.state.data.project_count,\n      title: '工程',\n      path: '/project'\n    }, {\n      icon: 'icon-f-location',\n      count: this.state.data.point_count,\n      title: '布点',\n      path: '/point'\n    }, {\n      icon: 'icon-tance',\n      count: this.state.data.detect_count,\n      title: '探测',\n      path: '/detect'\n    }, {\n      icon: 'icon-jianchajieguo',\n      count: this.state.data.inspect_count,\n      title: '检查',\n      path: '/inspect'\n    }]\n\n    return (\n      <section className=\"home-page\">\n        {/* 搜索 */}\n        <section className=\"search-box\">\n          <section>\n            <span className=\"label l-small\">区域：</span>\n            <SelectArea\n              selectAll\n              width={392}\n              area_code={this.state.area_code}\n              visible\n              onChange={({code, point}) => {\n                this.setState({ area_code: code, area_point: point})\n              }}\n            />\n          </section>\n          <section>\n            <Tooltip title=\"搜素\">\n              <Button shape=\"circle\" type=\"primary\" style={{margin: '0px 10px'}} onClick={() => {\n                this.getData()\n                this.getProjectsInMap()\n                this.getWarning()\n                this.getMapCenterAndZoom();\n              }}\n              >\n                <i className=\"iconfont icon-sousuo\" />\n              </Button>\n            </Tooltip>\n            <Tooltip title=\"重置\">\n              <Button shape=\"circle\" type=\"primary\" onClick={() => {\n                this.setState(() => ({\n                  area_code: '',\n                  area_point: '',\n                  centerPoint: {lng: 108.55, lat: 34.32},\n                  zoom: 6,\n                  data: {},\n                  projects: [],\n                  tableData: [],\n                  activeProject: null\n                }), () => {\n                  this.getData()\n                  this.getProjectsInMap()\n                  this.getWarning()\n                })\n              }}\n              >\n                <i className=\"iconfont icon-zhongzhi\" />\n              </Button>\n            </Tooltip>\n          </section>\n        </section>\n        \n        {/* 数据 */}\n        <ul className=\"data-box\">\n          {\n            dataArr.map((item) => {\n              return (\n                <li className=\"card\" key={item.icon}>\n                  <section>\n                    <p className=\"type-name\">{item.title}</p>\n                    <span className=\"number-value\" onClick={() => {\n                      this.props.history.push(item.path);\n                    }}\n                    >{item.count}</span>\n                  </section>\n                  <section className=\"icon\">\n                    <i className={`iconfont ${item.icon}`} />\n                  </section>\n                </li>\n              )\n            })\n          }\n        </ul>\n        \n        {/* 报警 */}\n        <section className=\"warning-box\">\n          <p className=\"type-name\">\n            <i className={\"iconfont icon-jinggao\"} />\n            报警数据\n          </p>\n\n          <section className=\"content-box\">\n            {/* echarts */}\n            <section className=\"box-left\" id=\"warn-echart\" />\n\n            {/* table */}\n            <section className=\"box-right\">\n              <Table\n                style={{width: 890}}\n                dataSource={this.state.tableData}\n                rowKey={r => r.warn_id}\n                pagination={false}\n                size=\"small\"\n              >\n                <Table.Column title=\"布点\" dataIndex=\"point_name\" key=\"point_name\" />\n                <Table.Column title=\"报警类型\" dataIndex=\"warn_type\" key=\"warn_type\"\n                  render={(val, _) => (<span>{warningType[val]}</span>)}\n                />\n                <Table.Column title=\"探测时间\" dataIndex=\"detect_timestamp\" key=\"detect_timestamp\"\n                  render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\n                />\n                <Table.Column title=\"确认时间\" dataIndex=\"confirm_timestamp\" key=\"confirm_timestamp\"\n                  render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\n                />\n                <Table.Column title=\"确认用户\" dataIndex=\"confirm_user_name\" key=\"confirm_user_name\" />\n                <Table.Column title=\"报警确认结果\" dataIndex=\"confirm_res\" key=\"confirm_res\"\n                  render={(val, _) => (<span>{confirmRes[val]}</span>)}\n                />\n              </Table>\n            </section>\n            </section>\n        </section>\n        \n        \n        {/* 地图 */}\n        <section className=\"project-box\">\n          <p className=\"type-name\">\n            <i className=\"iconfont icon-gongcheng\" />\n            工程分布\n          </p>\n          <section id=\"map-container\">\n          <Map\n            style={{height: '100%'}}\n            center={this.state.centerPoint || {lng: 108.55, lat: 34.32}}\n            zoom={this.state.zoom}\n            enableScrollWheelZoom\n          >\n            {\n              this.state.projects.map((item) => {\n                return <CustomOverlay\n                  position={new window.BMapGL.Point(item.longitude / 1000000, item.latitude / 1000000)}\n                  key={item.project_id}\n                       >\n                  <span\n                    style={{display: 'inline-block', width: 40, height: 40, cursor: 'pointer', textAlign: 'center', lineHeight: 40}}\n                    onClick={() => {\n                      this.setState({activeProject: item})\n                    }}\n                  >\n                    {this.getMarker(item)}\n                  </span>\n                </CustomOverlay>\n              })\n            }\n            <NavigationControl />\n            <ZoomControl />\n            { this.state.activeProject &&\n              <InfoWindow\n                position={{lng: this.state.activeProject.longitude / 1000000, lat: this.state.activeProject.latitude / 1000000}}\n                title={this.state.activeProject.name}\n                height={90}\n              >\n                <section>\n                  <p>\n                    <span>未处理报警(蚁情)数量：</span>\n                    <span style={{fontSize: 24, fontWeight: 'bold', color: '#FF4D4F'}}>{this.state.activeProject.termite_wait_count}</span>\n                  </p>\n                  <p>\n                    <span>报警(蚁情)总数：</span>\n                    <span style={{fontSize: 24, fontWeight: 'bold', color: '#FAAD14'}}>{this.state.activeProject.termite_count}</span>\n                  </p>\n                </section>\n              </InfoWindow>\n            }\n          </Map>\n          </section>\n        </section>\n      </section>\n    );\n  }\n\n  // 获取数据\n  getData = async () => {\n    const res = await overviewStatistic({\n      area_code: this.state.area_code\n    });\n    if (res) {\n      this.setState({\n        data: res\n      })\n      const data = Object.keys(res.warns_count).map(key => {\n        return {\n          value: res.warns_count[key],\n          name: warningType[key] + '(' + res.warns_count[key] + ')'\n        }\n      })\n      const chartDom = document.getElementById('warn-echart');\n      const warnChart = echarts.init(chartDom);\n      const option = {\n        legend: {\n          top: 'bottom'\n        },\n        color: ['#ee6666', '#fac858', '#73c0de'],\n        series: [\n          {\n            name: '',\n            type: 'pie',\n            radius: [20, 110],\n            center: ['50%', '50%'],\n            roseType: 'area',\n            itemStyle: {\n              borderRadius: 8\n            },\n            data\n          }\n        ]\n      }\n\n      option && warnChart.setOption(option);\n    }\n  }\n  \n  // 获取工程\n  getProjectsInMap = async () => {\n    const res = await projectMap({\n      area_code: this.state.area_code\n    })\n    if (res) {\n      this.setState({\n        projects: res.records\n      });\n    }\n  }\n\n  // 获取报警\n  getWarning = async () => {\n    const res = await warningList({\n      get_count: 10,\n      start_index: 0,\n      area_code: this.state.area_code\n    });\n    if (res) {\n      this.setState({ tableData: res.records})\n    }\n  }\n\n  // 获取marker颜色\n  getMarker = (project) => {\n    let color = '';\n    if (project.termite_wait_count > 0) {\n      color = '#FF4D4F'\n    } else if (project.termite_count > 0) {\n      color = '#FAAD14'\n    } else {\n      color = '#52C41A'\n    }\n\n    return <i className=\"iconfont icon-f-location\" style={{color, fontSize: 30 }} />\n  }\n\n  // 获取地图层级\n  getMapCenterAndZoom = () => {\n    this.setState((preState) => ({\n      centerPoint: preState.area_point || preState.centerPoint\n    }))\n\n    if (!this.state.area_code) {\n      this.setState({\n        zoom: 6\n      })\n    }\n    if (!(this.state.area_code % 10000)) {\n      this.setState({\n        zoom: 10\n      })\n    } else if (!(this.state.area_code % 100)) {\n      this.setState({\n        zoom: 12\n      })\n    } else {\n      this.setState({\n        zoom: 14\n      })\n    }\n  }\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Select, Button, InputNumber, message, Modal } from 'antd';\nimport { projectState } from '../../assets/js/constant';\nimport { SelectArea } from '../../component/SelectArea';\nimport { throttle } from 'throttle-debounce';\n\nconst imgType = ['image/jpg', 'image/jpeg', 'image/png'];\n\nconst { Option } = Select;\n\nconst defaultDetail = {\n  project_id: '',\n  name: '',\n  area_code: '',\n  state: 1,\n  comment: '',\n  image_file: '',\n  image_path: '',\n  manu_detect_period: 14,\n  inspect_period: 60\n}\n\nexport const ProjectDetail = (props) => {\n  const [detail, setDetail] = useState(defaultDetail);\n  const [imgUrl, setImgUrl] = useState('')\n  const [form] = Form.useForm();\n  const initialValues = {\n    ...detail,\n    state: detail.state + ''\n  }\n  form.setFieldsValue(initialValues)\n\n  const fileInput = useRef();\n\n  useEffect(() => {\n    setDetail(props.detail || defaultDetail)\n    setImgUrl(props.detail?.image_path ? window.globalData.host + props.detail?.image_path : '');\n  }, [props.detail]);\n\n  return (\n    <Modal\n      width={560}\n      title={props.detail ? '编辑信息' : '添加工程'}\n      footer={null}\n      visible={props.visible}\n      onCancel={() => {\n        setDetail(defaultDetail)\n        setImgUrl('');\n        props.onCancel();\n      }}\n    >\n      <Form className=\"detail-form project-form\" onFinish={(values) => {\n        props.onSubmit(detail);\n      }}\n      form={form}\n      initialValues={initialValues}\n      >\n        <Form.Item label=\"工程名\" name=\"name\"\n          rules={[{ required: true, message: '请输入工程名' }]}\n        >\n          <Input maxLength={64} value={detail.name} onChange={(e) => {\n            setDetail({\n              ...detail,\n              name: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"区域\" name=\"area_code\"\n          rules={[{ required: true, message: '请选择区域' }]}\n        >\n          <SelectArea visible={props.visible} area_code={detail.area_code} onChange={({code}) => {\n            setDetail({\n              ...detail,\n              area_code: code\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"状态\" name=\"state\">\n          <Select value={detail.state + ''} onChange={(val) => {\n            setDetail({\n              ...detail,\n              state: +val\n            })\n          }}\n          >\n            {\n              Object.keys(projectState).map((key) => {\n                return <Option value={key + ''} key={key}>{projectState[key]}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"手动探测周期(天)\" name=\"manu_detect_period\">\n          <InputNumber min={0} style={{width: 134}} value={detail.manu_detect_period} onChange={(val) => {\n            setDetail({\n              ...detail,\n              manu_detect_period: val\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"检查周期(天)\" name=\"inspect_period\">\n          <InputNumber min={0} style={{width: 134}} value={detail.inspect_period} onChange={(val) => {\n            setDetail({\n              ...detail,\n              inspect_period: val\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"图片\" name=\"image_file\">\n          <div className=\"upload-image\">\n            {\n              imgUrl ? <img\n                alt=\"\"\n                src={imgUrl}\n                style={{width: '100%', height: '100%'}}\n                       /> : <span onClick={throttle(1000, () => fileInput.current.click())}>上传图片</span>\n            }\n            {imgUrl && <section className=\"img-masker\">\n              <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => fileInput.current.click())} />\n              <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => {\n                setImgUrl('');\n                setDetail({\n                  ...detail,\n                  image_file: '',\n                  image_path: ''\n                })\n              })}\n              />\n            </section>}\n          </div>\n        </Form.Item>\n        <Form.Item label=\"描述\" name=\"comment\">\n          <Input.TextArea maxLength={255} value={detail.comment} onChange={(e) => {\n            setDetail({\n              ...detail,\n              comment: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item>\n          <section className=\"form-btn\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交\n            </Button>\n            <Button htmlType=\"button\" onClick={throttle(1000, () => {\n              if (props.detail) {\n                setDetail(props.detail)\n                if (props.detail.image_path) {\n                  setImgUrl(window.globalData.host + props.detail.image_path)\n                } else {\n                  setImgUrl('')\n                }\n              } else {\n                setDetail(defaultDetail)\n                setImgUrl('')\n              }\n            })}\n            >\n              重置\n            </Button>\n          </section>\n        </Form.Item>\n      </Form>\n\n      {/* 上传图片的input */}\n      <input\n        type=\"file\"\n        ref={r => fileInput.current = r}\n        style={{display: 'none'}}\n        id=\"upload-file\"\n        accept={imgType.toString()}\n        onClick={throttle(1000, (e) => {\n          e.target.value = ''\n        })}\n        onChange={e => {\n          const file = e.target.files[0];\n\n          if (!imgType.includes(file.type)) {\n            message.warning(`请上传${imgType.join('、')}格式的图片`);\n            return;\n          }\n\n          setDetail({\n            ...detail,\n            image_file: file\n          })\n          \n          const fr = new FileReader();\n          fr.readAsDataURL(file);\n          fr.onload = async (r) => {\n            setImgUrl(r.target.result)\n          }\n        }}\n      />\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { Table, Pagination, Input, Tooltip, Modal, Button, message } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { projectState } from '../../assets/js/constant';\nimport { ProjectDetail } from './Detail';\nimport { SelectArea } from '../../component/SelectArea';\nimport { throttle } from 'throttle-debounce';\nimport './index.less';\n\n// api\nimport { projectList, projectDelete, projectAdd, projectChange, projectExport, projectImport } from '../../api';\n\nexport default class ProjectPage extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      tableData: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 30,\n      showDetail: false,\n      type: 'add',\n      detail: null,\n      // 搜索条件\n      proj_keyword: '',\n      user_keyword: '',\n      area_code: +sessionStorage.getItem('areaCode') || 0,\n    }\n  };\n\n  fileInput\n\n  componentDidMount () {\n    this.getAll();\n  }\n\n  render () {\n    return (\n      <section className=\"project-page page-view\">\n        <header className=\"header\">\n          <span className=\"title\">工程列表</span>\n          <span>\n            <Button className=\"import-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => this.fileInput.click())}>\n              <i className=\"iconfont icon-daoru\" />\n              导入\n            </Button>\n            <Button className=\"export-btn header-btn\" type=\"primary\" onClick={throttle(1000, this.exportData)}>\n              <i className=\"iconfont icon-export\" />\n              导出\n            </Button>\n            <Button className=\"add-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => {\n              this.setState({\n                showDetail: true,\n                type: 'add',\n                detail: null\n              })\n            })}\n            >\n              <i className=\"iconfont icon-add1\" />\n              添加\n            </Button> \n          </span>\n        </header>\n        <section className=\"body\">\n          <ul className=\"search-box\">\n            <li>\n              <span className=\"label\">工程：</span>\n              <Input\n                value={this.state.proj_keyword}\n                onChange={(e) => {\n                  this.setState({\n                    proj_keyword: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"名称\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 120 }}\n              />\n            </li>\n            <li>\n              <span className=\"label\">工程负责人：</span>\n              <Input\n                value={this.state.user_keyword}\n                onChange={(e) => {\n                  this.setState({\n                    user_keyword: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"用户名、手机\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 140 }}\n              />\n            </li>\n            <li>\n              <span className=\"label\">区域：</span>\n              <SelectArea selectAll width={320} area_code={this.state.area_code} visible onChange={({code}) => {\n                this.setState({ area_code: code})\n              }}\n              />\n            </li>\n            <li>\n              <Tooltip title=\"搜素\">\n                <Button shape=\"circle\" type=\"primary\" style={{marginRight: 10}} onClick={throttle(1000, this.getAll)}>\n                  <i className=\"iconfont icon-sousuo\" />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"重置\">\n                <Button shape=\"circle\" type=\"primary\" onClick={throttle(1000,() => {\n                  this.setState(() => ({\n                    proj_keyword: '',\n                    user_keyword: '',\n                    area_code: '',\n                  }), this.getAll)\n                })}\n                >\n                  <i className=\"iconfont icon-zhongzhi\" />\n                </Button>\n              </Tooltip>\n            </li>\n          </ul>\n          <Table\n            dataSource={this.state.tableData}\n            rowKey={r => r.project_id}\n            pagination={false}\n          >\n            <Table.Column title=\"工程名\" dataIndex=\"name\" key=\"name\" />\n            <Table.Column title=\"区域\" dataIndex=\"area_name\" key=\"area_name\"\n              render={(val, record) => (<span>{record.area_code ? val : '全国'}</span>)}\n            />\n            <Table.Column title=\"状态\" min-width=\"80px\" dataIndex=\"state\" key=\"state\"\n              render={(val, _) => (<span>{projectState[val]}</span>)}\n            />\n            <Table.Column title=\"手动探测周期(天)\" width={140} dataIndex=\"manu_detect_period\" key=\"manu_detect_period\" />\n            <Table.Column title=\"检查周期(天)\" width={120} dataIndex=\"inspect_period\" key=\"inspect_period\" />\n            <Table.Column title=\"图片\" width={60} dataIndex=\"image_path\" key=\"image_path\" render={(val, _) => \n              val ? \n              (<img alt=\"\" src={window.globalData.host + val} style={{width: 60, height: 60}} />) : <></>\n              }\n            />\n            <Table.Column title=\"描述\" dataIndex=\"comment\" key=\"comment\" />\n            <Table.Column title=\"操作\" width=\"100px\" dataIndex=\"operation\" key=\"operation\"\n              render={(_, record) => (\n                <>\n                  <Tooltip title=\"修改\">\n                    <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => {\n                      this.setState({\n                        showDetail: true,\n                        type: 'edit',\n                        detail: record\n                      })\n                    })} \n                    />\n                  </Tooltip>\n                  <Tooltip title=\"绑定工程人员\">\n                    <i className=\"iconfont icon-renyuan\" onClick={throttle(1000, () => this.props.history.push(`/project/user/${record.project_id}`))} />\n                  </Tooltip>\n                  <Tooltip title=\"删除\">\n                    <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete(record.project_id))} />\n                  </Tooltip>\n                </>\n              )}\n            />\n          </Table>\n          <Pagination\n            defaultCurrent={this.state.currentPage}\n            pageSize={this.state.pageSize}\n            showTotal={() => `总数 ${this.state.total} `}\n            total={this.state.total}\n            locale={{\n              items_per_page: '每页行数',\n            }}\n            showSizeChanger\n            onShowSizeChange={(currentPage, pageSize) => {\n              this.setState({\n                currentPage: 1,\n                pageSize\n              }, () => {\n                this.getAll()\n              });\n            }}\n            onChange={(pageNumber) => {\n              this.setState({\n                currentPage: pageNumber\n              }, () => {\n                this.getAll()\n              });\n            }}\n          />\n        </section>\n      \n        {/* 添加或者编辑 */}\n        <ProjectDetail onCancel={() => {\n          this.setState({\n            showDetail: false,\n            detail: null\n          })\n        }}\n        onSubmit={(values) => this.onSubmit(values)}\n        detail={this.state.detail}\n        visible={this.state.showDetail}\n        />\n\n        {/* 导入csv */}\n        <input\n          type=\"file\"\n          ref={r => this.fileInput = r}\n          style={{display: 'none'}}\n          id=\"upload-file\"\n          accept={\"text/csv\"}\n          onClick={throttle(1000, (e) => {\n            e.target.value = ''\n          })}\n          onChange={async (e) => {\n            const file = e.target.files[0];\n\n            if (file.type !== 'text/csv' && file.type !== 'application/vnd.ms-excel') {\n              message.warning(`请上传CSV格式的文件`);\n              return;\n            }\n\n            // 导入数据\n            if (file) {\n              const res = await projectImport({\n                input_file: file\n              });\n              if (res && res.complete_count) {\n                this.getAll()\n              } else {\n                message.error(res.err_msgs?.join('、'))\n              }\n            }\n          }}\n        />\n      </section>\n    );\n  }\n  \n  // 分页获取\n  getAll = async () => {\n    const res = await projectList({\n      get_count: this.state.pageSize,\n      start_index: (this.state.currentPage - 1) * this.state.pageSize,\n      proj_keyword: this.state.proj_keyword,\n      user_keyword: this.state.user_keyword,\n      area_code: this.state.area_code,\n    });\n    if (res) {\n      this.setState({\n        tableData: res.records,\n        total: res.total_count\n      })\n    }\n  }\n\n  // 删除\n  onDelete = (id) => {\n    Modal.confirm({\n      title: '确认删除选中的工程?',\n      icon: <ExclamationCircleOutlined />,\n      okText: '确认',\n      cancelText: '取消',\n      onOk: async () => {\n        const res = await projectDelete(id, {})\n        if (res) {\n          this.getAll();\n        }\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    })\n  }\n\n  // 添加或者修改\n  onSubmit = async (values) => {\n    const res = this.state.type === 'add' ?\n    await projectAdd(values) : await projectChange(values.project_id, values);\n    if (res) {\n      this.setState({\n        showDetail: false,\n        detail: null\n      });\n      message.success(`${this.state.type === 'add' ? '添加成功' : '修改成功'}`);\n      this.getAll();\n    }\n  }\n\n  // 导出数据\n  exportData = async () => {\n    const res = await projectExport({\n      ignoreResCode: true,\n      proj_keyword: this.state.proj_keyword,\n      user_keyword: this.state.user_keyword,\n      area_code: this.state.area_code,\n    })\n\n    const content = \"\\ufeff\" + res;\n    const blob = new Blob([content], { type: 'text/csv, chartset=UTF-8' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.style.display = 'none';\n    a.download = '工程.csv';\n    a.click();\n    URL.revokeObjectURL(a.href)\n  }\n};\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Select, Button, Modal, Divider } from 'antd';\r\nimport { projectUserRole } from '../../assets/js/constant';\r\nimport { userList } from '../../api';\r\nimport { throttle } from 'throttle-debounce';\r\n\r\nconst { Option } = Select;\r\n\r\nconst defaultDetail = {\r\n  user_id: '',\r\n  role: 1\r\n}\r\n\r\nexport const ProjectDetail = (props) => {\r\n  const [detail, setDetail] = useState(defaultDetail);\r\n  const [users, setUsers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const [form] = Form.useForm();\r\n  const initialValues = {\r\n    ...detail,\r\n    user_id: detail.user_id + '',\r\n    role: detail.role + ''\r\n  }\r\n  form.setFieldsValue(initialValues)\r\n\r\n  useEffect( () => {\r\n    async function fetchData () {\r\n      if (props.visible) {\r\n        setDetail(props.detail || defaultDetail);\r\n        const res = await userList({\r\n          get_count: 10,\r\n          start_index: (currentPage - 1) * 10\r\n        })\r\n        if (res) {\r\n          setUsers(res.records);\r\n          setTotal(res.total_count);\r\n        }\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [props.visible]);\r\n\r\n  return (\r\n    <Modal\r\n      width={400}\r\n      title={props.detail ? '编辑信息' : '绑定工程人员'}\r\n      footer={null}\r\n      visible={props.visible}\r\n      onCancel={() => {\r\n        setDetail(defaultDetail);\r\n        setUsers([]);\r\n        setCurrentPage(1);\r\n        setTotal(0);\r\n        props.onCancel();\r\n      }}\r\n    >\r\n      <Form className=\"detail-form project-user-form\" onFinish={(values) => {\r\n        props.onSubmit(detail);\r\n      }}\r\n      form={form}\r\n      initialValues={initialValues}\r\n      >\r\n        <Form.Item label=\"工程人员\" name=\"user_id\" rules={[{ required: true, message: '请选择工程人员' }]}>\r\n          <Select value={detail.user_id + ''} disabled={props.detail}\r\n            onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                user_id: +val\r\n              })\r\n            }}\r\n            dropdownRender={(menu) => (\r\n              <section>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <section style={{textAlign: 'right'}}>\r\n                  <Button type=\"link\" disabled={currentPage === 1}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = currentPage - 1;\r\n                      const res = await userList({\r\n                        get_count: 10,\r\n                        start_index: (page - 1) * 10\r\n                      })\r\n                      if (res) {\r\n                        setUsers(res.records);\r\n                        setTotal(res.total_count);\r\n                        setCurrentPage(page);\r\n                      }\r\n                    })}\r\n                  >上一页</Button>\r\n                  <Button type=\"link\" disabled={currentPage * 10 >= total}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = currentPage + 1;\r\n                      const res = await userList({\r\n                        get_count: 10,\r\n                        start_index: (page - 1) * 10\r\n                      })\r\n                      if (res) {\r\n                        setUsers(res.records);\r\n                        setTotal(res.total_count);\r\n                        setCurrentPage(page);\r\n                      }\r\n                    })}\r\n                  >下一页</Button>\r\n                </section>\r\n              </section>\r\n            )}\r\n          >\r\n            {\r\n              users.map((item) => {\r\n                return <Option key={item.id} value={item.id + ''}>{item.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"角色\" name=\"role\" rules={[{ required: true, message: '请选择角色' }]}>\r\n          <Select value={detail.role + ''} onChange={(val) => {\r\n            setDetail({\r\n              ...detail,\r\n              role: +val\r\n            })\r\n          }}\r\n          >\r\n            {\r\n              Object.keys(projectUserRole).map((key) => {\r\n                return <Option value={key + ''} key={key}>{projectUserRole[key]}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <section className=\"form-btn\">\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={throttle(1000, () => {\r\n              if (props.detail) {\r\n                setDetail(props.detail)\r\n              } else {\r\n                setDetail(defaultDetail)\r\n              }\r\n            })}\r\n            >\r\n              重置\r\n            </Button>\r\n          </section>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table, Pagination, Input, Tooltip, Modal, Button, message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { projectUserRole } from '../../assets/js/constant';\r\nimport { ProjectDetail } from './Detail';\r\nimport { throttle } from 'throttle-debounce';\r\nimport './index.less';\r\n\r\n// api\r\nimport { projectGet, projectUserList, projectUserUnbind, projectUserBind, projectUserChange, projectUserExport } from '../../api';\r\n\r\nexport default class ProjectUserPage extends React.Component {\r\n  constructor (props) {\r\n    super (props);\r\n    this.state = {\r\n      tableData: [],\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: 30,\r\n      showDetail: false,\r\n      type: 'add',\r\n      detail: null,\r\n      projectName: '',\r\n      // 搜索条件\r\n      user_keyword: ''\r\n    }\r\n  };\r\n\r\n  componentDidMount () {\r\n    this.getAll();\r\n    this.getProject();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <section className=\"project-user-page page-view\">\r\n        <header className=\"header\">\r\n          <span className=\"title\">\r\n            <Link to=\"/project\">工程</Link> / 工程人员列表\r\n          </span>\r\n          <span>\r\n            <Button className=\"import-btn header-btn\" type=\"primary\">\r\n              <i className=\"iconfont icon-daoru\" />\r\n              导入\r\n            </Button>\r\n            <Button className=\"export-btn header-btn\" type=\"primary\" onClick={throttle(1000, this.exportData)}>\r\n              <i className=\"iconfont icon-export\" />\r\n              导出\r\n            </Button>\r\n            <Button className=\"add-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => {\r\n              this.setState({\r\n                showDetail: true,\r\n                type: 'add',\r\n                detail: null\r\n              })\r\n            })}\r\n            >\r\n              <i className=\"iconfont icon-add1\" />\r\n              添加\r\n            </Button> \r\n          </span>\r\n        </header>\r\n        <section className=\"body\">\r\n          <ul className=\"search-box\">\r\n            <li style={{marginRight: 30}}>\r\n              <i className=\"iconfont icon-gongcheng\" style={{marginRight: 10}} />\r\n              {this.state.projectName}\r\n            </li>\r\n            <li>\r\n              <span className=\"label\">用户：</span>\r\n              <Input\r\n                value={this.state.user_keyword}\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    user_keyword: e.target.value\r\n                  })\r\n                }}\r\n                allowClear\r\n                placeholder=\"用户名、手机\"\r\n                onPressEnter={() => {\r\n                  this.getAll()\r\n                }}\r\n                style={{ width: 200 }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <Tooltip title=\"搜素\">\r\n                <Button shape=\"circle\" type=\"primary\" style={{marginRight: 10}} onClick={throttle(1000, this.getAll)}>\r\n                  <i className=\"iconfont icon-sousuo\" />\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"重置\">\r\n                <Button shape=\"circle\" type=\"primary\" onClick={throttle(1000, () => {\r\n                  this.setState(() => ({\r\n                    user_keyword: ''\r\n                  }), this.getAll)\r\n                })}\r\n                >\r\n                  <i className=\"iconfont icon-zhongzhi\" />\r\n                </Button>\r\n              </Tooltip>\r\n            </li>\r\n          </ul>\r\n          <Table\r\n            dataSource={this.state.tableData}\r\n            rowKey={r => r.project_id}\r\n            pagination={false}\r\n          >\r\n            <Table.Column title=\"用户\" dataIndex=\"name\" key=\"name\" />\r\n            <Table.Column title=\"手机号\" dataIndex=\"mobile\" key=\"mobile\" />\r\n            <Table.Column title=\"角色\" dataIndex=\"role\" key=\"role\"\r\n              render={(val, _) => (<span>{projectUserRole[val]}</span>)}\r\n            />\r\n            <Table.Column title=\"操作\" width=\"100px\" dataIndex=\"operation\" key=\"operation\"\r\n              render={(_, record) => (\r\n                <>\r\n                  <Tooltip title=\"修改\">\r\n                    <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => {\r\n                      this.setState({\r\n                        showDetail: true,\r\n                        type: 'edit',\r\n                        detail: {\r\n                          user_id: record.id,\r\n                          role: record.role\r\n                        }\r\n                      })\r\n                    })} \r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title=\"解绑\">\r\n                    <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete(record.id))} />\r\n                  </Tooltip>\r\n                </>\r\n              )}\r\n            />\r\n          </Table>\r\n          <Pagination\r\n            defaultCurrent={this.state.currentPage}\r\n            pageSize={this.state.pageSize}\r\n            showTotal={() => `总数 ${this.state.total} `}\r\n            total={this.state.total}\r\n            locale={{\r\n              items_per_page: '每页行数',\r\n            }}\r\n            showSizeChanger\r\n            onShowSizeChange={(currentPage, pageSize) => {\r\n              this.setState({\r\n                currentPage: 1,\r\n                pageSize\r\n              }, () => {\r\n                this.getAll()\r\n              });\r\n            }}\r\n            onChange={(pageNumber) => {\r\n              this.setState({\r\n                currentPage: pageNumber\r\n              }, () => {\r\n                this.getAll()\r\n              });\r\n            }}\r\n          />\r\n        </section>\r\n      \r\n        {/* 添加或者编辑 */}\r\n        <ProjectDetail onCancel={() => {\r\n          this.setState({\r\n            showDetail: false,\r\n            detail: null\r\n          })\r\n        }}\r\n        onSubmit={(values) => this.onSubmit(values)}\r\n        detail={this.state.detail}\r\n        visible={this.state.showDetail}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // 获取工程详情\r\n  getProject = async () => {\r\n    const res = await projectGet(this.props.match.params.proId, {\r\n      id: this.props.match.params.proId\r\n    })\r\n    if (res) {\r\n      this.setState({\r\n        projectName: res.record.name\r\n      })\r\n    }\r\n  }\r\n  \r\n  // 分页获取\r\n  getAll = async () => {\r\n    const res = await projectUserList({\r\n      get_count: this.state.pageSize,\r\n      start_index: (this.state.currentPage - 1) * this.state.pageSize,\r\n      project_id: this.props.match.params.proId,\r\n      user_keyword: this.state.user_keyword,\r\n    });\r\n    if (res) {\r\n      this.setState({\r\n        tableData: res.records,\r\n        total: res.total_count\r\n      })\r\n    }\r\n  }\r\n\r\n  // 删除\r\n  onDelete = (id) => {\r\n    Modal.confirm({\r\n      title: '确认解绑选中的人员?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        const res = await projectUserUnbind(this.props.match.params.proId, id, {})\r\n        if (res) {\r\n          this.getAll();\r\n        }\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    })\r\n  }\r\n\r\n  // 添加或者修改\r\n  onSubmit = async (values) => {\r\n    const param = {\r\n      ...values,\r\n      project_id: this.props.match.params.proId\r\n    }\r\n    const res = this.state.type === 'add' ?\r\n    await projectUserBind(param) : await projectUserChange(param.project_id, param.user_id, param);\r\n    if (res) {\r\n      this.setState({\r\n        showDetail: false,\r\n        detail: null\r\n      });\r\n      message.success(`${this.state.type === 'add' ? '添加成功' : '修改成功'}`);\r\n      this.getAll();\r\n    }\r\n  }\r\n\r\n  // 导出数据\r\n  exportData = async () => {\r\n    const res = await projectUserExport({});\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Button, Modal, Divider } from 'antd';\nimport { pointState } from '../../assets/js/constant';\nimport { projectList } from '../../api';\nimport { throttle } from 'throttle-debounce';\n\nconst { Option } = Select;\n\nconst defaultDetail = {\n  point_id: '',\n  project_id: '',\n  name: '',\n  tag: '',\n  state: 2,\n}\n\nexport const PointDetail = (props) => {\n  const [detail, setDetail] = useState(defaultDetail);\n  const [projects, setProjects] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total, setTotal] = useState(0);\n\n  const [form] = Form.useForm();\n  const initialValues = {\n    ...detail,\n    project_id: detail.project_id + '',\n    state: detail.state + ''\n  }\n  form.setFieldsValue(initialValues)\n\n  useEffect(() => {\n    async function fetchData () {\n      if (props.visible) {\n        setDetail(props.detail || defaultDetail);\n        const res = await projectList({\n          get_count: 10,\n          start_index: (currentPage - 1) * 10,\n          area_code: +sessionStorage.getItem('areaCode') || 0,\n        })\n        if (res) {\n          setProjects(res.records);\n          setTotal(res.total_count);\n        }\n      }\n    }\n    fetchData()\n  }, [props.visible]);\n\n  return (\n    <Modal\n      title={props.detail ? '编辑信息' : '添加布点'}\n      footer={null}\n      visible={props.visible}\n      onCancel={() => {\n        setDetail(defaultDetail)\n        props.onCancel();\n      }}\n    >\n      <Form className=\"detail-form point-form\" onFinish={(values) => {\n        props.onSubmit(detail);\n      }}\n      form={form}\n      initialValues={initialValues}\n      >\n        <Form.Item label=\"布点名\" name=\"name\"\n          rules={[{ required: true, message: '请输入布点名' }]}\n        >\n          <Input maxLength={32} value={detail.name} onChange={(e) => {\n            setDetail({\n              ...detail,\n              name: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"所属工程\" name=\"project_id\"\n          rules={[{ required: true, message: '请选择所属工程' }]}\n        >\n          <Select value={detail.project_id + ''} disabled={props.detail}\n            onChange={(val) => {\n              setDetail({\n                ...detail,\n                project_id: +val\n              })\n            }}\n            dropdownRender={(menu) => (\n              <section>\n                {menu}\n                <Divider style={{ margin: '4px 0' }} />\n                <section style={{textAlign: 'right'}}>\n                  <Button type=\"link\" disabled={currentPage === 1}\n                    onClick={throttle(1000, async () => {\n                      const page = currentPage - 1;\n                      const res = await projectList({\n                        get_count: 10,\n                        start_index: (page - 1) * 10,\n                        area_code: +sessionStorage.getItem('areaCode') || 0,\n                      })\n                      if (res) {\n                        setProjects(res.records);\n                        setTotal(res.total_count);\n                        setCurrentPage(page);\n                      }\n                    })}\n                  >上一页</Button>\n                  <Button type=\"link\" disabled={currentPage * 10 >= total}\n                    onClick={throttle(1000, async () => {\n                      const page = currentPage + 1;\n                      const res = await projectList({\n                        get_count: 10,\n                        start_index: (page - 1) * 10,\n                        area_code: +sessionStorage.getItem('areaCode') || 0,\n                      })\n                      if (res) {\n                        setProjects(res.records);\n                        setTotal(res.total_count);\n                        setCurrentPage(page);\n                      }\n                    })}\n                  >下一页</Button>\n                </section>\n              </section>\n\n            )}\n          >\n            {\n              projects.map((item) => {\n                return <Option key={item.project_id} value={item.project_id + ''}>{item.name}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"状态\" name=\"state\">\n          <Select value={detail.state + ''} onChange={(val) => {\n            setDetail({\n              ...detail,\n              state: +val\n            })\n          }}\n          >\n            {\n              Object.keys(pointState).map((key) => {\n                return <Option value={key + ''} key={key}>{pointState[key]}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"标签\" name=\"tag\">\n          <Input maxLength={32} value={detail.tag} onChange={(e) => {\n            setDetail({\n              ...detail,\n              tag: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item>\n          <section className=\"form-btn\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交\n            </Button>\n            <Button htmlType=\"button\" onClick={throttle(1000, () => {\n              if (props.detail) {\n                setDetail(props.detail)\n              } else {\n                setDetail(defaultDetail)\n              }\n            })}\n            >\n              重置\n            </Button>\n          </section>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}","import React from 'react';\nimport { Table, Pagination, Input, Tooltip, Modal, Button, message, Tag, Select } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { pointState, warningType, deviceType, deviceState, measureType, inspectResult } from '../../assets/js/constant';\nimport { PointDetail } from './Detail';\nimport { SelectArea } from '../../component/SelectArea';\nimport { throttle } from 'throttle-debounce';\nimport { getDateTime } from '../Card/DateAndTime';\nimport './index.less';\n\n// api\nimport { pointList, pointBatchDelete, pointAdd, pointChange, pointExport, pointImport } from '../../api';\n\nconst { Option } = Select;\n\nexport default class PointPage extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      tableData: [],\n      projects: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 30,\n      showDetail: false,\n      type: 'add',\n      detail: null,\n      selectedKeys: [],\n      // 搜索\n      proj_keyword: '',\n      point_keyword: '',\n      state: '',\n      device_code: '',\n      device_type: '',\n      area_code: +sessionStorage.getItem('areaCode') || '',\n    }\n  };\n\n  fileInput\n\n  componentDidMount () {\n    this.getAll();\n  }\n\n  render () {\n    return (\n      <section className=\"point-page page-view\">\n        <header className=\"header\">\n          <span className=\"title\">布点列表</span>\n          <span>\n            <Button className=\"add-btn header-btn\" type=\"primary\" disabled={!this.state.selectedKeys.length} onClick={throttle(1000, () => {\n              this.onDelete(this.state.selectedKeys)\n            })}\n            >\n              <i className=\"iconfont icon-piliangshanchu1\" />\n              批量删除\n            </Button>\n            <Button className=\"import-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => this.fileInput.click())}>\n              <i className=\"iconfont icon-daoru\" />\n              导入\n            </Button>\n            <Button className=\"export-btn header-btn\" type=\"primary\" onClick={throttle(1000, this.exportData)}>\n              <i className=\"iconfont icon-export\" />\n              导出\n            </Button>\n            <Button className=\"add-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => {\n              this.setState({\n                showDetail: true,\n                type: 'add',\n                detail: null\n              })\n            })}\n            >\n              <i className=\"iconfont icon-add1\" />\n              添加\n            </Button> \n          </span>\n        </header>\n        <section className=\"body\">\n          <ul className=\"search-box\">\n            <li>\n              <span className=\"label\">工程：</span>\n              <Input\n                value={this.state.proj_keyword}\n                onChange={(e) => {\n                  this.setState({\n                    proj_keyword: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"名称\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 120 }}\n              />\n            </li>\n            <li>\n              <span className=\"label\">布点：</span>\n              <Input\n                value={this.state.point_keyword}\n                onChange={(e) => {\n                  this.setState({\n                    point_keyword: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"名称、标签\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 120 }}\n              />\n            </li>\n            <li>\n              <span className=\"label\">状态：</span>\n              <Select value={this.state.state + ''} style={{ width: 120 }}\n                onChange={(val) => {\n                  this.setState({\n                    state: +val\n                  })\n                }}\n              >\n                {\n                  Object.keys(pointState).map((key) => {\n                    return <Option value={key + ''} key={key}>{+key === 0 ? '全部' : pointState[key]}</Option>\n                  })\n                }\n              </Select>\n            </li>\n            <li>\n              <span className=\"label\">区域：</span>\n              <SelectArea width={320} area_code={this.state.area_code} visible onChange={({code}) => {\n                this.setState({ area_code: code})\n              }}\n              />\n            </li>\n            \n          </ul>\n          <ul className=\"search-box\" style={{borderTop: 'none'}}>\n            <li>\n              <span className=\"label\">设备编码：</span>\n              <Input\n                value={this.state.device_code}\n                onChange={(e) => {\n                  this.setState({\n                    device_code: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"设备编码\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 120 }}\n              />\n            </li>\n            <li>\n              <span className=\"label\">设备类型：</span>\n              <Select style={{width: 120}} value={this.state.device_type + ''} onChange={val => {\n                this.setState({device_type: +val})\n              }}\n              >\n                {\n                  Object.keys(deviceType).map(v => {\n                    return <Option key={v} value={v + ''}>{+v === 0 ? '全部' : deviceType[v]}</Option>\n                  })\n                }\n              </Select>\n            </li>\n            <li>\n              <Tooltip title=\"搜素\">\n                <Button shape=\"circle\" type=\"primary\" style={{marginRight: 10}} onClick={throttle(1000, this.getAll)}>\n                  <i className=\"iconfont icon-sousuo\" />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"重置\">\n                <Button shape=\"circle\" type=\"primary\" onClick={throttle(1000, () => {\n                  this.setState(() => ({\n                    proj_keyword: '',\n                    point_keyword: '',\n                    state: '',\n                    area_code: ''\n                  }), this.getAll)\n                })}\n                >\n                  <i className=\"iconfont icon-zhongzhi\" />\n                </Button>\n              </Tooltip>\n            </li>\n          </ul>\n          <Table\n            bordered\n            dataSource={this.state.tableData}\n            rowKey={r => r.point_id}\n            pagination={false}\n            scroll={{x: 1500}}\n            rowSelection={{\n              onChange: (keys) => {\n                this.setState({\n                  selectedKeys: keys\n                })\n              }\n            }}\n          >\n            <Table.Column title=\"布点名\" width={100} dataIndex=\"name\" key=\"name\" />\n            <Table.Column title=\"所属工程\" width={100} dataIndex=\"project_name\" key=\"project_name\" />\n            <Table.Column title=\"状态\" width={90} dataIndex=\"state\" key=\"state\"\n              render={(val, _) => (<span>{pointState[val]}</span>)}\n            />\n            {/* 设备信息 */}\n            <Table.ColumnGroup title=\"设备信息\">\n              <Table.Column title=\"编码\" dataIndex=\"device_code\" key=\"device_code\" />\n              <Table.Column title=\"类型\" width={90} dataIndex=\"device_type\" key=\"device_type\"\n                render={(val, _) => (<span>{deviceType[val]}</span>)}\n              />\n              <Table.Column title=\"状态\" width={90} dataIndex=\"device_state\" key=\"device_state\"\n                render={(val, _) => (<span>{deviceState[val]}</span>)}\n              />\n            </Table.ColumnGroup>\n            {/* 通讯卡信息 */}\n            {/* <Table.ColumnGroup title=\"通讯卡信息\">\n              <Table.Column title=\"编码\" dataIndex=\"card_code\" key=\"card_code\" />\n              <Table.Column title=\"类型\" dataIndex=\"card_type\" key=\"card_type\"\n                render={(val, _) => (<span>{cardType[val]}</span>)}\n              />\n              <Table.Column title=\"流量截止时间\" dataIndex=\"service_deadline\" key=\"service_deadline\"\n                render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\n              />\n            </Table.ColumnGroup> */}\n\n            {/* 检查信息 */}\n            <Table.ColumnGroup title=\"检查信息\">\n              <Table.Column title=\"措施\" dataIndex=\"inspect_measure\" key=\"inspect_measure\"\n                render={(val, _) => (<span>{measureType[val]}</span>)}\n              />\n              <Table.Column title=\"结果\" dataIndex=\"inspect_state\" key=\"inspect_state\"\n                render={(val, _) => (<span>{inspectResult[val]}</span>)}\n              />\n              <Table.Column title=\"检查时间\" width={120} dataIndex=\"inspect_timestamp\" key=\"inspect_timestamp\"\n                render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\n              />\n            </Table.ColumnGroup>\n            <Table.Column title=\"部署时间\" width={120} dataIndex=\"deploy_timestamp\" key=\"deploy_timestamp\"\n              render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\n            />\n            <Table.Column title=\"探测时间\" width={120} dataIndex=\"detect_timestamp\" key=\"detect_timestamp\"\n              render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\n            />\n            <Table.Column title=\"报警类型\" width={90} dataIndex=\"warn_type\" key=\"warn_type\"\n              render={(val, _) => (<span>{warningType[val]}</span>)}\n            />\n\n            <Table.Column title=\"标签\" dataIndex=\"tag\" key=\"tag\"\n              render={(val, _) => (<Tag>{val}</Tag>)}\n            />\n            <Table.Column title=\"操作\" width=\"100px\" dataIndex=\"operation\" key=\"operation\"\n              render={(_, record) => (\n                <>\n                  <Tooltip title=\"修改\">\n                    <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => {\n                      this.setState({\n                        showDetail: true,\n                        type: 'edit',\n                        detail: {\n                          point_id: record.point_id,\n                          project_id: record.project_id,\n                          name: record.name,\n                          tag: record.tag,\n                          state: record.state,\n                        }\n                      })\n                    })} \n                    />\n                  </Tooltip>\n                  <Tooltip title=\"删除\">\n                    <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete([record.point_id]))} />\n                  </Tooltip>\n                </>\n              )}\n            />\n          </Table>\n          <Pagination\n            defaultCurrent={this.state.currentPage}\n            pageSize={this.state.pageSize}\n            showTotal={() => `总数 ${this.state.total} `}\n            total={this.state.total}\n            locale={{\n              items_per_page: '每页行数',\n            }}\n            showSizeChanger\n            onShowSizeChange={(currentPage, pageSize) => {\n              this.setState({\n                currentPage: 1,\n                pageSize\n              }, () => {\n                this.getAll()\n              });\n            }}\n            onChange={(pageNumber) => {\n              this.setState({\n                currentPage: pageNumber\n              }, () => {\n                this.getAll()\n              });\n            }}\n          />\n        </section>\n      \n        {/* 添加或者编辑弹窗 */}\n        <PointDetail\n          visible={this.state.showDetail}\n          onCancel={() => {\n            this.setState({\n              showDetail: false,\n              detail: null\n            })\n          }}\n          onSubmit={(values) => this.onSubmit(values)}\n          detail={this.state.detail}\n        />\n\n        {/* 导入csv */}\n        <input\n          type=\"file\"\n          ref={r => this.fileInput = r}\n          style={{display: 'none'}}\n          id=\"upload-file\"\n          accept={\"text/csv\"}\n          onClick={throttle(1000, (e) => {\n            e.target.value = ''\n          })}\n          onChange={async (e) => {\n            const file = e.target.files[0];\n\n            if (file.type !== 'text/csv' && file.type !== 'application/vnd.ms-excel') {\n              message.warning(`请上传CSV格式的文件`);\n              return;\n            }\n\n            // 导入数据\n            if (file) {\n              const res = await pointImport({\n                input_file: file\n              });\n              if (res && res.complete_count) {\n                this.getAll()\n              } else {\n                message.error(res.err_msgs?.join('、'))\n              }\n            }\n          }}\n        />\n      </section>\n    );\n  }\n  \n  // 分页获取\n  getAll = async () => {\n    const res = await pointList({\n      get_count: this.state.pageSize,\n      start_index: (this.state.currentPage - 1) * this.state.pageSize,\n      proj_keyword: this.state.proj_keyword,\n      point_keyword: this.state.point_keyword,\n      state: this.state.state,\n      device_code: this.state.device_code,\n      device_type: this.state.device_type,\n      area_code: this.state.area_code\n    });\n    if (res) {\n      this.setState({\n        tableData: res.records,\n        total: res.total_count\n      })\n    }\n  }\n\n  // 删除\n  onDelete = (id) => {\n    Modal.confirm({\n      title: '确认删除选中的布点?',\n      icon: <ExclamationCircleOutlined />,\n      okText: '确认',\n      cancelText: '取消',\n      onOk: async () => {\n        const res = await pointBatchDelete(id, {})\n        if (res) {\n          this.getAll();\n        }\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    })\n  }\n\n  // 添加或者修改\n  onSubmit = async (values) => {\n    const res = this.state.type === 'add' ?\n    await pointAdd(values) : await pointChange(values.point_id, values);\n    if (res) {\n      this.setState({\n        showDetail: false,\n        detail: null\n      });\n      message.success(`${this.state.type === 'add' ? '添加成功' : '修改成功'}`);\n      this.getAll();\n    }\n  }\n\n  // 导出\n  exportData = async () => {\n    const res = await pointExport({\n      ignoreResCode: true,\n      proj_keyword: this.state.proj_keyword,\n      user_keyword: this.state.user_keyword,\n      area_code: this.state.area_code,\n    })\n\n    const content = \"\\ufeff\" + res;\n    const blob = new Blob([content], { type: 'text/csv, chartset=UTF-8' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.style.display = 'none';\n    a.download = '布点.csv';\n    a.click();\n    URL.revokeObjectURL(a.href)\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Button, Modal, Divider } from 'antd';\nimport { deviceType, deviceState } from '../../assets/js/constant';\nimport { cardList } from '../../api';\nimport { throttle } from 'throttle-debounce';\n\nconst { Option } = Select;\n\nconst defaultDetail = {\n  device_id: '',\n  code: '',\n  type: 2,\n  card_id: '',\n  tag: '',\n  state: 1,\n}\n\nexport const DeviceDetail = (props) => {\n  const [detail, setDetail] = useState(defaultDetail);\n  const [cards, setCards] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total, setTotal] = useState(0);\n\n  const [form] = Form.useForm();\n  const initialValues = {\n    ...detail,\n    state: detail.state + '',\n    type: detail.type + '',\n    card_id: detail.card_id + ''\n  }\n  form.setFieldsValue(initialValues)\n\n  useEffect(() => {\n    async function fetchData () {\n      if (props.visible) {\n        setDetail(props.detail || defaultDetail);\n        const res = await cardList({\n          get_count: 10,\n          start_index: (currentPage - 1) * 10,\n        })\n        if (res) {\n          setCards(res.records);\n          setTotal(res.total_count);\n        }\n      }\n    }\n    fetchData()\n  }, [props.visible]);\n\n  return (\n    <Modal\n      title={props.detail ? '编辑信息' : '添加设备'}\n      footer={null}\n      visible={props.visible}\n      onCancel={() => {\n        setDetail(defaultDetail)\n        props.onCancel();\n      }}\n    >\n      <Form className=\"detail-form device-form\" onFinish={(values) => {\n        props.onSubmit(detail);\n      }}\n      form={form}\n      initialValues={initialValues}\n      >\n        <Form.Item label=\"设备编码\" name=\"code\"\n          rules={[{ required: true, message: '请输入设备编码' }]}\n        >\n          <Input maxLength={16} value={detail.code} onChange={(e) => {\n            setDetail({\n              ...detail,\n              code: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"类型\" name=\"type\"\n          rules={[{ required: true, message: '请选择类型' }]}\n        >\n          <Select value={detail.type + ''} onChange={(val) => {\n            setDetail({\n              ...detail,\n              type: +val\n            })\n          }}\n          >\n            {\n              Object.keys(deviceType).map((key) => {\n                return <Option value={key + ''} key={key}>{deviceType[key]}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"状态\" name=\"state\"\n          rules={[{ required: true, message: '请选择状态' }]}\n        >\n          <Select value={detail.state + ''} onChange={(val) => {\n            setDetail({\n              ...detail,\n              state: +val\n            })\n          }}\n          >\n            {\n              Object.keys(deviceState).map((key) => {\n                return <Option value={key + ''} key={key}>{deviceState[key]}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"通讯卡\" name=\"card_id\"\n          rules={[{ required: true, message: '请选择通讯卡' }]}\n        >\n\n          <Select value={detail.card_id + ''}\n            onChange={(val) => {\n              setDetail({\n                ...detail,\n                card_id: +val\n              })\n            }}\n            dropdownRender={(menu) => (\n              <section>\n                {menu}\n                <Divider style={{ margin: '4px 0' }} />\n                <section style={{textAlign: 'right'}}>\n                  <Button type=\"link\" disabled={currentPage === 1}\n                    onClick={throttle(1000, async () => {\n                      const page = currentPage - 1;\n                      const res = await cardList({\n                        get_count: 10,\n                        start_index: (page - 1) * 10,\n                      })\n                      if (res) {\n                        setCards(res.records);\n                        setTotal(res.total_count);\n                        setCurrentPage(page);\n                      }\n                    })}\n                  >上一页</Button>\n                  <Button type=\"link\" disabled={currentPage * 10 >= total}\n                    onClick={throttle(1000, async () => {\n                      const page = currentPage + 1;\n                      const res = await cardList({\n                        get_count: 10,\n                        start_index: (page - 1) * 10,\n                      })\n                      if (res) {\n                        setCards(res.records);\n                        setTotal(res.total_count);\n                        setCurrentPage(page);\n                      }\n                    })}\n                  >下一页</Button>\n                </section>\n              </section>\n\n            )}\n          >\n            {\n              cards.map((item) => {\n                return <Option key={item.card_id} value={item.card_id + ''}>{item.card_code}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"标签\" name=\"tag\">\n          <Input value={detail.tag} onChange={(e) => {\n            setDetail({\n              ...detail,\n              tag: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item>\n          <section className=\"form-btn\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交\n            </Button>\n            <Button htmlType=\"button\" onClick={throttle(1000, () => {\n              if (props.detail) {\n                setDetail(props.detail)\n              } else {\n                setDetail(defaultDetail)\n              }\n            })}\n            >\n              重置\n            </Button>\n          </section>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}","import React from 'react';\nimport { Table, Pagination, Input, Tooltip, Modal, Button, message, Tag, Select } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { deviceType, deviceState } from '../../assets/js/constant';\nimport { DeviceDetail } from './Detail';\nimport { throttle } from 'throttle-debounce';\nimport './index.less';\n\n// api\nimport { deviceList, deviceBatchDelete, deviceAdd, deviceChange } from '../../api';\n\nconst { Option } = Select;\n\nexport default class DevicePage extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      tableData: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 30,\n      showDetail: false,\n      operationType: 'add',\n      detail: null,\n      selectedKeys: [],\n      // 搜索\n      keyword: '',\n      type: '',\n      state: ''\n    }\n  };\n\n  componentDidMount () {\n    this.getAll();\n  }\n\n  render () {\n    return (\n      <section className=\"admin-page page-view\">\n        <header className=\"header\">\n          <span className=\"title\">设备列表</span>\n          <span>\n            <Button className=\"add-btn header-btn\" type=\"primary\" disabled={!this.state.selectedKeys.length} onClick={throttle(1000, () => {\n              this.onDelete(this.state.selectedKeys)\n            })}\n            >\n              <i className=\"iconfont icon-piliangshanchu1\" />\n              批量删除\n            </Button>\n            <Button className=\"import-btn header-btn\" type=\"primary\">\n              <i className=\"iconfont icon-daoru\" />\n              导入\n            </Button>\n            <Button className=\"export-btn header-btn\" type=\"primary\">\n              <i className=\"iconfont icon-export\" />\n              导出\n            </Button>\n            <Button className=\"add-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => {\n              this.setState({\n                showDetail: true,\n                operationType: 'add',\n                detail: null\n              })\n            })}\n            >\n              <i className=\"iconfont icon-add1\" />\n              添加\n            </Button> \n          </span>\n        </header>\n        <section className=\"body\">\n          <ul className=\"search-box\">\n            <li>\n              <span className=\"label\">设备：</span>\n              <Input\n                value={this.state.keyword}\n                onChange={(e) => {\n                  this.setState({\n                    keyword: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"编码、标签\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 120 }}\n              />\n            </li>\n            <li>\n              <span className=\"label\">设备类型：</span>\n              <Select value={this.state.type + ''} style={{ width: 120 }}\n                onChange={(val) => {\n                  this.setState({\n                    type: +val\n                  })\n                }}\n              >\n                {\n                  Object.keys(deviceType).map((key) => {\n                    return <Option value={key + ''} key={key}>{+key === 0 ? '全部' : deviceType[key]}</Option>\n                  })\n                }\n              </Select>\n            </li>\n            <li>\n              <span className=\"label\">设备状态：</span>\n              <Select value={this.state.state + ''} style={{ width: 120 }}\n                onChange={(val) => {\n                  this.setState({\n                    state: +val\n                  })\n                }}\n              >\n                {\n                  Object.keys(deviceState).map((key) => {\n                    return <Option value={key + ''} key={key}>{+key === 0 ? '全部' : deviceState[key]}</Option>\n                  })\n                }\n              </Select>\n            </li>\n            <li>\n              <Tooltip title=\"搜素\">\n                <Button shape=\"circle\" type=\"primary\" style={{marginRight: 10}} onClick={throttle(1000, this.getAll)}>\n                  <i className=\"iconfont icon-sousuo\" />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"重置\">\n                <Button shape=\"circle\" type=\"primary\" onClick={throttle(1000, () => {\n                  this.setState(() => ({\n                    keyword: '',\n                    type: '',\n                    state: ''\n                  }), this.getAll)\n                })}\n                >\n                  <i className=\"iconfont icon-zhongzhi\" />\n                </Button>\n              </Tooltip>\n            </li>\n          </ul>\n          <Table\n            dataSource={this.state.tableData}\n            rowKey={r => r.device_id}\n            pagination={false}\n            rowSelection={{\n              onChange: (keys) => {\n                this.setState({\n                  selectedKeys: keys\n                })\n              }\n            }}\n          >\n            <Table.Column title=\"设备编码\" dataIndex=\"device_code\" key=\"device_code\" />\n            <Table.Column title=\"类型\" dataIndex=\"device_type\" key=\"device_type\"\n              render={(val, _) => (<span>{deviceType[val]}</span>)}\n            />\n            <Table.Column title=\"状态\" dataIndex=\"state\" key=\"state\"\n              render={(val, _) => (<span>{deviceState[val]}</span>)}\n            />\n            <Table.Column title=\"通讯卡\" dataIndex=\"card_code\" key=\"card_code\" />\n            <Table.Column title=\"标签\" dataIndex=\"tag\" key=\"tag\"\n              render={(val, _) => (<Tag>{val}</Tag>)}\n            />\n            <Table.Column title=\"操作\" width=\"100px\" dataIndex=\"operation\" key=\"operation\"\n              render={(_, record) => (\n                <>\n                  <Tooltip title=\"修改\">\n                    <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => {\n                      this.setState({\n                        showDetail: true,\n                        operationType: 'edit',\n                        detail: {\n                          device_id: record.device_id,\n                          code: record.device_code,\n                          type: record.device_type,\n                          card_id: record.card_id,\n                          tag: record.tag,\n                          state: record.state\n                        }\n                      })\n                    })} \n                    />\n                  </Tooltip>\n                  <Tooltip title=\"删除\">\n                    <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete([record.device_id]))} />\n                  </Tooltip>\n                </>\n              )}\n            />\n          </Table>\n          <Pagination\n            defaultCurrent={this.state.currentPage}\n            pageSize={this.state.pageSize}\n            showTotal={() => `总数 ${this.state.total} `}\n            total={this.state.total}\n            locale={{\n              items_per_page: '每页行数',\n            }}\n            showSizeChanger\n            onShowSizeChange={(currentPage, pageSize) => {\n              this.setState({\n                currentPage: 1,\n                pageSize\n              }, () => {\n                this.getAll()\n              });\n            }}\n            onChange={(pageNumber) => {\n              this.setState({\n                currentPage: pageNumber\n              }, () => {\n                this.getAll()\n              });\n            }}\n          />\n        </section>\n      \n        {/* 添加或者编辑 */}\n        <DeviceDetail\n          visible={this.state.showDetail}\n          onCancel={() => {\n            this.setState({\n              showDetail: false,\n              detail: null\n            })\n          }}\n          onSubmit={(values) => this.onSubmit(values)}\n          detail={this.state.detail}\n        />\n      </section>\n    );\n  }\n  \n  // 分页获取\n  getAll = async () => {\n    const res = await deviceList({\n      get_count: this.state.pageSize,\n      start_index: (this.state.currentPage - 1) * this.state.pageSize,\n      keyword: this.state.keyword,\n      type: this.state.type,\n      state: this.state.state\n    });\n    if (res) {\n      this.setState({\n        tableData: res.records,\n        total: res.total_count\n      })\n    }\n  }\n\n  // 删除\n  onDelete = (id) => {\n    Modal.confirm({\n      title: '确认删除选中的设备?',\n      icon: <ExclamationCircleOutlined />,\n      okText: '确认',\n      cancelText: '取消',\n      onOk: async () => {\n        const res = await deviceBatchDelete(id, {})\n        if (res) {\n          this.getAll();\n        }\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    })\n  }\n\n  // 添加或者修改\n  onSubmit = async (values) => {\n    const res = this.state.operationType === 'add' ?\n    await deviceAdd(values) : await deviceChange(values.device_id, values);\n    if (res) {\n      this.setState({\n        showDetail: false,\n        detail: null\n      });\n      message.success(`${this.state.operationType === 'add' ? '添加成功' : '修改成功'}`);\n      this.getAll();\n    }\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Button, InputNumber, Modal } from 'antd';\nimport { cardType, cardState } from '../../assets/js/constant';\nimport { DateAndTime } from './DateAndTime';\nimport { throttle } from 'throttle-debounce';\n\nconst { Option } = Select;\n\nconst defaultDetail = {\n  card_id: '',\n  code: '',\n  type: 1,\n  tag: '',\n  state: 1,\n  service_deadline: 0,\n  last_pay_timestamp: 0,\n  last_pay_expense: 0,\n  last_pay_period: 0\n}\n\nexport const CardDetail = (props) => {\n  const [detail, setDetail] = useState(defaultDetail);\n  const [form] = Form.useForm();\n  const initialValues = {\n    ...detail,\n    state: detail.state + '',\n    type: detail.type + ''\n  }\n  form.setFieldsValue(initialValues)\n\n  useEffect(() => {\n    setDetail(props.detail || defaultDetail)\n  }, [props.detail]);\n\n  return (\n    <Modal\n      title={props.detail ? '编辑信息' : '添加通讯卡'}\n      footer={null}\n      visible={props.visible}\n      onCancel={() => {\n        setDetail(defaultDetail)\n        props.onCancel();\n      }}\n    >\n      <Form className=\"detail-form card-form\" onFinish={(values) => {\n        props.onSubmit(detail);\n      }}\n      form={form}\n      initialValues={initialValues}\n      >\n        <Form.Item label=\"通讯卡编码\" name=\"code\"\n          rules={[{ required: true, message: '请输入通讯卡编码' }]}\n        >\n          <Input maxLength={32} value={detail.code} onChange={(e) => {\n            setDetail({\n              ...detail,\n              code: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"类型\" name=\"type\"\n          rules={[{ required: true, message: '请选择通讯卡类型' }]}\n        >\n          <Select value={detail.type + ''} onChange={(val) => {\n            setDetail({\n              ...detail,\n              type: +val\n            })\n          }}\n          >\n            {\n              Object.keys(cardType).map((key) => {\n                return <Option value={key + ''} key={key}>{cardType[key]}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"状态\" name=\"state\"\n          rules={[{ required: true, message: '请选择通讯卡状态' }]}\n        >\n          <Select value={detail.state + ''} onChange={(val) => {\n            setDetail({\n              ...detail,\n              state: +val\n            })\n          }}\n          >\n            {\n              Object.keys(cardState).map((key) => {\n                return <Option value={key + ''} key={key}>{cardState[key]}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"标签\" name=\"tag\">\n          <Input maxLength={32} value={detail.tag} onChange={(e) => {\n            setDetail({\n              ...detail,\n              tag: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"流量包年或包月截止时间\" name=\"service_deadline\">\n          <DateAndTime value={detail.service_deadline} onChange={(val) => {\n            setDetail({\n              ...detail,\n              service_deadline: val\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"上一次续费时间\" name=\"last_pay_timestamp\">\n          <DateAndTime value={detail.last_pay_timestamp} onChange={(val) => {\n            setDetail({\n              ...detail,\n              last_pay_timestamp: val\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"上一次续费价格(分)\" name=\"last_pay_expense\">\n          <InputNumber min={0} style={{width: 134}} value={detail.last_pay_expense} onChange={(val) => {\n            setDetail({\n              ...detail,\n              last_pay_expense: val\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"上一次续费时长(天)\" name=\"last_pay_period\">\n          <InputNumber min={0} style={{width: 134}} value={detail.last_pay_period} onChange={(val) => {\n            setDetail({\n              ...detail,\n              last_pay_period: val\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item>\n          <section className=\"form-btn\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交\n            </Button>\n            <Button htmlType=\"button\" onClick={throttle(1000, () => {\n              if (props.detail) {\n                setDetail(props.detail)\n              } else {\n                setDetail(defaultDetail)\n              }\n            })}\n            >\n              重置\n            </Button>\n          </section>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}","import React from 'react';\nimport { Table, Pagination, Input, Tooltip, Modal, Button, message, Tag, Select } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { cardType, cardState } from '../../assets/js/constant';\nimport { CardDetail } from './Detail';\nimport { getDateTime } from './DateAndTime';\nimport { throttle } from 'throttle-debounce';\nimport './index.less';\n\n// api\nimport { cardList, cardBatchDelete, cardAdd, cardChange, cardExport } from '../../api';\n\nconst { Option } = Select;\n\nexport default class CardPage extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      tableData: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 30,\n      showDetail: false,\n      operationType: 'add',\n      detail: null,\n      selectedKeys: [],\n      // 搜索\n      keyword: '',\n      type: '',\n      state: ''\n    }\n  };\n\n  componentDidMount () {\n    this.getAll();\n  }\n\n  render () {\n    return (\n      <section className=\"admin-page page-view\">\n        <header className=\"header\">\n          <span className=\"title\">通讯卡列表</span>\n          <span>\n            <Button className=\"add-btn header-btn\" type=\"primary\" disabled={!this.state.selectedKeys.length} onClick={throttle(1000, () => {\n              this.onDelete(this.state.selectedKeys)\n            })}\n            >\n              <i className=\"iconfont icon-piliangshanchu1\" />\n              批量删除\n            </Button>\n            <Button className=\"import-btn header-btn\" type=\"primary\">\n              <i className=\"iconfont icon-daoru\" />\n              导入\n            </Button>\n            <Button className=\"export-btn header-btn\" type=\"primary\" onClick={throttle(1000, this.exportData)}>\n              <i className=\"iconfont icon-export\" />\n              导出\n            </Button>\n            <Button className=\"add-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => {\n              this.setState({\n                showDetail: true,\n                operationType: 'add',\n                detail: null\n              })\n            })}\n            >\n              <i className=\"iconfont icon-add1\" />\n              添加\n            </Button> \n          </span>\n        </header>\n        <section className=\"body\">\n        <ul className=\"search-box\">\n            <li>\n              <span className=\"label\">通讯卡：</span>\n              <Input\n                value={this.state.keyword}\n                onChange={(e) => {\n                  this.setState({\n                    keyword: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"编码、标签\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 120 }}\n              />\n            </li>\n            <li>\n              <span className=\"label\">通讯卡类型：</span>\n              <Select value={this.state.type + ''} style={{ width: 100 }}\n                onChange={(val) => {\n                  this.setState({\n                    type: +val\n                  })\n                }}\n              >\n                {\n                  Object.keys(cardType).map((key) => {\n                    return <Option value={key + ''} key={key}>{+key === 0 ? '全部' : cardType[key]}</Option>\n                  })\n                }\n              </Select>\n            </li>\n            <li>\n              <span className=\"label\">通讯卡状态：</span>\n              <Select value={this.state.state + ''} style={{ width: 100 }}\n                onChange={(val) => {\n                  this.setState({\n                    state: +val\n                  })\n                }}\n              >\n                {\n                  Object.keys(cardState).map((key) => {\n                    return <Option value={key + ''} key={key}>{+key === 0 ? '全部' : cardState[key]}</Option>\n                  })\n                }\n              </Select>\n            </li>\n            <li>\n              <Tooltip title=\"搜素\">\n                <Button shape=\"circle\" type=\"primary\" style={{marginRight: 10}} onClick={throttle(1000, this.getAll)}>\n                  <i className=\"iconfont icon-sousuo\" />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"重置\">\n                <Button shape=\"circle\" type=\"primary\" onClick={throttle(1000, () => {\n                  this.setState(() => ({\n                    keyword: '',\n                    type: '',\n                    state: ''\n                  }), this.getAll)\n                })}\n                >\n                  <i className=\"iconfont icon-zhongzhi\" />\n                </Button>\n              </Tooltip>\n            </li>\n          </ul>\n          <Table\n            dataSource={this.state.tableData}\n            rowKey={r => r.card_id}\n            pagination={false}\n            rowSelection={{\n              onChange: (keys) => {\n                this.setState({\n                  selectedKeys: keys\n                })\n              }\n            }}\n          >\n            <Table.Column title=\"通讯卡编码\" dataIndex=\"card_code\" key=\"card_code\" />\n            <Table.Column title=\"类型\" dataIndex=\"card_type\" key=\"card_type\"\n              render={(val, _) => (<span>{cardType[val]}</span>)}\n            />\n            <Table.Column title=\"状态\" dataIndex=\"state\" key=\"state\"\n              render={(val, _) => (<span>{cardState[val]}</span>)}\n            />\n            <Table.Column title=\"标签\" dataIndex=\"tag\" key=\"tag\"\n              render={(val, _) => (<Tag>{val}</Tag>)}\n            />\n            <Table.Column title=\"流量包年或包月截止时间\" dataIndex=\"service_deadline\" key=\"service_deadline\"\n              render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\n            />\n            <Table.Column title=\"上一次续费时间\" dataIndex=\"last_pay_timestamp\" key=\"last_pay_timestamp\"\n              render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\n            />\n            <Table.Column title=\"上一次续费价格(分)\" dataIndex=\"last_pay_expense\" key=\"last_pay_expense\" />\n            <Table.Column title=\"上一次续费时长(天)\" dataIndex=\"last_pay_period\" key=\"last_pay_period\" />\n            <Table.Column title=\"操作\" width=\"100px\" dataIndex=\"operation\" key=\"operation\"\n              render={(_, record) => (\n                <>\n                  <Tooltip title=\"修改\">\n                    <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => {\n                      this.setState({\n                        showDetail: true,\n                        operationType: 'edit',\n                        detail: {\n                          ...record,\n                          code: record.card_code,\n                          type: record.card_type\n                        }\n                      })\n                    })} \n                    />\n                  </Tooltip>\n                  <Tooltip title=\"删除\">\n                    <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete([record.card_id]))} />\n                  </Tooltip>\n                </>\n              )}\n            />\n          </Table>\n          <Pagination\n            defaultCurrent={this.state.currentPage}\n            pageSize={this.state.pageSize}\n            showTotal={() => `总数 ${this.state.total} `}\n            total={this.state.total}\n            locale={{\n              items_per_page: '每页行数',\n            }}\n            showSizeChanger\n            onShowSizeChange={(currentPage, pageSize) => {\n              this.setState({\n                currentPage: 1,\n                pageSize\n              }, () => {\n                this.getAll()\n              });\n            }}\n            onChange={(pageNumber) => {\n              this.setState({\n                currentPage: pageNumber\n              }, () => {\n                this.getAll()\n              });\n            }}\n          />\n        </section>\n      \n        {/* 添加或者编辑 */}\n        <CardDetail\n          visible={this.state.showDetail}\n          onCancel={() => {\n            this.setState({\n              showDetail: false,\n              detail: null\n            })\n          }}\n          onSubmit={(values) => this.onSubmit(values)}\n          detail={this.state.detail}\n        />\n      </section>\n    );\n  }\n  \n  // 分页获取\n  getAll = async () => {\n    const res = await cardList({\n      get_count: this.state.pageSize,\n      start_index: (this.state.currentPage - 1) * this.state.pageSize,\n      keyword: this.state.keyword,\n      type: this.state.type,\n      state: this.state.state\n    });\n    if (res) {\n      this.setState({\n        tableData: res.records,\n        total: res.total_count\n      })\n    }\n  }\n\n  // 删除\n  onDelete = (id) => {\n    Modal.confirm({\n      title: '确认删除选中的通讯卡?',\n      icon: <ExclamationCircleOutlined />,\n      okText: '确认',\n      cancelText: '取消',\n      onOk: async () => {\n        const res = await cardBatchDelete(id, {})\n        if (res) {\n          this.getAll();\n        }\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    })\n  }\n\n  // 添加或者修改\n  onSubmit = async (values) => {\n    const res = this.state.operationType === 'add' ?\n    await cardAdd(values) : await cardChange(values.card_id, values);\n    if (res) {\n      this.setState({\n        showDetail: false,\n        detail: null\n      });\n      message.success(`${this.state.operationType === 'add' ? '添加成功' : '修改成功'}`);\n      this.getAll();\n    }\n  }\n\n  // 导出数据\n  exportData = async () => {\n    const res = await cardExport({});\n    console.log(res)\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Button, Modal } from 'antd';\nimport { genderData, adminRoleData } from '../../assets/js/constant';\nimport { SelectArea } from '../../component/SelectArea';\nimport { throttle } from 'throttle-debounce';\n\nconst { Option } = Select;\n\nconst defaultDetail = {\n  admin_id: '',\n  name: '',\n  mobile: '',\n  password: '',\n  confirmPassword: '',\n  // gender: 0,\n  area_code: '',\n  area_name: '',\n  role: 1\n}\n\nexport const AdminDetail = (props) => {\n  const [detail, setDetail] = useState(defaultDetail);\n  const [form] = Form.useForm();\n  const initialValues = {\n    ...detail,\n    // gender: detail.gender + '',\n    role: detail.role + ''\n  }\n  form.setFieldsValue(initialValues)\n\n  useEffect(() => {\n    setDetail(props.detail || defaultDetail)\n  }, [props.detail]);\n\n  return (\n    <Modal\n      title={props.detail ? '编辑信息' : '添加管理员'}\n      footer={null}\n      visible={props.visible}\n      onCancel={() => {\n        setDetail(defaultDetail)\n        props.onCancel();\n      }}\n    >\n      <Form className=\"detail-form admin-form\" onFinish={(values) => {\n        props.onSubmit(detail);\n      }}\n      form={form}\n      initialValues={initialValues}\n      >\n        <Form.Item label=\"管理员名\" name=\"name\"\n          rules={[{ required: true, message: '请输入管理员名' }]}\n        >\n          <Input maxLength={45} value={detail.name} onChange={(e) => {\n            setDetail({\n              ...detail,\n              name: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"手机号\" name=\"mobile\"\n          rules={[\n            { required: true, message: '请输入手机号' },\n            {\n              validator(rule, value) {\n                const reg = /^[1][3,4,5,7,8][0-9]{9}$/;\n                if (value && !reg.test(value)) {\n                  return Promise.reject('请输入正确的手机号');\n                }\n                return Promise.resolve();\n              },\n            },\n          ]}\n        >\n          <Input value={detail.mobile} onChange={(e) => {\n            setDetail({\n              ...detail,\n              mobile: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        { !props.detail &&\n          <>\n            <Form.Item label=\"密码\" name=\"password\"\n              rules={[{ required: true, message: '请输入密码' }]}\n            >\n              <Input.Password value={detail.password} onChange={(e) => {\n                setDetail({\n                  ...detail,\n                  password: e.target.value\n                })\n              }}\n              />\n            </Form.Item>\n            <Form.Item label=\"确认密码\" name=\"confirmPassword\" dependencies={['password']}\n              rules={[\n                { required: true, message: '请再次输入密码' },\n                ({getFieldValue}) => ({\n                  validator(rule, value) {\n                    if (value && getFieldValue('password') !== value) {\n                      return Promise.reject('两次输入的密码不一致');\n                    } else {\n                      return Promise.resolve();\n                    }\n                  }\n                })\n              ]}\n            >\n              <Input.Password value={detail.confirmPassword} onChange={(e) => {\n                setDetail({\n                  ...detail,\n                  confirmPassword: e.target.value\n                })\n              }}\n              />\n            </Form.Item>\n          </>\n        }\n        <Form.Item label=\"区域\" name=\"area_code\"\n          rules={[{ required: true, message: '请选择区域' }]}\n        >\n          <SelectArea selectAll visible={props.visible} area_code={detail.area_code} onChange={({code}) => {\n            setDetail({\n              ...detail,\n              area_code: code\n            })\n          }}\n          />\n        </Form.Item>\n        {/* <Form.Item label=\"性别\" name=\"gender\">\n          <Select value={detail.gender + ''} onChange={(val) => {\n            setDetail({\n              ...detail,\n              gender: +val\n            })\n          }}\n          >\n            {\n              Object.keys(genderData).map((key) => {\n                return <Option value={key + ''} key={key}>{genderData[key]}</Option>\n              })\n            }\n          </Select>\n        </Form.Item> */}\n        <Form.Item label=\"角色\" name=\"role\">\n          <Select value={detail.role + ''} onChange={(val) => {\n            setDetail({\n              ...detail,\n              role: +val\n            })\n          }}\n          >\n            {\n              Object.keys(adminRoleData).map((key) => {\n                return <Option value={key + ''} key={key}>{adminRoleData[key]}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <section className=\"form-btn\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交\n            </Button>\n            <Button htmlType=\"button\" onClick={throttle(1000, () => {\n              if (props.detail) {\n                setDetail(props.detail)\n              } else {\n                setDetail(defaultDetail)\n              }\n            })}\n            >\n              重置\n            </Button>\n          </section>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}","import React from 'react';\nimport { Table, Pagination, Input, Tooltip, Modal, Button, message } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { genderData, adminRoleData } from '../../assets/js/constant';\nimport { AdminDetail } from './Detail';\nimport MD5 from 'crypto-js/md5';\nimport { throttle } from 'throttle-debounce';\nimport './index.less';\n\n// api\nimport { adminList, adminDelete, adminAdd, adminChange } from '../../api';\n\nexport default class AdminPage extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      tableData: [],\n      keyword: '',\n      total: 0,\n      currentPage: 1,\n      pageSize: 30,\n      showDetail: false,\n      type: 'add',\n      detail: null\n    }\n  };\n\n  componentDidMount () {\n    this.getAll();\n  }\n\n  render () {\n    return (\n      <section className=\"admin-page page-view\">\n        <header className=\"header\">\n          <span className=\"title\">管理员列表</span>\n          <span>\n            <Button className=\"add-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => {\n              this.setState({\n                showDetail: true,\n                type: 'add',\n                detail: null\n              })\n            })}\n            >\n              <i className=\"iconfont icon-add1\" />\n              添加\n            </Button>\n          </span>\n        </header>\n        <section className=\"body\">\n          <ul className=\"search-box\">\n            <li>\n              <span className=\"label\">管理员：</span>\n              <Input\n                value={this.state.keyword}\n                onChange={(e) => {\n                  this.setState({\n                    keyword: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"名称、手机号\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 140 }}\n              />\n            </li>\n            <li>\n              <Tooltip title=\"搜素\">\n                <Button shape=\"circle\" type=\"primary\" style={{marginRight: 10}} onClick={throttle(1000, this.getAll)}>\n                  <i className=\"iconfont icon-sousuo\" />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"重置\">\n                <Button shape=\"circle\" type=\"primary\" onClick={throttle(1000, () => {\n                  this.setState(() => ({\n                    keyword: ''\n                  }), this.getAll)\n                })}\n                >\n                  <i className=\"iconfont icon-zhongzhi\" />\n                </Button>\n              </Tooltip>\n            </li>\n          </ul>\n          <Table\n            dataSource={this.state.tableData}\n            rowKey={r => r.admin_id}\n            pagination={false}\n          >\n            <Table.Column title=\"管理员名\" dataIndex=\"admin_name\" key=\"admin_name\" />\n            <Table.Column title=\"手机号\" min-width=\"120px\" dataIndex=\"mobile\" key=\"mobile\" />\n            <Table.Column title=\"区域\" dataIndex=\"area_name\" key=\"area_name\"\n              render={(val, record) => (<span>{record.area_code ? val : '全国'}</span>)}\n            />\n            {/* <Table.Column title=\"性别\" min-width=\"80px\" dataIndex=\"gender\" key=\"gender\"\n              render={(val, _) => (<span>{genderData[val]}</span>)}\n            /> */}\n            <Table.Column title=\"角色\" min-width=\"100px\" dataIndex=\"role\" key=\"role\"\n              render={(val, _) => (<span>{adminRoleData[val]}</span>)}\n            />\n            <Table.Column title=\"操作\" width=\"100px\" dataIndex=\"operation\" key=\"operation\"\n              render={(_, record) => (\n                <>\n                  <Tooltip title=\"修改\">\n                    <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => {\n                      this.setState({\n                        showDetail: true,\n                        type: 'edit',\n                        detail: {\n                          ...record,\n                          name: record.admin_name\n                        }\n                      })\n                    })} \n                    />\n                  </Tooltip>\n                  <Tooltip title=\"删除\">\n                    <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete(record.admin_id))} />\n                  </Tooltip>\n                </>\n              )}\n            />\n          </Table>\n          <Pagination\n            defaultCurrent={this.state.currentPage}\n            pageSize={this.state.pageSize}\n            showTotal={() => `总数 ${this.state.total} `}\n            total={this.state.total}\n            locale={{\n              items_per_page: '每页行数',\n            }}\n            showSizeChanger\n            onShowSizeChange={(currentPage, pageSize) => {\n              this.setState({\n                currentPage: 1,\n                pageSize\n              }, () => {\n                this.getAll()\n              });\n            }}\n            onChange={(pageNumber) => {\n              this.setState({\n                currentPage: pageNumber\n              }, () => {\n                this.getAll()\n              });\n            }}\n          />\n        </section>\n      \n        {/* 添加或者编辑 */}\n        \n        <AdminDetail\n          onCancel={() => {\n            this.setState({\n              showDetail: false,\n              detail: null\n            })\n          }}\n          onSubmit={(values) => this.onSubmit(values)}\n          detail={this.state.detail}\n          visible={this.state.showDetail}\n        />\n      </section>\n    );\n  }\n  \n  // 分页获取admin\n  getAll = async () => {\n    const res = await adminList({\n      get_count: this.state.pageSize,\n      start_index: (this.state.currentPage - 1) * this.state.pageSize,\n      keyword: this.state.keyword\n    });\n    if (res) {\n      this.setState({\n        tableData: res.records,\n        total: res.total_count\n      })\n    }\n  }\n\n  // 删除\n  onDelete = (id) => {\n    Modal.confirm({\n      title: '确认删除选中的管理员?',\n      icon: <ExclamationCircleOutlined />,\n      okText: '确认',\n      cancelText: '取消',\n      onOk: async () => {\n        const res = await adminDelete(id, {})\n        if (res) {\n          this.getAll();\n        }\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    })\n  }\n\n  // 添加或者修改\n  onSubmit = async (values) => {\n    const {confirmPassword, password, ...others} = values;\n    if (this.state.type === 'add') {\n      others.password = MD5(password).toString();\n    }\n    const res = this.state.type === 'add' ?\n    await adminAdd(others) : await adminChange(others.admin_id, others);\n    if (res) {\n      this.setState({\n        showDetail: false,\n        detail: null\n      });\n      message.success(`${this.state.type === 'add' ? '添加成功' : '修改成功'}`);\n      this.getAll();\n    }\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Button, Modal } from 'antd';\nimport { genderData, userRoleData } from '../../assets/js/constant';\nimport { SelectArea } from '../../component/SelectArea';\nimport { throttle } from 'throttle-debounce';\n\nconst { Option } = Select;\n\nconst defaultDetail = {\n  id: '',\n  name: '',\n  mobile: '',\n  // gender: 0,\n  area_code: '',\n  project_owner_type: 1,\n  password: '',\n  confirmPassword: ''\n}\n\nexport const UserDetail = (props) => {\n  const [detail, setDetail] = useState(defaultDetail);\n  const [form] = Form.useForm();\n  const initialValues = {\n    ...detail,\n    // gender: detail.gender + '',\n    project_owner_type: detail.project_owner_type + ''\n  }\n  form.setFieldsValue(initialValues)\n\n  useEffect(() => {\n    if (props.visible) {\n      setDetail(props.detail || defaultDetail)\n    }\n  }, [props.visible]);\n\n  return (\n    <Modal\n      width={550}\n      title={props.detail ? '编辑信息' : '添加用户'}\n      footer={null}\n      visible={props.visible}\n      onCancel={() => {\n        setDetail(defaultDetail)\n        props.onCancel();\n      }}\n    >\n      <Form className=\"detail-form user-form\" onFinish={(values) => {\n        props.onSubmit(detail);\n      }}\n      form={form}\n      initialValues={initialValues}\n      >\n        <Form.Item label=\"用户名\" name=\"name\"\n          rules={[{ required: true, message: '请输入用户名' }]}\n        >\n          <Input maxLength={45} value={detail.name} onChange={(e) => {\n            setDetail({\n              ...detail,\n              name: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        <Form.Item label=\"手机号\" name=\"mobile\"\n          rules={[\n            { required: true, message: '请输入手机号' },\n            {\n              validator(rule, value) {\n                const reg = /^[1][3,4,5,7,8][0-9]{9}$/;\n                if (value && !reg.test(value)) {\n                  return Promise.reject('请输入正确的手机号');\n                }\n                return Promise.resolve();\n              },\n            },\n          ]}\n        >\n          <Input value={detail.mobile} onChange={(e) => {\n            setDetail({\n              ...detail,\n              mobile: e.target.value\n            })\n          }}\n          />\n        </Form.Item>\n        {\n          !props.detail && <>\n          <Form.Item label=\"密码\" name=\"password\"\n            rules={[{ required: true, message: '请输入密码' }]}\n          >\n            <Input.Password value={detail.password} onChange={(e) => {\n              setDetail({\n                ...detail,\n                password: e.target.value\n              })\n            }}\n            />\n          </Form.Item>\n          <Form.Item label=\"确认密码\" name=\"confirmPassword\" dependencies={['password']}\n            rules={[\n              { required: true, message: '请再次输入密码' },\n              ({getFieldValue}) => ({\n                validator(rule, value) {\n                  if (getFieldValue('password') !== value) {\n                    return Promise.reject('两次输入的密码不一致');\n                  } else {\n                    return Promise.resolve();\n                  }\n                }\n              })\n            ]}\n          >\n            <Input.Password value={detail.confirmPassword} onChange={(e) => {\n              setDetail({\n                ...detail,\n                confirmPassword: e.target.value\n              })\n            }}\n            />\n          </Form.Item>\n        </>\n        }\n        <Form.Item label=\"区域\" name=\"area_code\"\n          rules={[{ required: true, message: '请选择区域' }]}\n        >\n          <SelectArea visible={props.visible} area_code={detail.area_code} onChange={({code}) => {\n            setDetail({\n              ...detail,\n              area_code: code\n            })\n          }}\n          />\n        </Form.Item>\n        {/* <Form.Item label=\"性别\" name=\"gender\">\n          <Select value={detail.gender + ''} onChange={(val) => {\n            setDetail({\n              ...detail,\n              gender: +val\n            })\n          }}\n          >\n            {\n              Object.keys(genderData).map((key) => {\n                return <Option value={key + ''} key={key}>{genderData[key]}</Option>\n              })\n            }\n          </Select>\n        </Form.Item> */}\n        <Form.Item label=\"工程负责人类型\" name=\"project_owner_type\">\n          <Select value={detail.project_owner_type + ''} onChange={(val) => {\n            setDetail({\n              ...detail,\n              project_owner_type: +val\n            })\n          }}\n          >\n            {\n              Object.keys(userRoleData).map((key) => {\n                return <Option value={key + ''} key={key}>{userRoleData[key]}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <section className=\"form-btn\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交\n            </Button>\n            <Button htmlType=\"button\" onClick={throttle(1000, () => {\n              if (props.detail) {\n                setDetail(props.detail)\n              } else {\n                setDetail(defaultDetail)\n              }\n            })}\n            >\n              重置\n            </Button>\n          </section>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}","import React from 'react';\nimport { Table, Pagination, Input, Tooltip, Modal, Button, message, Select } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { genderData, userRoleData } from '../../assets/js/constant';\nimport { UserDetail } from './Detail';\nimport MD5 from 'crypto-js/md5';\nimport { SelectArea } from '../../component/SelectArea';\nimport { throttle } from 'throttle-debounce';\nimport './index.less';\n\n// api\nimport { userList, userBatchDelete, userAdd, userChange } from '../../api';\n\nconst { Option } = Select;\n\nexport default class UserPage extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      tableData: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 30,\n      showDetail: false,\n      type: 'add',\n      detail: null,\n      selectedKeys: [],\n      // 搜索\n      keyword: '',\n      project_owner_type: '',\n      area_code: +sessionStorage.getItem('areaCode') || 0,\n    }\n  };\n\n  componentDidMount () {\n    this.getAll();\n  }\n\n  render () {\n    return (\n      <section className=\"admin-page page-view\">\n        <header className=\"header\">\n          <span className=\"title\">用户列表</span>\n          <span>\n            <Button className=\"add-btn header-btn\" type=\"primary\" disabled={!this.state.selectedKeys.length} onClick={throttle(1000, () => {\n              this.onDelete(this.state.selectedKeys)\n            })}\n            >\n              <i className=\"iconfont icon-piliangshanchu1\" />\n              批量删除\n            </Button>\n            <Button className=\"add-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => {\n              this.setState({\n                showDetail: true,\n                type: 'add',\n                detail: null\n              })\n            })}\n            >\n              <i className=\"iconfont icon-add1\" />\n              添加\n            </Button>\n          </span>\n        </header>\n        <section className=\"body\">\n        <ul className=\"search-box\">\n            <li>\n              <span className=\"label\">用户：</span>\n              <Input\n                value={this.state.proj_keyword}\n                onChange={(e) => {\n                  this.setState({\n                    proj_keyword: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"名称、手机号\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 140 }}\n              />\n            </li>\n            <li>\n              <span className=\"label\">负责人类型：</span>\n              <Select value={this.state.project_owner_type + ''} style={{ width: 120 }}\n                onChange={(val) => {\n                  this.setState({\n                    project_owner_type: +val\n                  })\n                }}\n              >\n                {\n                  Object.keys(userRoleData).map((key) => {\n                    return <Option value={key + ''} key={key}>{+key === 0 ? '全部' : userRoleData[key]}</Option>\n                  })\n                }\n              </Select>\n            </li>\n            <li>\n              <span className=\"label\">区域：</span>\n              <SelectArea width={320} area_code={this.state.area_code} visible onChange={({code}) => {\n                this.setState({ area_code: code})\n              }}\n              />\n            </li>\n            <li>\n              <Tooltip title=\"搜素\">\n                <Button shape=\"circle\" type=\"primary\" style={{marginRight: 10}} onClick={throttle(1000, this.getAll)}>\n                  <i className=\"iconfont icon-sousuo\" />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"重置\">\n                <Button shape=\"circle\" type=\"primary\" onClick={throttle(1000, () => {\n                  this.setState(() => ({\n                    keyword: '',\n                    project_owner_type: '',\n                    area_code: ''\n                  }), this.getAll)\n                })}\n                >\n                  <i className=\"iconfont icon-zhongzhi\" />\n                </Button>\n              </Tooltip>\n            </li>\n          </ul>\n          <Table\n            dataSource={this.state.tableData}\n            rowKey={r => r.id}\n            pagination={false}\n            rowSelection={{\n              onChange: (keys) => {\n                this.setState({\n                  selectedKeys: keys\n                })\n              }\n            }}\n          >\n            <Table.Column title=\"用户名\" dataIndex=\"name\" key=\"name\" />\n            <Table.Column title=\"手机号\" min-width=\"120px\" dataIndex=\"mobile\" key=\"mobile\" />\n            <Table.Column title=\"区域\" dataIndex=\"area_name\" key=\"area_name\"\n              render={(val, record) => (<span>{record.area_code ? val : '全国'}</span>)}\n            />\n            {/* <Table.Column title=\"性别\" min-width=\"80px\" dataIndex=\"gender\" key=\"gender\"\n              render={(val, _) => (<span>{genderData[val]}</span>)}\n            /> */}\n            <Table.Column title=\"工程负责人类型\" min-width=\"100px\" dataIndex=\"project_owner_type\" key=\"project_owner_type\"\n              render={(val, _) => (<span>{userRoleData[val]}</span>)}\n            />\n            <Table.Column title=\"操作\" width=\"100px\" dataIndex=\"operation\" key=\"operation\"\n              render={(_, record) => (\n                <>\n                  <Tooltip title=\"修改\">\n                    <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => {\n                      this.setState({\n                        showDetail: true,\n                        type: 'edit',\n                        detail: record\n                      })\n                    })} \n                    />\n                  </Tooltip>\n                  <Tooltip title=\"删除\">\n                    <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete([record.id]))} />\n                  </Tooltip>\n                </>\n              )}\n            />\n          </Table>\n          <Pagination\n            defaultCurrent={this.state.currentPage}\n            pageSize={this.state.pageSize}\n            showTotal={() => `总数 ${this.state.total} `}\n            total={this.state.total}\n            locale={{\n              items_per_page: '每页行数',\n            }}\n            showSizeChanger\n            onShowSizeChange={(currentPage, pageSize) => {\n              this.setState({\n                currentPage: 1,\n                pageSize\n              }, () => {\n                this.getAll()\n              });\n            }}\n            onChange={(pageNumber) => {\n              this.setState({\n                currentPage: pageNumber\n              }, () => {\n                this.getAll()\n              });\n            }}\n          />\n        </section>\n      \n        {/* 添加或者编辑 */}\n        <UserDetail\n          visible={this.state.showDetail}\n          onCancel={() => {\n            this.setState({\n              showDetail: false,\n              detail: null\n            })\n          }}\n          onSubmit={(values) => this.onSubmit(values)}\n          detail={this.state.detail}\n        />\n      </section>\n    );\n  }\n  \n  // 分页获取\n  getAll = async () => {\n    const res = await userList({\n      get_count: this.state.pageSize,\n      start_index: (this.state.currentPage - 1) * this.state.pageSize,\n      keyword: this.state.keyword,\n      project_owner_type: this.state.project_owner_type,\n      area_code: this.state.area_code\n    });\n    if (res) {\n      this.setState({\n        tableData: res.records,\n        total: res.total_count\n      })\n    }\n  }\n\n  // 删除\n  onDelete = (id) => {\n    Modal.confirm({\n      title: '确认删除选中的用户?',\n      icon: <ExclamationCircleOutlined />,\n      okText: '确认',\n      cancelText: '取消',\n      onOk: async () => {\n        const res = await userBatchDelete(id, {})\n        if (res) {\n          this.getAll();\n        }\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    })\n  }\n\n  // 添加或者修改\n  onSubmit = async (values) => {\n    const {confirmPassword, password, ...others} = values;\n    if (this.state.type === 'add') {\n      others.password = MD5(password).toString();\n    }\n    const res = this.state.type === 'add' ?\n    await userAdd(values) : await userChange(values.id, values);\n    if (res) {\n      this.setState({\n        showDetail: false,\n        detail: null\n      });\n      message.success(`${this.state.type === 'add' ? '添加成功' : '修改成功'}`);\n      this.getAll();\n    }\n  }\n};\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Select, Button, Modal, Divider } from 'antd';\r\nimport { warnType } from '../../assets/js/constant';\r\nimport { DateAndTime } from '../Card/DateAndTime';\r\nimport { projectUserList, pointListSimple, projectListSimple } from '../../api';\r\nimport { throttle, debounce } from 'throttle-debounce';\r\n\r\nconst { Option } = Select;\r\n\r\nconst defaultDetail = {\r\n  detect_id: '',\r\n  project_id: '',\r\n  point_id: '',\r\n  warn_type: 1,\r\n  done_timestamp: 0,\r\n  user_id: ''\r\n}\r\n\r\nexport const DetectDetail = (props) => {\r\n  const [detail, setDetail] = useState(defaultDetail);\r\n  \r\n  // project\bList\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectCurrentPage, setProjectCurrentPage] = useState(1);\r\n  const [projectTotal, setProjectTotal] = useState(0);\r\n  const [projectKeywords, setProjectKeywords] = useState('');\r\n\r\n  // pointList\r\n  const [points, setPoints] = useState([]);\r\n  const [pointCurrentPage, setPointCurrentPage] = useState(1);\r\n  const [pointTotal, setPointTotal] = useState(0);\r\n  const [pointKeyword, setPointKeyword] = useState('');\r\n\r\n  // userList\r\n  const [users, setUsers] = useState([]);\r\n  const [userCurrentPage, setUserCurrentPage] = useState(1);\r\n  const [userTotal, setUserTotal] = useState(0);\r\n\r\n  const [form] = Form.useForm();\r\n  const initialValues = {\r\n    ...detail,\r\n    project_id: detail.project_id + '',\r\n    point_id: detail.point_id + '',\r\n    user_id: detail.user_id + '',\r\n    warn_type: detail.warn_type + ''\r\n  }\r\n  form.setFieldsValue(initialValues)\r\n\r\n  // 获取project\r\n  const getProjects = async (keyword, page) => {\r\n    const projectRes = await projectListSimple({\r\n      get_count: 10,\r\n      start_index: (page - 1) * 10,\r\n      area_code: +sessionStorage.getItem('areaCode') || 0,\r\n      proj_keyword: keyword\r\n    })\r\n    if (projectRes) {\r\n      setProjects(projectRes.records);\r\n      setProjectTotal(projectRes.total_count);\r\n      setProjectCurrentPage(1)\r\n    }\r\n  }\r\n\r\n  // 获取points\r\n  const getPoints = async (keyword, page, project_id) => {\r\n    if (!project_id) return\r\n    const pointRes = await pointListSimple({\r\n      get_count: 10,\r\n      start_index: (page - 1) * 10,\r\n      project_id: +project_id,\r\n      keyword\r\n    })\r\n    if (pointRes) {\r\n      setPoints(pointRes.records);\r\n      setPointTotal(pointRes.total_count);\r\n      setPointCurrentPage(page)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData () {\r\n      if (props.visible) {\r\n        setDetail(props.detail || defaultDetail);\r\n\r\n        // projectList\r\n        getProjects('', 1)\r\n        \r\n        // points\r\n        getPoints('', 1, props.detail?.project_id)\r\n\r\n        if (props.detail?.project_id) {\r\n          const userRes = await projectUserList({\r\n            get_count: 10,\r\n            start_index: (userCurrentPage - 1) * 10,\r\n            project_id: +props.detail.project_id\r\n          })\r\n          if (userRes) {\r\n            setUsers(userRes.records);\r\n            setUserTotal(userRes.total_count);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [props.visible]);\r\n\r\n  return (\r\n    <Modal\r\n      title={props.detail ? '编辑信息' : '添加探测数据'}\r\n      footer={null}\r\n      visible={props.visible}\r\n      onCancel={() => {\r\n        setDetail(defaultDetail)\r\n        props.onCancel();\r\n      }}\r\n    >\r\n      <Form className=\"detail-form detect-form\" onFinish={(values) => {\r\n        props.onSubmit(detail);\r\n      }}\r\n      form={form}\r\n      initialValues={initialValues}\r\n      >\r\n        <Form.Item label=\"工程\" name=\"project_id\"\r\n          rules={[{ required: true, message: '请选择工程' }]}\r\n        >\r\n          <Select value={detail.project_id + ''} disabled={props.detail}\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounce(500, (val) => {\r\n              setProjectKeywords(val)\r\n              getProjects(val, 1)\r\n            })}\r\n            onFocus={() => {\r\n              if (projectKeywords) {\r\n                setProjectKeywords('')\r\n                getProjects('', 1)\r\n              }\r\n            }}\r\n            onChange={async (val) => {\r\n              setDetail({\r\n                ...detail,\r\n                project_id: +val,\r\n                point_id: '',\r\n                user_id: ''\r\n              })\r\n\r\n              // 重新获取points\r\n              getPoints('', 1, val)\r\n\r\n              // 重新获取users\r\n              const userRes = await projectUserList({\r\n                get_count: 10,\r\n                start_index: 0,\r\n                project_id: +val\r\n              })\r\n              if (userRes) {\r\n                setUsers(userRes.records);\r\n                setUserTotal(userRes.total_count);\r\n                setUserCurrentPage(1)\r\n              }\r\n            }}\r\n            dropdownRender={(menu) => (\r\n              <section>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <section style={{textAlign: 'right'}}>\r\n                  <Button type=\"link\" disabled={projectCurrentPage === 1}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = projectCurrentPage - 1;\r\n                      getProjects(projectKeywords, page)\r\n                    })}\r\n                  >上一页</Button>\r\n                  <Button type=\"link\" disabled={projectCurrentPage * 10 >= projectTotal}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = projectCurrentPage + 1;\r\n                      getProjects(projectKeywords, page)\r\n                    })}\r\n                  >下一页</Button>\r\n                </section>\r\n              </section>\r\n            )}\r\n          >\r\n            {\r\n              projects.map((item) => {\r\n                return <Option key={item.project_id} value={item.project_id + ''}>{item.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"布点\" name=\"point_id\"\r\n          rules={[{ required: true, message: '请输入布点' }]}\r\n        >\r\n          <Select value={detail.point_id + ''} disabled={props.detail}\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounce(500, (val) => {\r\n              setPointKeyword(val)\r\n              getPoints(val, 1, detail.project_id)\r\n            })}\r\n            onFocus={() => {\r\n              if (pointKeyword) {\r\n                setPointKeyword('')\r\n                getPoints('', 1, detail.project_id)\r\n              }\r\n            }}\r\n            onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                point_id: +val\r\n              })\r\n            }}\r\n            dropdownRender={(menu) => (\r\n              <section>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <section style={{textAlign: 'right'}}>\r\n                  <Button type=\"link\" disabled={pointCurrentPage === 1}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = pointCurrentPage - 1;\r\n                      getPoints(pointKeyword, page, detail.project_id)\r\n                    })}\r\n                  >上一页</Button>\r\n                  <Button type=\"link\" disabled={pointCurrentPage * 10 >= pointTotal}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = pointCurrentPage + 1;\r\n                      getPoints(pointKeyword, page, detail.project_id)\r\n                    })}\r\n                  >下一页</Button>\r\n                </section>\r\n              </section>\r\n            )}\r\n          >\r\n            {\r\n              points.map((item) => {\r\n                return <Option key={item.point_id} value={item.point_id + ''}>{item.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"执行用户\" name=\"user_id\">\r\n          <Select value={detail.user_id + ''}\r\n            onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                user_id: +val\r\n              })\r\n            }}\r\n            dropdownRender={(menu) => (\r\n              <section>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <section style={{textAlign: 'right'}}>\r\n                  <Button type=\"link\" disabled={userCurrentPage === 1}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = userCurrentPage - 1;\r\n                      const res = await projectUserList({\r\n                        get_count: 10,\r\n                        start_index: (page - 1) * 10,\r\n                        project_id: +detail.project_id\r\n                      })\r\n                      if (res) {\r\n                        setUsers(res.records);\r\n                        setUserTotal(res.total_count);\r\n                        setUserCurrentPage(page);\r\n                      }\r\n                    })}\r\n                  >上一页</Button>\r\n                  <Button type=\"link\" disabled={userCurrentPage * 10 >= userTotal}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = userCurrentPage + 1;\r\n                      const res = await projectUserList({\r\n                        get_count: 10,\r\n                        start_index: (page - 1) * 10,\r\n                        project_id: +detail.project_id\r\n                      })\r\n                      if (res) {\r\n                        setUsers(res.records);\r\n                        setUserTotal(res.total_count);\r\n                        setUserCurrentPage(page);\r\n                      }\r\n                    })}\r\n                  >下一页</Button>\r\n                </section>\r\n              </section>\r\n            )}\r\n          >\r\n            {\r\n              users.map((item) => {\r\n                return <Option key={item.id} value={item.id + ''}>{item.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        {\r\n          props.detail && <>\r\n          <Form.Item label=\"报警类型\" name=\"warn_type\">\r\n            <Select value={detail.warn_type + ''} onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                warn_type: +val\r\n              })\r\n            }}\r\n            >\r\n              {\r\n                Object.keys(warnType).map((key) => {\r\n                  return <Option value={key + ''} key={key}>{warnType[key]}</Option>\r\n                })\r\n              }\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"探测完成时间\" name=\"done_timestamp\">\r\n            <DateAndTime value={detail.done_timestamp} onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                done_timestamp: val\r\n              })\r\n            }}\r\n            />\r\n          </Form.Item>\r\n          </>\r\n        }\r\n        <Form.Item>\r\n          <section className=\"form-btn\">\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={throttle(1000, () => {\r\n              if (props.detail) {\r\n                setDetail(props.detail)\r\n              } else {\r\n                setDetail(defaultDetail)\r\n              }\r\n            })}\r\n            >\r\n              重置\r\n            </Button>\r\n          </section>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}","import React from 'react';\nimport { Table, Pagination, Input, Tooltip, Modal, Button, message, Select } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { warnType, detectType } from '../../assets/js/constant';\nimport { DetectDetail } from './Detail';\nimport { getDateTime, DateAndTime } from '../Card/DateAndTime';\nimport { SelectArea } from '../../component/SelectArea';\nimport { throttle } from 'throttle-debounce';\nimport './index.less';\n\n// api\nimport { detectList, detectBatchDelete, detectAdd, detectChange } from '../../api';\n\nconst {Option} = Select;\n\nexport default class DetectPage extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      tableData: [],\n      keyword: '',\n      total: 0,\n      currentPage: 1,\n      pageSize: 30,\n      showDetail: false,\n      type: 'add',\n      detail: null,\n      selectedKeys: [],\n      // 搜索\n      proj_keyword: '',\n      point_keyword: '',\n      area_code: +sessionStorage.getItem('areaCode') || '',\n      warn_type: '',\n      detect_type: '',\n      begin_timestamp: '',\n      end_timestamp: ''\n    }\n  };\n\n  componentDidMount () {\n    this.getAll();\n  }\n\n  render () {\n    return (\n      <section className=\"detect-page page-view\">\n        <header className=\"header\">\n          <span className=\"title\">探测数据列表</span>\n          <span>\n            <Button className=\"add-btn header-btn\" type=\"primary\" disabled={!this.state.selectedKeys.length} onClick={throttle(1000, () => {\n              this.onDelete(this.state.selectedKeys)\n            })}\n            >\n              <i className=\"iconfont icon-piliangshanchu1\" />\n              批量删除\n            </Button>\n            <Button className=\"import-btn header-btn\" type=\"primary\">\n              <i className=\"iconfont icon-daoru\" />\n              导入\n            </Button>\n            <Button className=\"export-btn header-btn\" type=\"primary\">\n              <i className=\"iconfont icon-export\" />\n              导出\n            </Button>\n            <Button className=\"add-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => {\n              this.setState({\n                showDetail: true,\n                type: 'add',\n                detail: null\n              })\n            })}\n            >\n              <i className=\"iconfont icon-add1\" />\n              添加\n            </Button> \n          </span>\n        </header>\n        <section className=\"body\">\n          <ul className=\"search-box\">\n            <li>\n              <span className=\"label l-small\">工程：</span>\n              <Input\n                value={this.state.proj_keyword}\n                onChange={(e) => {\n                  this.setState({\n                    proj_keyword: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"名称\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 120 }}\n              />\n            </li>\n            <li>\n              <span className=\"label l-small\">区域：</span>\n              <SelectArea width={320} area_code={this.state.area_code} visible onChange={({code}) => {\n                this.setState({ area_code: code})\n              }}\n              />\n            </li>\n            <li>\n              <span className=\"label l-large\">报警类型：</span>\n              <Select value={this.state.warn_type + ''} style={{width: 100}} onChange={(val) => {\n                this.setState({ warn_type: +val})\n              }}\n              >\n                {\n                  Object.keys(warnType).map((key) => {\n                    return <Option value={key + ''} key={key}>{+key === 1 ? '全部' : warnType[key]}</Option>\n                  })\n                }\n              </Select>\n            </li>\n            <li>\n              <span className=\"label\">手自动类型：</span>\n              <Select value={this.state.detect_type + ''} style={{width: 100}} onChange={(val) => {\n                this.setState({ detect_type: +val})\n              }}\n              >\n                {\n                  Object.keys(detectType).map((key) => {\n                    return <Option value={key + ''} key={key}>{+key === 0 ? '全部' : detectType[key]}</Option>\n                  })\n                }\n              </Select>\n            </li>\n          </ul>\n          <ul className=\"search-box\" style={{borderTop: 'none'}}>\n            <li>\n              <span className=\"label l-small\">布点：</span>\n              <Input\n                value={this.state.point_keyword}\n                onChange={(e) => {\n                  this.setState({\n                    point_keyword: e.target.value\n                  })\n                }}\n                allowClear\n                placeholder=\"名称、标签\"\n                onPressEnter={() => {\n                  this.getAll()\n                }}\n                style={{ width: 120 }}\n              />\n            </li>\n            <li>\n              <span className=\"label\">检测完成时间(起始)：</span>\n              <DateAndTime value={this.state.begin_timestamp} onChange={(val) => {\n                this.setState({ begin_timestamp: val})\n              }}\n              />\n            </li>\n            <li>\n              <span className=\"label\">检测完成时间(结束)：</span>\n              <DateAndTime value={this.state.end_timestamp} onChange={(val) => {\n                this.setState({ end_timestamp: val})\n              }}\n              />\n            </li>\n            <li>\n              <Tooltip title=\"搜素\">\n                <Button shape=\"circle\" type=\"primary\" style={{marginRight: 10}} onClick={throttle(1000, this.getAll)}>\n                  <i className=\"iconfont icon-sousuo\" />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"重置\">\n                <Button shape=\"circle\" type=\"primary\" onClick={throttle(1000, () => {\n                  this.setState(() => ({\n                    proj_keyword: '',\n                    point_keyword: '',\n                    area_code: '',\n                    warn_type: '',\n                    detect_type: '',\n                    begin_timestamp: '',\n                    end_timestamp: ''\n                  }), this.getAll)\n                })}\n                >\n                  <i className=\"iconfont icon-zhongzhi\" />\n                </Button>\n              </Tooltip>\n            </li>\n          </ul>\n          <Table\n            dataSource={this.state.tableData}\n            rowKey={r => r.detect_id}\n            pagination={false}\n            rowSelection={{\n              onChange: (keys) => {\n                this.setState({\n                  selectedKeys: keys\n                })\n              }\n            }}\n          >\n            <Table.Column title=\"工程\" dataIndex=\"project_name\" key=\"project_name\" />\n            <Table.Column title=\"布点\" dataIndex=\"point_name\" key=\"point_name\" />\n            <Table.Column title=\"用户\" dataIndex=\"user_name\" key=\"user_name\" />\n            <Table.Column title=\"报警类型\" dataIndex=\"warn_type\" key=\"warn_type\"\n              render={(val, _) => (<span>{warnType[val]}</span>)}\n            />\n            <Table.Column title=\"探测完成时间\" dataIndex=\"done_timestamp\" key=\"done_timestamp\"\n              render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\n            />\n            <Table.Column title=\"操作\" width=\"100px\" dataIndex=\"operation\" key=\"operation\"\n              render={(_, record) => (\n                <>\n                  <Tooltip title=\"修改\">\n                    <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => {\n                      this.setState({\n                        showDetail: true,\n                        type: 'edit',\n                        detail: record\n                      })\n                    })} \n                    />\n                  </Tooltip>\n                  <Tooltip title=\"删除\">\n                    <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete([record.detect_id]))} />\n                  </Tooltip>\n                </>\n              )}\n            />\n          </Table>\n          <Pagination\n            defaultCurrent={this.state.currentPage}\n            pageSize={this.state.pageSize}\n            showTotal={() => `总数 ${this.state.total} `}\n            total={this.state.total}\n            locale={{\n              items_per_page: '每页行数',\n            }}\n            showSizeChanger\n            onShowSizeChange={(currentPage, pageSize) => {\n              this.setState({\n                currentPage: 1,\n                pageSize\n              }, () => {\n                this.getAll()\n              });\n            }}\n            onChange={(pageNumber) => {\n              this.setState({\n                currentPage: pageNumber\n              }, () => {\n                this.getAll()\n              });\n            }}\n          />\n        </section>\n      \n        {/* 添加或者编辑 */}\n        <DetectDetail\n          visible={this.state.showDetail}\n          onCancel={() => {\n            this.setState({\n              showDetail: false,\n              detail: null\n            })\n          }}\n          onSubmit={(values) => this.onSubmit(values)}\n          detail={this.state.detail}\n        />\n      </section>\n    );\n  }\n  \n  // 分页获取\n  getAll = async () => {\n    const res = await detectList({\n      get_count: this.state.pageSize,\n      start_index: (this.state.currentPage - 1) * this.state.pageSize,\n      proj_keyword: this.state.proj_keyword,\n      point_keyword: this.state.point_keyword,\n      area_code: this.state.area_code,\n      warn_type: this.state.warn_type,\n      detect_type: this.state.detect_type,\n      begin_timestamp: this.state.begin_timestamp,\n      end_timestamp: this.state.end_timestamp\n    });\n    if (res) {\n      this.setState({\n        tableData: res.records,\n        total: res.total_count\n      })\n    }\n  }\n\n  // 删除\n  onDelete = (id) => {\n    Modal.confirm({\n      title: '确认删除选中的探测数据?',\n      icon: <ExclamationCircleOutlined />,\n      okText: '确认',\n      cancelText: '取消',\n      onOk: async () => {\n        const res = await detectBatchDelete(id, {})\n        if (res) {\n          this.getAll();\n        }\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    })\n  }\n\n  // 添加或者修改\n  onSubmit = async (values) => {\n    const res = this.state.type === 'add' ?\n    await detectAdd(values) : await detectChange(values.detect_id, values);\n    if (res) {\n      this.setState({\n        showDetail: false,\n        detail: null\n      });\n      message.success(`${this.state.type === 'add' ? '添加成功' : '修改成功'}`);\n      this.getAll();\n    }\n  }\n};\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Select, Button, Modal, Divider } from 'antd';\r\nimport { warnType, inspectResult, measureType } from '../../assets/js/constant';\r\nimport { DateAndTime } from '../Card/DateAndTime';\r\nimport { projectUserList, pointListSimple, warningListByPoint, projectListSimple } from '../../api';\r\nimport { throttle, debounce } from 'throttle-debounce';\r\n\r\nconst { Option } = Select;\r\n\r\nconst defaultDetail = {\r\n  inspect_id: '',\r\n  project_id: '',\r\n  point_id: '',\r\n  warn_id: '',\r\n  user_id: '',\r\n  done_timestamp: 0,\r\n  state: '',\r\n  measure_type: ''\r\n}\r\n\r\nexport const InspectDetail = (props) => {\r\n  const [detail, setDetail] = useState(defaultDetail);\r\n  const [form] = Form.useForm();\r\n\r\n  // project\bList\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectCurrentPage, setProjectCurrentPage] = useState(1);\r\n  const [projectTotal, setProjectTotal] = useState(0);\r\n  const [projectKeywords, setProjectKeywords] = useState('');\r\n\r\n  // pointListSimple\r\n  const [points, setPoints] = useState([]);\r\n  const [pointCurrentPage, setPointCurrentPage] = useState(1);\r\n  const [pointTotal, setPointTotal] = useState(0);\r\n  const [pointKeyword, setPointKeyword] = useState('');\r\n\r\n  // warningListByPoint\r\n  const [warnings, setWarnings] = useState([]);\r\n  const [warningCurrentPage, setWarningCurrentPage] = useState(1);\r\n  const [warningTotal, setWarningTotal] = useState(0);\r\n\r\n  // projectUserList\r\n  const [users, setUsers] = useState([]);\r\n  const [userCurrentPage, setUserCurrentPage] = useState(1);\r\n  const [userTotal, setUserTotal] = useState(0);\r\n\r\n  const initialValues = {\r\n    ...detail,\r\n    state: detail.state + '',\r\n    project_id: detail.project_id + '',\r\n    point_id: detail.point_id + '',\r\n    warn_id: detail.warn_id + '',\r\n    user_id: detail.user_id + '',\r\n    measure_type: detail.measure_type + ''\r\n  }\r\n  form.setFieldsValue(initialValues)\r\n\r\n  // 获取project\r\n  const getProjects = async (keyword, page) => {\r\n    const projectRes = await projectListSimple({\r\n      get_count: 10,\r\n      start_index: (page - 1) * 10,\r\n      area_code: +sessionStorage.getItem('areaCode') || 0,\r\n      proj_keyword: keyword\r\n    })\r\n    if (projectRes) {\r\n      setProjects(projectRes.records);\r\n      setProjectTotal(projectRes.total_count);\r\n      setProjectCurrentPage(1)\r\n    }\r\n  }\r\n\r\n  // 获取points\r\n  const getPoints = async (keyword, page, project_id) => {\r\n    if (!project_id) return\r\n    const pointRes = await pointListSimple({\r\n      get_count: 10,\r\n      start_index: (page - 1) * 10,\r\n      project_id: +project_id,\r\n      keyword\r\n    })\r\n    if (pointRes) {\r\n      setPoints(pointRes.records);\r\n      setPointTotal(pointRes.total_count);\r\n      setPointCurrentPage(page)\r\n    }\r\n  }\r\n\r\n  // 获取报警\r\n  const getWarns = async (page, point_id) => {\r\n    if (!point_id) return\r\n    const warningRes = await warningListByPoint({\r\n      get_count: 10,\r\n      start_index: (page - 1) * 10,\r\n      point_id: +point_id\r\n    })\r\n    if (warningRes) {\r\n      setWarnings(warningRes.records);\r\n      setWarningTotal(warningRes.total_count);\r\n      setWarningCurrentPage(page)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData () {\r\n      if (props.visible) {\r\n        setDetail(props.detail || defaultDetail);\r\n        setProjectKeywords('');\r\n\r\n        // projectList\r\n        getProjects('', 1)\r\n\r\n        // pointList\r\n        getPoints('', 1, props.detail?.project_id)\r\n\r\n        // warningListByPoint\r\n        getWarns(1, props.detail?.point_id)\r\n        \r\n        // projectUserList\r\n        if (props.detail?.project_id) {\r\n          const userRes = await projectUserList({\r\n            get_count: 10,\r\n            start_index: (userCurrentPage - 1) * 10,\r\n            project_id: +props.detail.project_id\r\n          })\r\n          if (userRes) {\r\n            setUsers(userRes.records);\r\n            setUserTotal(userRes.total_count);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [props.visible]);\r\n\r\n  return (\r\n    <Modal\r\n      title={props.detail ? '编辑信息' : '添加检查数据'}\r\n      footer={null}\r\n      visible={props.visible}\r\n      onCancel={() => {\r\n        setDetail(defaultDetail)\r\n        props.onCancel();\r\n      }}\r\n    >\r\n      <Form className=\"detail-form inspect-form\" onFinish={(values) => {\r\n        props.onSubmit(detail);\r\n      }}\r\n      form={form}\r\n      initialValues={initialValues}\r\n      >\r\n        <Form.Item label=\"工程\" name=\"project_id\"\r\n          rules={[{ required: true, message: '请选择工程' }]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounce(500, (val) => {\r\n              setProjectKeywords(val)\r\n              getProjects(val, 1)\r\n            })}\r\n            onFocus={() => {\r\n              if (projectKeywords) {\r\n                setProjectKeywords('')\r\n                getProjects('', 1)\r\n              }\r\n            }}\r\n            value={detail.project_id + ''}\r\n            disabled={props.detail}\r\n            onChange={async (val) => {\r\n              setDetail({\r\n                ...detail,\r\n                project_id: +val,\r\n                point_id: '',\r\n                warn_id: '',\r\n                user_id: ''\r\n              })\r\n              setWarnings([]);\r\n              setWarningCurrentPage(1);\r\n              setWarningTotal(0)\r\n\r\n              // 重新获取points\r\n              getPoints('', 1, +val)\r\n\r\n              // 重新获取users\r\n              const userRes = await projectUserList({\r\n                get_count: 10,\r\n                start_index: 0,\r\n                project_id: +val\r\n              })\r\n              if (userRes) {\r\n                setUsers(userRes.records);\r\n                setUserTotal(userRes.total_count);\r\n                setUserCurrentPage(1)\r\n              }\r\n            }}\r\n            dropdownRender={(menu) => (\r\n              <section>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <section style={{textAlign: 'right'}}>\r\n                  <Button type=\"link\" disabled={projectCurrentPage === 1}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = projectCurrentPage - 1;\r\n                      getProjects(projectKeywords, page)\r\n                    })}\r\n                  >上一页</Button>\r\n                  <Button type=\"link\" disabled={projectCurrentPage * 10 >= projectTotal}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = projectCurrentPage + 1;\r\n                      getProjects(projectKeywords, page)\r\n                    })}\r\n                  >下一页</Button>\r\n                </section>\r\n              </section>\r\n            )}\r\n          >\r\n            {\r\n              projects.map((item) => {\r\n                return <Option key={item.project_id} value={item.project_id + ''}>{item.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"布点\" name=\"point_id\"\r\n          rules={[{ required: true, message: '请选择布点' }]}\r\n        >\r\n          <Select value={detail.point_id + ''} disabled={props.detail}\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={debounce(500, (val) => {\r\n              setPointKeyword(val)\r\n              getPoints(val, 1, detail.project_id)\r\n            })}\r\n            onFocus={() => {\r\n              if (pointKeyword) {\r\n                setPointKeyword('')\r\n                getPoints('', 1, detail.project_id)\r\n              }\r\n            }}\r\n            onChange={async (val) => {\r\n              setDetail({\r\n                ...detail,\r\n                point_id: +val,\r\n                warn_id: ''\r\n              })\r\n              // 重新获取warns\r\n              getWarns(1, +val)\r\n            }}\r\n            dropdownRender={(menu) => (\r\n              <section>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <section style={{textAlign: 'right'}}>\r\n                  <Button type=\"link\" disabled={pointCurrentPage === 1}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = pointCurrentPage - 1;\r\n                      getPoints(pointKeyword, page, detail.project_id)\r\n                    })}\r\n                  >上一页</Button>\r\n                  <Button type=\"link\" disabled={pointCurrentPage * 10 >= pointTotal}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = pointCurrentPage + 1;\r\n                      getPoints(pointKeyword, page, detail.project_id)\r\n                    })}\r\n                  >下一页</Button>\r\n                </section>\r\n              </section>\r\n            )}\r\n          >\r\n            {\r\n              points.map((item) => {\r\n                return <Option key={item.point_id} value={item.point_id + ''}>{item.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"报警\" name=\"warn_id\">\r\n          <Select value={detail.warn_id + ''} disabled={props.detail}\r\n            onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                warn_id: +val\r\n              })\r\n            }}\r\n            dropdownRender={(menu) => (\r\n              <section>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <section style={{textAlign: 'right'}}>\r\n                  <Button type=\"link\" disabled={warningCurrentPage === 1}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = warningCurrentPage - 1;\r\n                      getWarns(page, detail.point_id)\r\n                    })}\r\n                  >上一页</Button>\r\n                  <Button type=\"link\" disabled={warningCurrentPage * 10 >= warningTotal}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = warningCurrentPage + 1;\r\n                      getWarns(page, detail.point_id)\r\n                    })}\r\n                  >下一页</Button>\r\n                </section>\r\n              </section>\r\n            )}\r\n          >\r\n            {\r\n              warnings.map((item) => {\r\n                return <Option key={item.warn_id} value={item.warn_id + ''}>{`${item.warn_id}(${warnType[item.warn_type]})`}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"执行用户\" name=\"user_id\">\r\n          <Select value={detail.user_id + ''}\r\n            onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                user_id: +val\r\n              })\r\n            }}\r\n            dropdownRender={(menu) => (\r\n              <section>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <section style={{textAlign: 'right'}}>\r\n                  <Button type=\"link\" disabled={userCurrentPage === 1}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = userCurrentPage - 1;\r\n                      const res = await projectUserList({\r\n                        get_count: 10,\r\n                        start_index: (page - 1) * 10,\r\n                        project_id: +detail.project_id\r\n                      })\r\n                      if (res) {\r\n                        setUsers(res.records);\r\n                        setUserTotal(res.total_count);\r\n                        setUserCurrentPage(page);\r\n                      }\r\n                    })}\r\n                  >上一页</Button>\r\n                  <Button type=\"link\" disabled={userCurrentPage * 10 >= userTotal}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = userCurrentPage + 1;\r\n                      const res = await projectUserList({\r\n                        get_count: 10,\r\n                        start_index: (page - 1) * 10,\r\n                        project_id: +detail.project_id\r\n                      })\r\n                      if (res) {\r\n                        setUsers(res.records);\r\n                        setUserTotal(res.total_count);\r\n                        setUserCurrentPage(page);\r\n                      }\r\n                    })}\r\n                  >下一页</Button>\r\n                </section>\r\n              </section>\r\n            )}\r\n          >\r\n            {\r\n              users.map((item) => {\r\n                return <Option key={item.id} value={item.id + ''}>{item.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        {\r\n          props.detail && <>\r\n          <Form.Item label=\"检测完成时间\" name=\"done_timestamp\">\r\n            <DateAndTime value={detail.done_timestamp} onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                done_timestamp: val\r\n              })\r\n            }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"检查结果状态\" name=\"state\">\r\n            <Select value={detail.state + ''} onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                state: +val\r\n              })\r\n            }}\r\n            >\r\n              {\r\n                Object.keys(inspectResult).map((key) => {\r\n                  return <Option value={key + ''} key={key}>{inspectResult[key]}</Option>\r\n                })\r\n              }\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"措施类型\" name=\"measure_type\">\r\n            <Select value={detail.measure_type + ''} onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                measure_type: +val\r\n              })\r\n            }}\r\n            >\r\n              {\r\n                Object.keys(measureType).map((key) => {\r\n                  return <Option value={key + ''} key={key}>{measureType[key]}</Option>\r\n                })\r\n              }\r\n            </Select>\r\n          </Form.Item>\r\n          </>\r\n        }\r\n        <Form.Item>\r\n          <section className=\"form-btn\">\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={throttle(1000, () => {\r\n              if (props.detail) {\r\n                setDetail(props.detail)\r\n              } else {\r\n                setDetail(defaultDetail)\r\n              }\r\n            })}\r\n            >\r\n              重置\r\n            </Button>\r\n          </section>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}","import React from 'react';\r\nimport { Table, Pagination, Input, Tooltip, Modal, Button, message, Select } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { warnType, inspectResult, measureType, termiteType, termiteAmount } from '../../assets/js/constant';\r\nimport { InspectDetail } from './Detail';\r\nimport { getDateTime, DateAndTime } from '../Card/DateAndTime';\r\nimport { SelectArea } from '../../component/SelectArea';\r\nimport { throttle } from 'throttle-debounce';\r\nimport './index.less';\r\n\r\n// api\r\nimport { inspectList, inspectBatchDelete, inspectAdd, inspectChange } from '../../api';\r\n\r\nconst { Option } = Select\r\n\r\nexport default class InspectPage extends React.Component {\r\n  constructor (props) {\r\n    super (props);\r\n    this.state = {\r\n      tableData: [],\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: 30,\r\n      showDetail: false,\r\n      type: 'add',\r\n      detail: null,\r\n      selectedKeys: [],\r\n      // 搜索\r\n      proj_keyword: '',\r\n      point_keyword: '',\r\n      area_code: +sessionStorage.getItem('areaCode') || '',\r\n      warn_type: '',\r\n      state: '',\r\n      measure_type: '',\r\n      begin_timestamp: '',\r\n      end_timestamp: ''\r\n    }\r\n  };\r\n\r\n  componentDidMount () {\r\n    this.getAll();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <section className=\"inspect-page page-view\">\r\n        <header className=\"header\">\r\n          <span className=\"title\">检查数据列表</span>\r\n          <span>\r\n            <Button className=\"add-btn header-btn\" type=\"primary\" disabled={!this.state.selectedKeys.length} onClick={throttle(1000, () => {\r\n              this.onDelete(this.state.selectedKeys)\r\n            })}\r\n            >\r\n              <i className=\"iconfont icon-piliangshanchu1\" />\r\n              批量删除\r\n            </Button>\r\n            <Button className=\"import-btn header-btn\" type=\"primary\">\r\n              <i className=\"iconfont icon-daoru\" />\r\n              导入\r\n            </Button>\r\n            <Button className=\"export-btn header-btn\" type=\"primary\">\r\n              <i className=\"iconfont icon-export\" />\r\n              导出\r\n            </Button>\r\n            <Button className=\"add-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => {\r\n              this.setState({\r\n                showDetail: true,\r\n                type: 'add',\r\n                detail: null\r\n              })\r\n            })}\r\n            >\r\n              <i className=\"iconfont icon-add1\" />\r\n              添加\r\n            </Button> \r\n          </span>\r\n        </header>\r\n        <section className=\"body\">\r\n          <ul className=\"search-box\">\r\n            <li>\r\n              <span className=\"label l-small\">工程：</span>\r\n              <Input\r\n                value={this.state.proj_keyword}\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    proj_keyword: e.target.value\r\n                  })\r\n                }}\r\n                allowClear\r\n                placeholder=\"名称\"\r\n                onPressEnter={() => {\r\n                  this.getAll()\r\n                }}\r\n                style={{ width: 120 }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <span className=\"label l-small\">区域：</span>\r\n              <SelectArea width={320} area_code={this.state.area_code} visible onChange={({code}) => {\r\n                this.setState({ area_code: code})\r\n              }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <span className=\"label l-large\">报警类型：</span>\r\n              <Select value={this.state.warn_type + ''} style={{width: 100}} onChange={(val) => {\r\n                this.setState({ warn_type: +val})\r\n              }}\r\n              >\r\n                {\r\n                  Object.keys(warnType).map((key) => {\r\n                    return <Option value={key + ''} key={key}>{+key === 1 ? '全部' : warnType[key]}</Option>\r\n                  })\r\n                }\r\n              </Select>\r\n            </li>\r\n            <li>\r\n              <span className=\"label l-large\">检查结果：</span>\r\n              <Select value={this.state.state + ''} style={{width: 100}} onChange={(val) => {\r\n                this.setState({ state: +val})\r\n              }}\r\n              >\r\n                {\r\n                  Object.keys(inspectResult).map((key) => {\r\n                    return <Option value={key + ''} key={key}>{+key === 0 ? '全部' : inspectResult[key]}</Option>\r\n                  })\r\n                }\r\n              </Select>\r\n            </li>\r\n            <li>\r\n              <span className=\"label l-large\">措施类型：</span>\r\n              <Select value={this.state.measure_type + ''} style={{width: 100}} onChange={(val) => {\r\n                this.setState({ measure_type: +val})\r\n              }}\r\n              >\r\n                {\r\n                  Object.keys(measureType).map((key) => {\r\n                    return <Option value={key + ''} key={key}>{+key === 0 ? '全部' : measureType[key]}</Option>\r\n                  })\r\n                }\r\n              </Select>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"search-box\" style={{borderTop: 'none'}}>\r\n            <li>\r\n              <span className=\"label l-small\">布点：</span>\r\n              <Input\r\n                value={this.state.point_keyword}\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    point_keyword: e.target.value\r\n                  })\r\n                }}\r\n                allowClear\r\n                placeholder=\"名称、标签\"\r\n                onPressEnter={() => {\r\n                  this.getAll()\r\n                }}\r\n                style={{ width: 120 }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <span className=\"label\">检测完成时间(起始)：</span>\r\n              <DateAndTime value={this.state.begin_timestamp} onChange={(val) => {\r\n                this.setState({ begin_timestamp: val})\r\n              }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <span className=\"label\">检测完成时间(结束)：</span>\r\n              <DateAndTime value={this.state.end_timestamp} onChange={(val) => {\r\n                this.setState({ end_timestamp: val})\r\n              }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <Tooltip title=\"搜素\">\r\n                <Button shape=\"circle\" type=\"primary\" style={{marginRight: 10}} onClick={throttle(1000, this.getAll)}>\r\n                  <i className=\"iconfont icon-sousuo\" />\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"重置\">\r\n                <Button shape=\"circle\" type=\"primary\" onClick={throttle(1000, () => {\r\n                  this.setState(() => ({\r\n                    proj_keyword: '',\r\n                    point_keyword: '',\r\n                    area_code: '',\r\n                    warn_type: '',\r\n                    state: '',\r\n                    measure_type: '',\r\n                    begin_timestamp: '',\r\n                    end_timestamp: ''\r\n                  }), this.getAll)\r\n                })}\r\n                >\r\n                  <i className=\"iconfont icon-zhongzhi\" />\r\n                </Button>\r\n              </Tooltip>\r\n            </li>\r\n          </ul>\r\n          <Table\r\n            dataSource={this.state.tableData}\r\n            rowKey={r => r.inspect_id}\r\n            pagination={false}\r\n            rowSelection={{\r\n              onChange: (keys) => {\r\n                this.setState({\r\n                  selectedKeys: keys\r\n                })\r\n              }\r\n            }}\r\n          >\r\n            <Table.Column title=\"工程\" dataIndex=\"project_name\" key=\"project_name\" />\r\n            <Table.Column title=\"布点\" dataIndex=\"point_name\" key=\"point_name\" />\r\n            <Table.Column title=\"报警类型\" dataIndex=\"warn_type\" key=\"warn_type\"\r\n              render={(val, _) => (<span>{warnType[val]}</span>)}\r\n            />\r\n            <Table.Column title=\"执行用户\" dataIndex=\"user_name\" key=\"user_name\" />\r\n            <Table.Column title=\"检查完成时间\" dataIndex=\"done_timestamp\" key=\"done_timestamp\"\r\n              render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\r\n            />\r\n            <Table.Column title=\"检查结果状态\" dataIndex=\"state\" key=\"state\"\r\n              render={(val, _) => (<span>{inspectResult[val]}</span>)}\r\n            />\r\n            <Table.Column title=\"措施类型\" dataIndex=\"measure_type\" key=\"measure_type\"\r\n              render={(val, _) => (<span>{measureType[val]}</span>)}\r\n            />\r\n            <Table.Column title=\"白蚁类型\" dataIndex=\"termite_type\" key=\"termite_type\"\r\n              render={(val, _) => (<span>{termiteType[val]}</span>)}\r\n            />\r\n            <Table.Column title=\"蚁量\" dataIndex=\"termite_amount\" key=\"termite_amount\"\r\n              render={(val, _) => (<span>{termiteAmount[val]}</span>)}\r\n            />\r\n            {/* <Table.Column title=\"备注信息\" dataIndex=\"comment\" key=\"comment\"/>\r\n            <Table.Column title=\"图片文件\" dataIndex=\"image_file\" key=\"image_file\"/> */}\r\n            <Table.Column title=\"操作\" width=\"100px\" dataIndex=\"operation\" key=\"operation\"\r\n              render={(_, record) => (\r\n                <>\r\n                  <Tooltip title=\"修改\">\r\n                    <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => {\r\n                      this.setState({\r\n                        showDetail: true,\r\n                        type: 'edit',\r\n                        detail: record\r\n                      })\r\n                    })} \r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title=\"删除\">\r\n                    <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete([record.inspect_id]))} />\r\n                  </Tooltip>\r\n                </>\r\n              )}\r\n            />\r\n          </Table>\r\n          <Pagination\r\n            defaultCurrent={this.state.currentPage}\r\n            pageSize={this.state.pageSize}\r\n            showTotal={() => `总数 ${this.state.total} `}\r\n            total={this.state.total}\r\n            locale={{\r\n              items_per_page: '每页行数',\r\n            }}\r\n            showSizeChanger\r\n            onShowSizeChange={(currentPage, pageSize) => {\r\n              this.setState({\r\n                currentPage: 1,\r\n                pageSize\r\n              }, () => {\r\n                this.getAll()\r\n              });\r\n            }}\r\n            onChange={(pageNumber) => {\r\n              this.setState({\r\n                currentPage: pageNumber\r\n              }, () => {\r\n                this.getAll()\r\n              });\r\n            }}\r\n          />\r\n        </section>\r\n      \r\n        {/* 添加或者编辑 */}\r\n        <InspectDetail\r\n          visible={this.state.showDetail}\r\n          onCancel={() => {\r\n            this.setState({\r\n              showDetail: false,\r\n              detail: null\r\n            })\r\n          }}\r\n          onSubmit={(values) => this.onSubmit(values)}\r\n          detail={this.state.detail}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n  \r\n  // 分页获取\r\n  getAll = async () => {\r\n    const res = await inspectList({\r\n      get_count: this.state.pageSize,\r\n      start_index: (this.state.currentPage - 1) * this.state.pageSize,\r\n      proj_keyword: this.state.proj_keyword,\r\n      point_keyword: this.state.point_keyword,\r\n      area_code: this.state.area_code,\r\n      warn_type: this.state.warn_type,\r\n      state: this.state.state,\r\n      measure_type: this.state.measure_type,\r\n      begin_timestamp: this.state.begin_timestamp,\r\n      end_timestamp: this.state.end_timestamp\r\n    });\r\n    if (res) {\r\n      this.setState({\r\n        tableData: res.records,\r\n        total: res.total_count\r\n      })\r\n    }\r\n  }\r\n\r\n  // 删除\r\n  onDelete = (id) => {\r\n    Modal.confirm({\r\n      title: '确认删除选中的检查数据?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        const res = await inspectBatchDelete(id, {})\r\n        if (res) {\r\n          this.getAll();\r\n        }\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    })\r\n  }\r\n\r\n  // 添加或者修改\r\n  onSubmit = async (values) => {\r\n    const res = this.state.type === 'add' ?\r\n    await inspectAdd(values) : await inspectChange(values.inspect_id, values);\r\n    if (res) {\r\n      this.setState({\r\n        showDetail: false,\r\n        detail: null\r\n      });\r\n      message.success(`${this.state.type === 'add' ? '添加成功' : '修改成功'}`);\r\n      this.getAll();\r\n    }\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Select, Button, Modal, Divider } from 'antd';\r\nimport { warningType, confirmRes } from '../../assets/js/constant';\r\nimport { DateAndTime } from '../Card/DateAndTime';\r\nimport { userList, pointList } from '../../api';\r\nimport { throttle } from 'echarts';\r\n\r\nconst { Option } = Select;\r\n\r\nconst defaultDetail = {\r\n  warn_id: '001',\r\n  point_id: '',\r\n  warn_type: 3,\r\n  detect_timestamp: 0,\r\n  confirm_timestamp: 0,\r\n  confirm_user_id: '',\r\n  confirm_res: ''\r\n}\r\n\r\nexport const WarningDetail = (props) => {\r\n  const [detail, setDetail] = useState(defaultDetail);\r\n  const [form] = Form.useForm();\r\n  // pointList\r\n  const [points, setPoints] = useState([]);\r\n  const [pointCurrentPage, setPointCurrentPage] = useState(1);\r\n  const [pointTotal, setPointTotal] = useState(0);\r\n\r\n  // userList\r\n  const [users, setUsers] = useState([]);\r\n  const [userCurrentPage, setUserCurrentPage] = useState(1);\r\n  const [userTotal, setUserTotal] = useState(0);\r\n\r\n  const initialValues = {\r\n    ...detail,\r\n    warn_type: detail.warn_type + '',\r\n    point_id: detail.point_id + '',\r\n    confirm_user_id: detail.confirm_user_id + '',\r\n    confirm_res: detail.confirm_res + ''\r\n  }\r\n  form.setFieldsValue(initialValues)\r\n\r\n  useEffect(() => {\r\n    async function fetchData () {\r\n      if (props.visible) {\r\n        setDetail(props.detail || defaultDetail);\r\n        const pointRes = await pointList({\r\n          get_count: 10,\r\n          start_index: (pointCurrentPage - 1) * 10,\r\n          area_code: +sessionStorage.getItem('areaCode') || 0\r\n        })\r\n        if (pointRes) {\r\n          setPoints(pointRes.records);\r\n          setPointTotal(pointRes.total_count);\r\n        }\r\n\r\n        const userRes = await userList({\r\n          get_count: 10,\r\n          start_index: (userCurrentPage - 1) * 10,\r\n        })\r\n        if (userRes) {\r\n          setUsers(userRes.records);\r\n          setUserTotal(userRes.total_count);\r\n        }\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [props.visible]);\r\n\r\n  return (\r\n    <Modal\r\n      title={props.detail ? '编辑信息' : '添加报警数据'}\r\n      footer={null}\r\n      visible={props.visible}\r\n      onCancel={() => {\r\n        setDetail(defaultDetail)\r\n        props.onCancel();\r\n      }}\r\n    >\r\n      <Form className=\"detail-form warning-form\" onFinish={(values) => {\r\n        props.onSubmit(detail);\r\n      }}\r\n      form={form}\r\n      initialValues={initialValues}\r\n      >\r\n        <Form.Item label=\"布点\" name=\"point_id\"\r\n          rules={[{ required: true, message: '请输入布点' }]}\r\n        >\r\n          <Select value={detail.point_id + ''} disabled={props.detail}\r\n            onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                point_id: +val\r\n              })\r\n            }}\r\n            dropdownRender={(menu) => (\r\n              <section>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <section style={{textAlign: 'right'}}>\r\n                  <Button type=\"link\" disabled={pointCurrentPage === 1}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = pointCurrentPage - 1;\r\n                      const res = await pointList({\r\n                        get_count: 10,\r\n                        start_index: (page - 1) * 10,\r\n                        area_code: +sessionStorage.getItem('areaCode') || 0\r\n                      })\r\n                      if (res) {\r\n                        setPoints(res.records);\r\n                        setPointTotal(res.total_count);\r\n                        setPointCurrentPage(page);\r\n                      }\r\n                    })}\r\n                  >上一页</Button>\r\n                  <Button type=\"link\" disabled={pointCurrentPage * 10 >= pointTotal}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = pointCurrentPage + 1;\r\n                      const res = await pointList({\r\n                        get_count: 10,\r\n                        start_index: (page - 1) * 10,\r\n                        area_code: +sessionStorage.getItem('areaCode') || 0\r\n                      })\r\n                      if (res) {\r\n                        setPoints(res.records);\r\n                        setPointTotal(res.total_count);\r\n                        setPointCurrentPage(page);\r\n                      }\r\n                    })}\r\n                  >下一页</Button>\r\n                </section>\r\n              </section>\r\n            )}\r\n          >\r\n            {\r\n              points.map((item) => {\r\n                return <Option key={item.point_id} value={item.point_id + ''}>{item.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"报警类型\" name=\"warn_type\" rules={[{ required: true }]}>\r\n          <Select value={detail.warn_type + ''} onChange={(val) => {\r\n            setDetail({\r\n              ...detail,\r\n              warn_type: +val\r\n            })\r\n          }}\r\n          >\r\n            {\r\n              Object.keys(warningType).map((key) => {\r\n                return <Option value={key + ''} key={key}>{warningType[key]}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"探测时间\" name=\"detect_timestamp\">\r\n          <DateAndTime value={detail.detect_timestamp} onChange={(val) => {\r\n            setDetail({\r\n              ...detail,\r\n              detect_timestamp: val\r\n            })\r\n          }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"确认时间\" name=\"confirm_timestamp\">\r\n          <DateAndTime value={detail.confirm_timestamp} onChange={(val) => {\r\n            setDetail({\r\n              ...detail,\r\n              confirm_timestamp: val\r\n            })\r\n          }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"确认用户\" name=\"confirm_user_id\">\r\n          <Select value={detail.confirm_user_id + ''}\r\n            onChange={(val) => {\r\n              setDetail({\r\n                ...detail,\r\n                confirm_user_id: +val\r\n              })\r\n            }}\r\n            dropdownRender={(menu) => (\r\n              <section>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <section style={{textAlign: 'right'}}>\r\n                  <Button type=\"link\" disabled={userCurrentPage === 1}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = userCurrentPage - 1;\r\n                      const res = await userList({\r\n                        get_count: 10,\r\n                        start_index: (page - 1) * 10,\r\n                      })\r\n                      if (res) {\r\n                        setUsers(res.records);\r\n                        setUserTotal(res.total_count);\r\n                        setUserCurrentPage(page);\r\n                      }\r\n                    })}\r\n                  >上一页</Button>\r\n                  <Button type=\"link\" disabled={userCurrentPage * 10 >= userTotal}\r\n                    onClick={throttle(1000, async () => {\r\n                      const page = userCurrentPage + 1;\r\n                      const res = await userList({\r\n                        get_count: 10,\r\n                        start_index: (page - 1) * 10,\r\n                      })\r\n                      if (res) {\r\n                        setUsers(res.records);\r\n                        setUserTotal(res.total_count);\r\n                        setUserCurrentPage(page);\r\n                      }\r\n                    })}\r\n                  >下一页</Button>\r\n                </section>\r\n              </section>\r\n            )}\r\n          >\r\n            {\r\n              users.map((item) => {\r\n                return <Option key={item.id} value={item.id + ''}>{item.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"报警确认结果\" name=\"confirm_res\">\r\n          <Select value={detail.confirm_res + ''} onChange={(val) => {\r\n            setDetail({\r\n              ...detail,\r\n              confirm_res: +val\r\n            })\r\n          }}\r\n          >\r\n            {\r\n              Object.keys(confirmRes).map((key) => {\r\n                return <Option value={key + ''} key={key}>{confirmRes[key]}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <section className=\"form-btn\">\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={throttle(1000, () => {\r\n              if (props.detail) {\r\n                setDetail(props.detail)\r\n              } else {\r\n                setDetail(defaultDetail)\r\n              }\r\n            })}\r\n            >\r\n              重置\r\n            </Button>\r\n          </section>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}","import React, {useEffect, useState} from 'react';\nimport { Modal, Button, Table, Form, Select, message, Tooltip } from 'antd';\nimport { inspectList, inspectAdd, inspectChange } from '../../api/index';\nimport { getDateTime, DateAndTime } from '../../pages/Card/DateAndTime';\nimport { inspectResult, measureType, termiteType, termiteAmount, warnType } from '../../assets/js/constant';\n\nconst { Option } = Select;\n\nconst getTitle = (type) => {\n  let title = '';\n  switch (type) {\n    case 'list':\n      title = '检查列表';\n      break;\n    case 'add':\n      title = '添加检查';\n      break;\n    case 'edit':\n      title = '修改检查';\n      break;\n    default:\n      title = ''\n  }\n  return title;\n}\n\nexport const WarnInspect = (props) => {\n  const [tableData, setTableData] = useState([]);\n  const [type, setType] = useState('list')\n  const [inspect, setInspect] = useState({});\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    setType('list')\n    setInspect({\n      inspect_id: '',\n      project_id: props.warn?.project_id,\n      point_id: props.warn?.point_id,\n      warn_id: props.warn?.warn_id,\n      user_id: props.warn?.confirm_user_id,\n      done_timestamp: 0,\n      state: '',\n      measure_type: '',\n    })\n    async function fetchData () {\n      const res = await inspectList({\n        get_count: 1000,\n        start_index: 0,\n        warn_id: props.warn?.warn_id\n      });\n      if (res) {\n        setTableData(res.records)\n      }\n    }\n    fetchData();\n  }, [props.warn?.warn_id])\n\n  return (\n    <Modal\n      title={getTitle(type)}\n      width={type === 'list' ? 800 : 520}\n      visible={props.visible}\n      onCancel={() => {\n        type === 'list' ? props.onCancel() : setType('list');\n      }}\n      footer={null}\n    >\n      { type === 'list' &&\n        <>\n        <Table pagination={false} dataSource={tableData} scroll={{y: 400}} size=\"small\">\n          <Table.Column title=\"工程\" dataIndex=\"project_name\" key=\"project_name\" />\n          <Table.Column title=\"检查完成时间\" dataIndex=\"done_timestamp\" key=\"done_timestamp\"\n            render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\n          />\n          <Table.Column title=\"检查结果状态\" dataIndex=\"state\" key=\"state\"\n            render={(val, _) => (<span>{inspectResult[val]}</span>)}\n          />\n          <Table.Column title=\"措施类型\" dataIndex=\"measure_type\" key=\"measure_type\"\n            render={(val, _) => (<span>{measureType[val]}</span>)}\n          />\n          <Table.Column title=\"白蚁类型\" dataIndex=\"termite_type\" key=\"termite_type\"\n            render={(val, _) => (<span>{termiteType[val]}</span>)}\n          />\n          <Table.Column title=\"蚁量\" dataIndex=\"termite_amount\" key=\"termite_amount\"\n            render={(val, _) => (<span>{termiteAmount[val]}</span>)}\n          />\n          <Table.Column title=\"操作\" width=\"60px\" dataIndex=\"operation\" key=\"operation\"\n            render={(_, record) => (\n              <>\n                <Tooltip title=\"修改\">\n                  <i className=\"iconfont icon-xiugai\" style={{color: '#1890ff'}} onClick={() => {\n                    setInspect(record)\n                    form.setFieldsValue({\n                      ...record,\n                      state: record.state + '',\n                      measure_type: record.measure_type + '',\n                    })\n                    setType('edit')\n                  }} \n                  />\n                </Tooltip>\n                {/* <Tooltip title=\"删除\">\n                  <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete([record.inspect_id]))} />\n                </Tooltip> */}\n              </>\n            )}\n          />\n        </Table>\n        <section style={{textAlign: 'center', marginTop: 10}}>\n          <Button type=\"primary\" onClick={() => {\n            setType('add');\n            setInspect({\n              inspect_id: '',\n              project_id: props.warn?.project_id,\n              point_id: props.warn?.point_id,\n              warn_id: props.warn?.warn_id,\n              user_id: props.warn?.confirm_user_id,\n              done_timestamp: 0,\n              state: '',\n              measure_type: '',\n            })\n          }}\n          >添加检查</Button>\n        </section>\n        </>\n      }\n      {\n        (type === 'add' || type === 'edit') && <>\n          <Form initialValues={{\n            ...inspect,\n            state: inspect.state + '',\n            measure_type: inspect.measure_type + '',\n          }}\n          className=\"detail-form inspect-form\"\n          onFinish={async () => {\n            const res = type === 'add' ? await inspectAdd(inspect) : await inspectChange(inspect.inspect_id, inspect);\n            if (res) {\n              message.success(type === 'add' ? '添加成功' : '修改成功');\n              const listRes = await inspectList({\n                get_count: 1000,\n                start_index: 0,\n                warn_id: props.warn?.warn_id\n              });\n              if (listRes) {\n                setTableData(listRes.records);\n                setType('list')\n              }\n            }\n          }}\n          form={form}\n          >\n            <Form.Item label=\"工程\" name=\"project_id\">\n              <span>{props.warn?.project_name}</span>\n            </Form.Item>\n            <Form.Item label=\"布点\" name=\"point_id\">\n              <span>{props.warn?.point_name}</span>\n            </Form.Item>\n            <Form.Item label=\"报警\" name=\"warn_id\">\n              <span>{`${props.warn?.warn_id}(${warnType[props.warn?.warn_type]})`}</span>\n            </Form.Item>\n            <Form.Item label=\"执行用户\" name=\"user_id\">\n              <span>{props.warn?.confirm_user_name}</span>\n            </Form.Item>\n            {\n              type === 'edit' && <>\n                <Form.Item label=\"检测完成时间\" name=\"done_timestamp\">\n                  <DateAndTime value={inspect.done_timestamp} onChange={(val) => {\n                    setInspect({\n                      ...inspect,\n                      done_timestamp: val\n                    })\n                  }}\n                  />\n                </Form.Item>\n                <Form.Item label=\"检查结果状态\" name=\"state\">\n                  <Select value={inspect.state + ''} onChange={(val) => {\n                    setInspect({\n                      ...inspect,\n                      state: +val\n                    })\n                  }}\n                  >\n                    {\n                      Object.keys(inspectResult).map((key) => {\n                        return <Option value={key + ''} key={key}>{inspectResult[key]}</Option>\n                      })\n                    }\n                  </Select>\n                </Form.Item>\n                <Form.Item label=\"措施类型\" name=\"measure_type\">\n                  <Select value={inspect.measure_type + ''} onChange={(val) => {\n                    setInspect({\n                      ...inspect,\n                      measure_type: +val\n                    })\n                  }}\n                  >\n                    {\n                      Object.keys(measureType).map((key) => {\n                        return <Option value={key + ''} key={key}>{measureType[key]}</Option>\n                      })\n                    }\n                  </Select>\n                </Form.Item>\n              </>\n            }\n            <Form.Item>\n              <section className=\"form-btn\">\n                <Button type=\"primary\" htmlType=\"submit\">\n                  提交\n                </Button>\n                { type === 'edit' &&\n                  <Button htmlType=\"button\" onClick={() => {\n                    setInspect({\n                      project_id: props.warn?.project_id,\n                      point_id: props.warn?.point_id,\n                      warn_id: props.warn?.warn_id,\n                      user_id: props.warn?.confirm_user_id,\n                      done_timestamp: 0,\n                      state: '',\n                      measure_type: '',\n                    })\n                  }}\n                  >\n                    重置\n                  </Button>\n                }\n              </section>\n            </Form.Item>\n          </Form>\n        </>\n      }\n    </Modal>\n  )\n};\n","import React from 'react';\r\nimport { Table, Pagination, Input, Tooltip, Modal, Button, message, Select } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { warningType, confirmRes } from '../../assets/js/constant';\r\nimport { WarningDetail } from './Detail';\r\nimport { getDateTime, DateAndTime } from '../Card/DateAndTime';\r\nimport { SelectArea } from '../../component/SelectArea';\r\nimport { WarnInspect } from '../../component/WarnInspect';\r\nimport { throttle } from 'throttle-debounce';\r\nimport './index.less';\r\n\r\n// api\r\nimport { warningList, warningBatchDelete, warningAdd, warningChange } from '../../api';\r\n\r\nconst { Option } = Select\r\n\r\nexport default class WarningPage extends React.Component {\r\n  constructor (props) {\r\n    super (props);\r\n    this.state = {\r\n      tableData: [],\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: 30,\r\n      showDetail: false,\r\n      type: 'add',\r\n      detail: null,\r\n      selectedKeys: [],\r\n      showInspect: false,\r\n      selectWarn: null,\r\n      // 搜索\r\n      proj_keyword: '',\r\n      point_keyword: '',\r\n      area_code: +sessionStorage.getItem('areaCode') || '',\r\n      warn_type: '',\r\n      confirm_res: '',\r\n      begin_timestamp: '',\r\n      end_timestamp: ''\r\n    }\r\n  };\r\n\r\n  componentDidMount () {\r\n    this.getAll();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <section className=\"warning-page page-view\">\r\n        <header className=\"header\">\r\n          <span className=\"title\">报警数据列表</span>\r\n          <span>\r\n            <Button className=\"add-btn header-btn\" type=\"primary\" disabled={!this.state.selectedKeys.length} onClick={throttle(1000, () => {\r\n              this.onDelete(this.state.selectedKeys)\r\n            })}\r\n            >\r\n              <i className=\"iconfont icon-piliangshanchu1\" />\r\n              批量删除\r\n            </Button>\r\n            <Button className=\"import-btn header-btn\" type=\"primary\">\r\n              <i className=\"iconfont icon-daoru\" />\r\n              导入\r\n            </Button>\r\n            <Button className=\"export-btn header-btn\" type=\"primary\">\r\n              <i className=\"iconfont icon-export\" />\r\n              导出\r\n            </Button>\r\n            <Button className=\"add-btn header-btn\" type=\"primary\" onClick={throttle(1000, () => {\r\n              this.setState({\r\n                showDetail: true,\r\n                type: 'add',\r\n                detail: null\r\n              })\r\n            })}\r\n            >\r\n              <i className=\"iconfont icon-add1\" />\r\n              添加\r\n            </Button> \r\n          </span>\r\n        </header>\r\n        <section className=\"body\">\r\n          <ul className=\"search-box\">\r\n            <li>\r\n              <span className=\"label l-small\">工程：</span>\r\n              <Input\r\n                value={this.state.proj_keyword}\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    proj_keyword: e.target.value\r\n                  })\r\n                }}\r\n                allowClear\r\n                placeholder=\"名称\"\r\n                onPressEnter={() => {\r\n                  this.getAll()\r\n                }}\r\n                style={{ width: 100 }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <span className=\"label l-small\">布点：</span>\r\n              <Input\r\n                value={this.state.point_keyword}\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    point_keyword: e.target.value\r\n                  })\r\n                }}\r\n                allowClear\r\n                placeholder=\"名称、标签\"\r\n                onPressEnter={() => {\r\n                  this.getAll()\r\n                }}\r\n                style={{ width: 120 }}\r\n              />\r\n            </li>\r\n            \r\n            <li>\r\n              <span className=\"label l-small\">区域：</span>\r\n              <SelectArea width={320} area_code={this.state.area_code} visible onChange={({code}) => {\r\n                this.setState({ area_code: code})\r\n              }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <span className=\"label l-large\">报警类型：</span>\r\n              <Select value={this.state.warn_type + ''} style={{width: 100}} onChange={(val) => {\r\n                this.setState({ warn_type: +val})\r\n              }}\r\n              >\r\n                {\r\n                  Object.keys(warningType).map((key) => {\r\n                    return <Option value={key + ''} key={key}>{+key === 1 ? '全部' : warningType[key]}</Option>\r\n                  })\r\n                }\r\n              </Select>\r\n            </li>\r\n            <li>\r\n              <span className=\"label l-large\">确认结果：</span>\r\n              <Select value={this.state.confirm_res + ''} style={{width: 100}} onChange={(val) => {\r\n                this.setState({ confirm_res: +val})\r\n              }}\r\n              >\r\n                {\r\n                  Object.keys(confirmRes).map((key) => {\r\n                    return <Option value={key + ''} key={key}>{+key === 0 ? '全部' : confirmRes[key]}</Option>\r\n                  })\r\n                }\r\n              </Select>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"search-box\" style={{borderTop: 'none'}}>\r\n            <li>\r\n              <span className=\"label\">检测完成时间(起始)：</span>\r\n              <DateAndTime value={this.state.begin_timestamp} onChange={(val) => {\r\n                this.setState({ begin_timestamp: val})\r\n              }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <span className=\"label\">检测完成时间(结束)：</span>\r\n              <DateAndTime value={this.state.end_timestamp} onChange={(val) => {\r\n                this.setState({ end_timestamp: val})\r\n              }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <Tooltip title=\"搜素\">\r\n                <Button shape=\"circle\" type=\"primary\" style={{marginRight: 10}} onClick={throttle(1000, this.getAll)}>\r\n                  <i className=\"iconfont icon-sousuo\" />\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"重置\">\r\n                <Button shape=\"circle\" type=\"primary\" onClick={throttle(1000, () => {\r\n                  this.setState(() => ({\r\n                    proj_keyword: '',\r\n                    point_keyword: '',\r\n                    area_code: '',\r\n                    warn_type: '',\r\n                    confirm_res: '',\r\n                    begin_timestamp: '',\r\n                    end_timestamp: ''\r\n                  }), this.getAll)\r\n                })}\r\n                >\r\n                  <i className=\"iconfont icon-zhongzhi\" />\r\n                </Button>\r\n              </Tooltip>\r\n            </li>\r\n          </ul>\r\n          <Table\r\n            dataSource={this.state.tableData}\r\n            rowKey={r => r.warn_id}\r\n            pagination={false}\r\n            rowSelection={{\r\n              onChange: (keys) => {\r\n                this.setState({\r\n                  selectedKeys: keys\r\n                })\r\n              }\r\n            }}\r\n          >\r\n            <Table.Column title=\"工程\" dataIndex=\"project_name\" key=\"project_name\" />\r\n            <Table.Column title=\"布点\" dataIndex=\"point_name\" key=\"point_name\" />\r\n            <Table.Column title=\"报警类型\" dataIndex=\"warn_type\" key=\"warn_type\"\r\n              render={(val, _) => (<span>{warningType[val]}</span>)}\r\n            />\r\n            <Table.Column title=\"探测时间\" dataIndex=\"detect_timestamp\" key=\"detect_timestamp\"\r\n              render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\r\n            />\r\n            <Table.Column title=\"确认时间\" dataIndex=\"confirm_timestamp\" key=\"confirm_timestamp\"\r\n              render={(val, _) => (<span>{getDateTime(val).join(' ')}</span>)}\r\n            />\r\n            <Table.Column title=\"确认用户\" dataIndex=\"confirm_user_name\" key=\"confirm_user_name\" />\r\n            <Table.Column title=\"报警确认结果\" dataIndex=\"confirm_res\" key=\"confirm_res\"\r\n              render={(val, _) => (<span>{confirmRes[val]}</span>)}\r\n            />\r\n            <Table.Column title=\"操作\" width=\"100px\" dataIndex=\"operation\" key=\"operation\"\r\n              render={(_, record) => (\r\n                <>\r\n                  <Tooltip title=\"修改\">\r\n                    <i className=\"iconfont icon-xiugai\" onClick={throttle(1000, () => {\r\n                      this.setState({\r\n                        showDetail: true,\r\n                        type: 'edit',\r\n                        detail: record\r\n                      })\r\n                    })} \r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title=\"检查\">\r\n                    <i className=\"iconfont icon-chouchajiancha\" onClick={throttle(1000, () => {\r\n                      this.setState({\r\n                        selectWarn: record,\r\n                        showInspect: true\r\n                      })\r\n                    })}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title=\"删除\">\r\n                    <i className=\"iconfont icon-shanchu\" onClick={throttle(1000, () => this.onDelete([record.warn_id]))} />\r\n                  </Tooltip>\r\n                </>\r\n              )}\r\n            />\r\n          </Table>\r\n          <Pagination\r\n            defaultCurrent={this.state.currentPage}\r\n            pageSize={this.state.pageSize}\r\n            showTotal={() => `总数 ${this.state.total} `}\r\n            total={this.state.total}\r\n            locale={{\r\n              items_per_page: '每页行数',\r\n            }}\r\n            showSizeChanger\r\n            onShowSizeChange={(currentPage, pageSize) => {\r\n              this.setState({\r\n                currentPage: 1,\r\n                pageSize\r\n              }, () => {\r\n                this.getAll()\r\n              });\r\n            }}\r\n            onChange={(pageNumber) => {\r\n              this.setState({\r\n                currentPage: pageNumber\r\n              }, () => {\r\n                this.getAll()\r\n              });\r\n            }}\r\n          />\r\n        </section>\r\n      \r\n        {/* 添加或者编辑 */}\r\n        <WarningDetail\r\n          visible={this.state.showDetail}\r\n          onCancel={() => {\r\n            this.setState({\r\n              showDetail: false,\r\n              detail: null\r\n            })\r\n          }}\r\n          onSubmit={(values) => this.onSubmit(values)}\r\n          detail={this.state.detail}\r\n        />\r\n\r\n        {/* 报警对应的检查 */}\r\n        <WarnInspect\r\n          warn={this.state.selectWarn}\r\n          visible={this.state.showInspect}\r\n          onCancel={() => {\r\n            this.setState({\r\n              showInspect: false\r\n            })\r\n          }}\r\n\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n  \r\n  // 分页获取\r\n  getAll = async () => {\r\n    const res = await warningList({\r\n      get_count: this.state.pageSize,\r\n      start_index: (this.state.currentPage - 1) * this.state.pageSize,\r\n      proj_keyword: this.state.proj_keyword,\r\n      point_keyword: this.state.point_keyword,\r\n      area_code: this.state.area_code,\r\n      warn_type: this.state.warn_type,\r\n      confirm_res: this.state.confirm_res,\r\n      begin_timestamp: this.state.begin_timestamp,\r\n      end_timestamp: this.state.end_timestamp\r\n    });\r\n    if (res) {\r\n      this.setState({\r\n        tableData: res.records,\r\n        total: res.total_count\r\n      })\r\n    }\r\n  }\r\n\r\n  // 删除\r\n  onDelete = (id) => {\r\n    Modal.confirm({\r\n      title: '确认删除选中的报警数据?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        const res = await warningBatchDelete(id, {})\r\n        if (res) {\r\n          this.getAll();\r\n        }\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    })\r\n  }\r\n\r\n  // 添加或者修改\r\n  onSubmit = async (values) => {\r\n    const res = this.state.type === 'add' ?\r\n    await warningAdd(values) : await warningChange(values.warn_id, values);\r\n    if (res) {\r\n      this.setState({\r\n        showDetail: false,\r\n        detail: null\r\n      });\r\n      message.success(`${this.state.type === 'add' ? '添加成功' : '修改成功'}`);\r\n      this.getAll();\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { storeInstance } from './store/index';\n\n// component\nimport SiderNavbar from './component/SiderNavbar';\nimport { Header } from './component/Header';\nimport LoginPage from './pages/Login';\nimport HomePage from './pages/Home';\nimport ProjectPage from './pages/Project';\nimport ProjectUserPage from './pages/ProjectUser';\nimport PointPage from './pages/Point';\nimport DevicePage from './pages/Device';\nimport CardPage from './pages/Card';\nimport AdminPage from './pages/Admin';\nimport UserPage from './pages/User';\nimport DetectPage from './pages/Detect';\nimport InspectPage from './pages/Inspect';\nimport WarningPage from './pages/Warning';\n\nimport './App.less';\n\nexport default class App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      showChangePwd: false,\n      oldPwd: '',\n      newPwd: '',\n      confirmPwd: ''\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLogin: sessionStorage.getItem('isLogin') ? true : false\n    })\n  }\n\n  render () {\n    return (\n      <Provider store={storeInstance}>\n        <section className=\"app-page\">\n          <Router>\n            {\n              this.state.isLogin ?\n              <>\n                <aside className=\"navbar-content\">\n                  <SiderNavbar onSubmit={(isLogin) => {\n                    this.setState({isLogin})\n                  }}\n                  />\n                </aside>\n                <section className=\"app-content\">\n                  <header className=\"app-header\">\n                    <Header onSubmit={(isLogin) => {\n                      this.setState({isLogin})\n                    }}\n                    />\n                  </header>\n                  <section className=\"app-body\">\n                    <section className=\"app-page\">\n                      <Switch>\n                        <Route path=\"/home\" component={HomePage} />\n                        <Route path=\"/project\" exact component={ProjectPage} />\n                        <Route path=\"/project/user/:proId\" exact component={ProjectUserPage} />\n                        <Route path=\"/point\" component={PointPage} />\n                        <Route path=\"/device\" component={DevicePage} />\n                        <Route path=\"/card\" component={CardPage} />\n                        <Route path=\"/detect\" component={DetectPage} />\n                        <Route path=\"/inspect\" component={InspectPage} />\n                        <Route path=\"/warning\" component={WarningPage} />\n                        <Route path=\"/admin\" component={AdminPage} />\n                        <Route path=\"/user\" component={UserPage} />\n                        <Redirect to=\"/home\" />\n                      </Switch>\n                    </section>\n                  </section>\n                </section>\n              </> :\n              <Switch>\n                <Route path=\"/login\" exact render={props => <LoginPage {...props} onSubmit={(isLogin) => {\n                  this.setState({isLogin})\n                }}\n                                                            />} \n                />\n                <Redirect path=\"/\" exact to=\"/login\" />\n              </Switch>\n            }\n          </Router>\n        </section>\n      </Provider>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport 'antd/dist/antd.css'\nimport './assets/iconfont/iconfont.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}